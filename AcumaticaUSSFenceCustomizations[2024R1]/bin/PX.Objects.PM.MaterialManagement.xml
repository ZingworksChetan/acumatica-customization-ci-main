<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PX.Objects.PM.MaterialManagement</name>
    </assembly>
    <members>
        <member name="M:PX.Objects.PM.MaterialManagement.INAdjustmentEntrySplitMaterialExt.IsProjectTaskEnabled(PX.Objects.IN.INTran,System.Func{PX.Objects.IN.INTran,System.ValueTuple{System.Nullable{System.Boolean},System.Nullable{System.Boolean}}})">
            <summary>
            Overrides <see cref="M:PX.Objects.IN.INRegisterEntryBase.IsProjectTaskEnabled(PX.Objects.IN.INTran)" />
            </summary>
        </member>
        <member name="M:PX.Objects.PM.MaterialManagement.INPIEntryMaterialExt.ReadCostLayers(PX.Objects.IN.INPIDetail,System.Func{PX.Objects.IN.INPIDetail,System.Collections.Generic.IEnumerable{PX.Objects.IN.INPIEntry.CostLayerInfo}})">
            <summary>
            Overrides <see cref="M:PX.Objects.IN.INPIEntry.ReadCostLayers(PX.Objects.IN.INPIDetail)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.PM.MaterialManagement.INPIEntryMaterialExt.CreateProjectedTran(PX.Objects.IN.INPIEntry.CostLayerInfo,PX.Objects.IN.INPIDetail,PX.Objects.IN.INItemSiteSettings,System.Func{PX.Objects.IN.INPIEntry.CostLayerInfo,PX.Objects.IN.INPIDetail,PX.Objects.IN.INItemSiteSettings,PX.Objects.IN.INPIEntry.ProjectedTranRec})">
            <summary>
            Overrides <see cref="M:PX.Objects.IN.INPIEntry.CreateProjectedTran(PX.Objects.IN.INPIEntry.CostLayerInfo,PX.Objects.IN.INPIDetail,PX.Objects.IN.INItemSiteSettings)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.PM.MaterialManagement.INPIEntryMaterialExt.GetIntersectionQty(PX.Objects.IN.INPIEntry.CostLayerInfo,PX.Objects.IN.INPIDetail,System.Func{PX.Objects.IN.INPIEntry.CostLayerInfo,PX.Objects.IN.INPIDetail,System.Decimal})">
            Overrides <see cref="M:PX.Objects.IN.INPIEntry.GetIntersectionQty(PX.Objects.IN.INPIEntry.CostLayerInfo,PX.Objects.IN.INPIDetail)"/>
        </member>
        <member name="M:PX.Objects.PM.MaterialManagement.GraphExtensions.ItemAvailability.Allocated.SOOrderItemAvailabilityAllocatedProjectExtension.GetAllocatedQty(PX.Objects.SO.SOLine)">
            Uses <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOOrderItemAvailabilityAllocatedExtension.GetAllocatedQty(PX.Objects.SO.SOLine)"/>
        </member>
        <member name="M:PX.Objects.PM.MaterialManagement.GraphExtensions.ItemAvailability.Allocated.SOOrderItemAvailabilityAllocatedProjectExtension.Check(PX.Objects.IN.ILSMaster,PX.Objects.IN.IStatus)">
            Uses <see cref="M:PX.Objects.IN.GraphExtensions.ItemAvailabilityExtension`3.Check(PX.Objects.IN.ILSMaster,PX.Objects.IN.IStatus)"/>
        </member>
        <member name="M:PX.Objects.PM.MaterialManagement.GraphExtensions.ItemAvailability.Allocated.SOOrderItemAvailabilityAllocatedProjectExtension.FormatQty(System.Nullable{System.Decimal})">
            Uses <see cref="M:PX.Objects.IN.GraphExtensions.ItemAvailabilityExtension`3.FormatQty(System.Nullable{System.Decimal})"/>
        </member>
    </members>
</doc>
