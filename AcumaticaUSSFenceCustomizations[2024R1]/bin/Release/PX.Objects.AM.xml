<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PX.Objects.AM</name>
    </assembly>
    <members>
        <member name="T:PX.Objects.AM.AMDebug">
            <summary>
            Used for Manufacturing Development
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMDebug.MeasureElapsed``1(System.Func{``0},System.String)">
            <summary>
            Run a process and measure its processing time
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="msg">trace message</param>
            <example>
            var x = AMDebug.MeasureElapsed(() => GraphUIDEquals(taskInfo.NativeKey, UID), "GraphUIDEquals");
            var y = AMDebug.MeasureElapsed(() => taskInfo.NativeKey == UID);
            </example>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.AMDebug.MeasureElapsedTicks``1(System.Func{``0},System.String)">
            <summary>
            Run a process and measure its processing ticks
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <param name="msg">trace message</param>
            <example>
            var x = AMDebug.MeasureElapsedTicks(() => GraphUIDEquals(taskInfo.NativeKey, UID), "GraphUIDEquals");
            var y = AMDebug.MeasureElapsedTicks(() => taskInfo.NativeKey == UID);
            </example>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.AMBatchEntryBase">
            <summary>
            Base graph with split/LS members
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBatchSimpleEntryBase">
            <summary>
            Base graph without split/LS members
            (Implementation copy of INRegisterEntryBase)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.IsWorkingDay">
            <summary>
            Indicates if the date is a working day
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.Date">
            <summary>
            Date of date info
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.StartTime">
            <summary>
            Date Start Time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.EndTime">
            <summary>
            Date End Time. 
            (Could be an overnight time)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.OvernightTime">
            <summary>
            Indicates the start/end times span overnight. (End time is before start time)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.IsExceptionDate">
            <summary>
            Indicates the date information came from a calendar exception and not standard date info.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.WorkingMinutes">
            <summary>
            Total working minutes
            (start/end minus break time)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.WorkingHours">
            <summary>
            Total working hours
            (start/end minus break time)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.WorkingHoursDecimal">
            <summary>
            Total working hours
            (start/end minus break time)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.BreakMinutes">
            <summary>
            Break time in minutes
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.BreakTimes">
            <summary>
            List of break times
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDateInfo.DateDescription">
            <summary>
            Description of the date such as exception date description
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.MinutesToHours(System.Int32,System.Int32)">
            <summary>
            Convert/calculate minutes to hours
            </summary>
            <param name="minutes">minutes</param>
            <param name="roundPrecision">decimal rounding precision</param>
            <returns>Number of Hours</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.GetDateMinutes(System.DateTime,System.DateTime)">
            <summary>
            Calculate the minutes between the two dates.
            (Handles end time greater than start time which indicates an overnight shift)
            </summary>
            <param name="startDate">Start Date Time</param>
            <param name="endDate">End Date Time</param>
            <returns>Total Minutes</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.EarlierStartTime(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the earlier start time from the two date info objects
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The earlier start time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.EarlierStartTimeAsDate(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the earlier start time from the two date info objects
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The earlier start time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.LaterStartTime(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the later start time from the two date info objects
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The later start time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.LaterStartTimeAsDate(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the later start time from the two date info objects
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The later start time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.EarlierEndTime(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the earlier end time from the two date info objects. Overnight end times are treated as later dates (next morning)
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The earlier end time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.EarlierEndTimeAsDate(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the earlier end time from the two date info objects. Overnight end times are treated as later dates (next morning)
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The earlier end time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.LaterEndTime(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the later end time from the two date info objects. Overnight end times are treated as later dates (next morning)
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The later end time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.LaterEndTimeAsDate(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Selects the later end time from the two date info objects. Overnight end times are treated as later dates (next morning)
            </summary>
            <param name="dateInfo1">Date 1</param>
            <param name="dateInfo2">Date 2</param>
            <returns>The later end time</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.GapTime(PX.Objects.AM.AMDateInfo,PX.Objects.AM.AMDateInfo)">
            <summary>
            Find the gap between the two date info in units of minutes.
            A gap exists when the end date of one date info is before the start of the other. With
            overlapping end/start times the result is zero.
            </summary>
            <returns>Total Gap Minutes</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.TotalMinutesBetween(System.TimeSpan,System.TimeSpan)">
            <summary>
            Total minutes between the two timespans
            </summary>
            <param name="startTimeSpan">start time</param>
            <param name="endTimeSpan">end time</param>
            <returns>total minutes (rounded up)</returns>
        </member>
        <member name="M:PX.Objects.AM.AMDateInfo.ConditionDateTime(System.DateTime)">
            <summary>
            Condition date time for hours/minutes only
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDocumentRelease">
            <summary>
            Manufacturing batch release graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECRApprovalAutomation`5">
            <summary>
            The helper for approval automation that does not set the Hold value to true (while the base class of the helper sets the Hold value to true).
            </summary>
            <typeparam name="SourceAssign"></typeparam>
            <typeparam name="Approved"></typeparam>
            <typeparam name="Rejected"></typeparam>
            <typeparam name="Hold"></typeparam>
            <typeparam name="SetupApproval"></typeparam>
        </member>
        <member name="T:PX.Objects.AM.InvalidWorkCalendarException">
            <summary>
            Indicates work calendar is invalid
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InvalidBOMException">
            <summary>
            Indicates BOM is invalid
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMTransactionFailedCheckException">
            <summary>
            Used when checking transaction for material, move qty, etc.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMTransactionFailedCheckException.IsWarning">
            <summary>
            Is the exception based on a warning (which might allow for transactions to process)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMFormulaInterpreter.IsFormula(System.String)">
            <summary>
            Is the given value a field formula
            </summary>
            <param name="value">formula field value</param>
            <returns>True when value is a formula</returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMFormulaInterpreter.FormulaContainsVariable(System.String,System.String)">
            <summary>
            Does the variable exist within the formula?
            </summary>
            <param name="formula"></param>
            <param name="variable"></param>
            <returns>True when found</returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMFormulaInterpreter.ExtractFormulaVariables(System.String)">
            <summary>
            pull out the variables existing in the given formula
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ActiveBOMRestrictorAttribute">
            <summary>
            <see cref="T:PX.Data.PXRestrictorAttribute"/> for <see cref="T:PX.Objects.AM.AMBomItem"/> to restrict by boms which contain at least one active revision
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ActiveProjectOrContractForProdAttribute">
            <summary>
            Manufacturing active project attribute for visible in production projects
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels">
            <summary>
            Manufacturing Attribute levels
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeLevels.BOM">
            <summary>
            BOM
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeLevels.Operation">
            <summary>
            Operation
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeLevels.Order">
            <summary>
            Prod
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeLevels.Desc.BOM">
            <summary>
            BOM
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeLevels.Desc.Operation">
            <summary>
            Operation
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeLevels.Desc.Order">
            <summary>
            Prod Order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels.bOM">
            <summary>
            Attribute Levels BOM
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels.operation">
            <summary>
            Attribute Levels Operation
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels.order">
            <summary>
            Attribute Levels Prod Order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels.BomListAttribute">
            <summary>
            List for BOM Attributes
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeLevels.ProdOrderListAttribute">
            <summary>
            List for Production Order Attributes
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource">
            <summary>
            Manufacturing Attribute Source
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeSource.BOM">
            <summary>
            BOM Sourced Attribute
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeSource.Production">
            <summary>
            Production Sourced Attribute
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeSource.Configuration">
            <summary>
            Configuration Sourced Attribute
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMAttributeSource.OrderType">
            <summary>
            Order Type Sourced Attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeSource.Desc.BOM">
            <summary>
            BOM Sourced Attribute
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeSource.Desc.Production">
            <summary>
            Production Sourced Attribute
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeSource.Desc.Configuration">
            <summary>
            Configuration Sourced Attribute
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMAttributeSource.Desc.OrderType">
            <summary>
            Configuration Sourced Attribute
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMAttributeSource.GetDescription(System.Nullable{System.Int32})">
            <summary>
            Get the list description of the given source
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMAttributeSource.IsOrderLevelAttributes(System.Nullable{System.Int32})">
            <summary>
            Is the given attribute source an order level attribute
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource.bOM">
            <summary>
            BOM Sourced Attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource.production">
            <summary>
            Production Sourced Attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource.configuration">
            <summary>
            Configuration Sourced Attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource.orderType">
            <summary>
            Order Type Sourced Attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMAttributeSource.ProductionListAttribute">
            <summary>
            List for Manufacturing Attribute Source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMBomStatus">
            <summary>
            Bill of Material Revision Status
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMBomStatus.Hold">
            <summary>
            Hold
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMBomStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMBomStatus.Archived">
            <summary>
            Archived
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMBomStatus.PendingApproval">
            <summary>
            PendingApproval
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMBomStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMBomStatus.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMBomStatus.GetListDescription(System.String)">
            <summary>
            Get the list label of the attribute value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute">
            <summary>
            Reverse the logic to allow the base cury values to contain the entered/formula values with the cury fields being calculated.
            The standard PXDBCurrencyAttribute assumse cury is the field being entered/formula and the base is calculated.
            (Blend/copy of PXDBCurrencyAttribute and PXCurrencyHelper - 5.30.1128)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute.RecalculateCondition">
            <summary>Accepts an IBqlWhere/IBqlUnary predicate that is used to decide whether to
            recalculate the field this attribute is attached to when <see cref="F:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute._ResultField"/> is updated.
            If this is not set, then it will not recalculate.<br/>
            <tt>IBqlCreator</tt>.</summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="keyField">Field in this table used as a key for CurrencyInfo
            table. If 'null' is passed then the constructor will try to find field
            in this table named 'CuryInfoID'.</param>
            <param name="resultField">Field in this table to store the result of
            currency conversion. If 'null' is passed then the constructor will try
            to find field in this table name of which start with 'base'.</param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute.#ctor(System.Int32,System.Type,System.Type)">
            <summary>
            Constructor
            </summary>
            <param name="precision">Precision for value of 'decimal' type</param>
            <param name="keyField">Field in this table used as a key for CurrencyInfo
            table. If 'null' is passed then the constructor will try to find field
            in this table named 'CuryInfoID'.</param>
            <param name="resultField">Field in this table to store the result of
            currency conversion. If 'null' is passed then the constructor will try
            to find field in this table name of which start with 'base'.</param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute.RecalculateBaseValue(PX.Data.PXCache,System.Object,System.String)">
            <summary>
            Recalculates Base Field value of a Cury Field Value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMDBCurrencyBaseAttribute.CalcBaseValues``1(PX.Data.PXCache,System.Object)">
            <inheritdoc cref="M:PX.Objects.CM.PXDBCurrencyAttribute.CalcBaseValues``1(PX.Data.PXCache,System.Object)"/>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMDocType">
            <summary>
            Manufacturing Document/Transaction Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.Move">
            <summary>
            Manufacturing Move Transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.Labor">
            <summary>
            Manufacturing Labor Transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.Material">
            <summary>
            Manufacturing Material Transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.WipAdjust">
            <summary>
            Manufacturing Wip Adjustment
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.ProdCost">
            <summary>
            Manufacturing Cost Transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.Disassembly">
            <summary>
            Manufacturing Disassembly Transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.VendorShipment">
            <summary>
            Vendor Shipment (for references only - data is not stored in the same table as the other types)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMDocType.Clock">
            <summary>
            Clock Entry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMDocType.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.Move">
            <summary>
            Manufacturing Move Transaction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.Labor">
            <summary>
            Manufacturing Labor Transaction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.Material">
            <summary>
            Manufacturing Material Transaction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.WipAdjust">
            <summary>
            Manufacturing Wip Adjustment
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.ProdCost">
            <summary>
            Manufacturing Cost Transaction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.Disassembly">
            <summary>
            Manufacturing Disassembly Transaction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.VendorShipment">
            <summary>
            Vendor Shipment
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMDocType.Desc.Clock">
            <summary>
            Clock
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMDocType.IsDocTypeMaterial(System.String)">
            <summary>
            Is the given AM Document Type a type that allows material
            </summary>
            <param name="docType"></param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMDocType.IsDocTypeMove(System.String)">
            <summary>
            If the doc type is a move transaction related doc type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMECRStatus">
            <summary>
            Bill of Material Revision Status
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMECRStatus.Hold">
            <summary>
            Hold
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMECRStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMECRStatus.Approved">
            <summary>
            Archived
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMECRStatus.PendingApproval">
            <summary>
            PendingApproval
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMECRStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMECRStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMECRStatus.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals">
            <summary>
            MRP Bucket Units
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMIntervals.Day">
            <summary>
            Days
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMIntervals.Week">
            <summary>
            Weeks
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMIntervals.Month">
            <summary>
            Months
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMIntervals.Year">
            <summary>
            Years
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMIntervals.Desc.Day">
            <summary>
            Days
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMIntervals.Desc.Week">
            <summary>
            Weeks
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMIntervals.Desc.Month">
            <summary>
            Months
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMIntervals.Desc.Year">
            <summary>
            Years
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals.day">
            <summary>
            Days
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals.week">
            <summary>
            Weeks
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals.month">
            <summary>
            Months
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals.year">
            <summary>
            Years
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMIntervals.ListAttribute">
            <summary>
            List for MRP Bucket Units
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMLaborType">
            <summary>
            Manufacturing Labor Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMLaborType.Direct">
            <summary>
            Manufacturing Direct Labor
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMLaborType.Indirect">
            <summary>
            Manufacturing Indirect Labor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMLaborType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMLaborType.Desc.Direct">
            <summary>
            Direct Labor
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMLaborType.Desc.Indirect">
            <summary>
            Indirect Labor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMLaborType.direct">
            <summary>
            Manufacturing Direct Labor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMLaborType.indirect">
            <summary>
            Manufacturing Indirect Labor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMLotSerialNbrAttribute">
            <summary>
            Manufacturing lot/serial number attribute
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMLotSerialNbrAttribute.RaiseMaterialLotSerialNeverIssued``1(PX.Data.PXCache,System.Object,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Raise the cache exception handling
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMLotSerialNbrAttribute.GetParent(PX.Data.PXCache,PX.Objects.AM.AMMTranSplit)">
            <summary>
            Get the split's parent record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMLotSerialNbrAttribute.MaterialLotSerialNbrIssuedToOrder(PX.Data.PXGraph,PX.Objects.AM.AMMTran,System.String)">
            <summary>
            For the given returning AMMTran record, was it ever issued to the production order.
            Match on: Order Type, ProdOrdID, InventoryID, and Lot/Serial nbr
            </summary>
            <param name="graph">Calling graph</param>
            <param name="returningAMMTran">Returning material record</param>
            <param name="lotSerialNbr">Lot/Serial number to search for</param>
            <returns>True when the lot/serial number was found as issued to the production order</returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMLotSerialNbrAttribute.FindFirstMaterialIssuedLotSerialNbr(PX.Data.PXGraph,PX.Objects.AM.AMMTran,System.String)">
            <summary>
            First the first issue record that matches the returning ammtran record and lot/serial number.
            Match on: Order Type, ProdOrdID, InventoryID, and Lot/Serial nbr
            </summary>
            <param name="graph">Calling graph</param>
            <param name="returningAMMTran">Returning material record</param>
            <param name="lotSerialNbr">Lot/Serial number to search for</param>
            <returns>First found split record. If no return this indicates the lot/serial number was never issued</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType">
            <summary>
            Manufacturing material types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMMaterialType.Regular">
            <summary>
            Standard/regular material
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMMaterialType.Phantom">
            <summary>
            Phantom material item
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMMaterialType.Supplemental">
            <summary>
            Supplemental items are supporting items included with a manufactured/configured item
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMMaterialType.Subcontract">
            <summary>
            Subcontract for Outside Processing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMMaterialType.Desc.Regular">
            <summary>
            Standard/regular material
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMMaterialType.Desc.Phantom">
            <summary>
            Phantom material item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMMaterialType.Desc.Supplemental">
            <summary>
            Supplemental items are supporting items included with a manufactured/configured item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMMaterialType.Desc.Subcontract">
            <summary>
            Subcontract for Outside Processing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.regular">
            <summary>
            Standard/regular material
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.phantom">
            <summary>
            Phantom material item
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.supplemental">
            <summary>
            Supplemental items are supporting items included with a manufactured/configured item
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.subcontract">
            <summary>
            Supplemental items are supporting items included with a manufactured/configured item
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.ListAttribute">
            <summary>
            List for BOM 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.ConfigListAttribute">
            <summary>
            List for configurations
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMMaterialType.ProductionListAttribute">
            <summary>
            List for Production Material
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMOrderTypeFieldAttribute">
            <summary>
            Standard Production order type field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMOrderTypeSelectorAttribute">
            <summary>
            Manufacturing order type selector
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMOrderTypeSelectorAttribute.#ctor(System.Type)">
            <summary>
            Selector by given order type function
            </summary>
            <param name="functionRestrictor"></param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMOrderTypeSelectorAttribute.#ctor(System.Type,System.Type[])">
            <summary>
            Selector by given order type function
            </summary>
            <param name="functionRestrictor"></param>
            <param name="fieldList"></param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMOrderTypeSelectorAttribute.GetQueryCommandByFunction(System.Type)">
            <summary>
            Build query by restricting selector to a given order type function
            </summary>
            <param name="functionRestrictor">OrderTypeFunction BQL Constant</param>
            <returns>Composed Bql Command</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMProdMatlLotSerialNbrAttribute">
            <summary>
            Production Material lot/serial number attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMRowStatus">
            <summary>
            Row Status Attribute indicating changes
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMRowStatus.Unchanged">
            <summary>
            Unchanged = 0
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMRowStatus.Updated">
            <summary>
            Updated = 1
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMRowStatus.Inserted">
            <summary>
            Inserted = 2
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMRowStatus.Deleted">
            <summary>
            Deleted = 3
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMRowStatus.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMShipType">
            <summary>
            Vendor WIP Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMShipType.Shipment">
            <summary>
            Shipment
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMShipType.Return">
            <summary>
            Return
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMShipType.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMShipType.Desc.Shipment">
            <summary>
            Shipment
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMShipType.Desc.Return">
            <summary>
            Return
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMShipLineType.WIP">
            <summary>
            WIP
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMShipLineType.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMShipLineType.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMShipLineType.Desc.WIP">
            <summary>
            WIP
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMShipLineType.Desc.Material">
            <summary>
            Material
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource">
            <summary>
            Subcontract Source Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMSubcontractSource.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMSubcontractSource.Purchase">
            <summary>
            Purchase Standard Purchase process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMSubcontractSource.DropShip">
            <summary>
            DropShip Material goes straight to Vendor
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMSubcontractSource.VendorSupplied">
            <summary>
            VendorSupplied Vendor supplies the material
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMSubcontractSource.ShipToVendor">
            <summary>
            ShipToVendor Material issued to Production Order to be shipped to Vendor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMSubcontractSource.Desc.None">
            <summary>
            None
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMSubcontractSource.Desc.Purchase">
            <summary>
            Purchase Standard Purchase process
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMSubcontractSource.Desc.DropShip">
            <summary>
            DropShip Material goes straight to Vendor
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMSubcontractSource.Desc.VendorSupplied">
            <summary>
            VendorSupplied Vendor supplies the material
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.AMSubcontractSource.Desc.ShipToVendor">
            <summary>
            ShipToVendor Material issued to Production Order to be shipped to Vendor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.none">
            <summary>
            None
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.purchase">
            <summary>
            Purchase Standard Purchase process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.dropShip">
            <summary>
            DropShip Material goes straight to Vendor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.vendorSupplied">
            <summary>
            VendorSupplied Vendor supplies the material
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.shipToVendor">
            <summary>
            ShipToVendor Material issued to Production Order to be shipped to Vendor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubcontractSource.ListAttribute">
            <summary>
            List for Production Material Subcontract Source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMSubItemRawAttribute">
            <summary>
            Allows entry of the Sub item CD value while keeping the validcomborequired default from the INSubItem segmented on the fly setting
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMSubItemRawAttribute.#ctor(System.Type)">
            <summary>
            Replaces the SubItemRawExtAttribute call with the same signature only removing the fixed ValidComboRequied = false setting.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTimeFormatAttribute.TimeSpanFormat.ListAttribute">
            <summary>
            List for Time Formatting
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.WIPadjustment">
            <summary>
            WIP Entry from production close process [XXX]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.WIPvariance">
            <summary>
            WIP Entry from production close process [XVV]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.VarOvhd">
            <summary>
            Manufacturing Variable Overhead Transaction [XVO]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.FixOvhd">
            <summary>
            Manufacturing Fixed Overhead Transaction [XFO]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Tool">
            <summary>
            Manufacturing Tool transaction [XTL]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.BFLabor">
            <summary>
            Manufacturing Backflush Labor transaction [XBL]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Labor">
            <summary>
            Manufacturing Labor transaction [XLA]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.IndirectLabor">
            <summary>
            Manufacturing Indirect Labor transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Machine">
            <summary>
            Manufacturing Machine transaction [XMC]
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Issue">
            <summary>
            Material Issue transaction ('III')
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Receipt">
            <summary>
            Finished Good (Bi-Product) Receipt transaction ('RCP')
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Return">
            <summary>
            Return Issue transaction ('RET')
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Adjustment">
            <summary>
            Production adjustment ('ADJ')
            Typical use is a negative move transaction
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.ScrapWriteOff">
            <summary>
            Scrap Write Off ('XSW')
            Scrap that is removed from the order to a journal entry
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.ScrapQuarantine">
            <summary>
            Scrap Quarantine ('XSQ')
            Scrap that is removed from the order to inventory quarantine location
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.OperWIPComplete">
            <summary>
            Operation WIP Complete Amount (OWC) [aka 'MFG to Inv.' by operation]
            Value of WIP Complete (MFG to Inv.) at an operation
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.InventoryCostAdj">
            <summary>
            Inventory Cost Adjustment (ICA)
            Tracks the variance when a negative move is done and the cost in inventory is different than what was originally moved
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AMTranType.Disassembly">
            <summary>
            MFG Disassembly
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.ListDesc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.TranDesc">
            <summary>
            Constants for transaction descriptions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.wIPadjustment">
            <summary>
            WIP Entry from WIP Adjustment entry page
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.wIPvariance">
            <summary>
            WIP Entry from production close process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.varOvhd">
            <summary>
            Manufacturing Variable Overhead transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.fixOvhd">
            <summary>
            Manufacturing Fixed Overhead transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.tool">
            <summary>
            Manufacturing Tool transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.bFLabor">
            <summary>
            Manufacturing Backflush Labor transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.labor">
            <summary>
            Manufacturing  Labor transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.indirectLabor">
            <summary>
            Manufacturing Indirect Labor transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.machine">
            <summary>
            Manufacturing Machine transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.issue">
            <summary>
            Material Issue transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.receipt">
            <summary>
            Finished Good Receipt transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType._return">
            <summary>
            Material Return Issue transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.adjustment">
            <summary>
            Production adjustment
            Typical use is a negative move transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.scrapWriteOff">
            <summary>
            Production Scrap Write-Off
            Typical use is a move or labor transaction with QtyScrapped != 0
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.scrapQuarantine">
            <summary>
            Production Scrap Quarantine
            Typical use is a move or labor transaction with QtyScrapped != 0
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AMTranType.operWIPComplete">
            <summary>
            Operation WIP Complete Amount (OWC) [aka 'MFG to Inv.' by operation]
            Value of WIP Complete (MFG to Inv.) at an operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMTranType.GetTranDescription(System.String)">
            <summary>
            Get the Manufacturing Transaction description based on the tran type
            </summary>
            <param name="tranType">AMTranType string</param>
            <returns>Prod Entry message</returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMVendorShipmentContactAttribute.#ctor(System.Type)">
            <summary>
            Ctor. Internaly, it expects POShipContact as a POContact type
            </summary>
            <param name="SelectType">Must have type IBqlSelect. This select is used for both selecting <br/> 
            a source Contact record from which PO Contact is defaulted and for selecting version of POContact, <br/>
            created from source Contact (having  matching ContactID, revision and IsDefaultContact = true).<br/>
            - so it must include both records. See example above. <br/>
            </param>		
        </member>
        <member name="M:PX.Objects.AM.Attributes.AMVendorShipmentAddressAttribute.#ctor(System.Type)">
            <summary>
            Internaly, it expects POShipAddress as a POAddress type. 
            </summary>
            <param name="SelectType">Must have type IBqlSelect. This select is used for both selecting <br/> 
            a source Address record from which PO address is defaulted and for selecting default version of POAddress, <br/>
            created  from source Address (having  matching ContactID, revision and IsDefaultContact = true) <br/>
            if it exists - so it must include both records. See example above. <br/>
            </param>		
        </member>
        <member name="T:PX.Objects.AM.Attributes.APSRoughCutProcessActions">
            <summary>
            Actions for the Rough Cut Planning processing screen (<see cref="T:PX.Objects.AM.APSRoughCutProcess"/>)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AutoNoteAttribute">
            <summary>
            A variation of <see cref="T:PX.Data.PXNoteAttribute"/> to auto create a <see cref="T:PX.Data.Note"/> record.
            Standard <see cref="T:PX.Data.PXNoteAttribute"/> does not provide a way to auto create the Note record (did back in version 4.X).
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.AutoNoteAttribute.SkipNoteRecordCheck">
            <summary>
            Controls if the NoteID value will be a lookup before insert.
            When True there is no check.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.AutoNoteAttribute.EnsureNewNoteID(PX.Data.PXCache,System.Object,System.String)">
            <summary>
            Copy of EnsureNoteID but remove the SelectSingle for performance.
            We are using this to avoid the NoteID lookup and just insert.
            Use only when inserting new DAC object and as a result a new noteid
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.AutoNoteSkipNoteRecordCheckScope">
            <summary>
            Assist in the change of value of SkipNoteRecordCheck during runtime
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.BomIDAttribute">
            <summary>
            Standard BOM ID field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.BOMIDSelectorAttribute">
            <summary>
            Manufacturing BOM ID PX Selector Attribute for all non archived BOMs
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.BOMIDSelectorAttribute.#ctor">
            <summary>
            Display full list of unique BOM IDS
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.BOMIDSelectorAttribute.#ctor(System.Type)">
            <summary>
            BOMID attribute with a search type and predefined column list
            </summary>
            <param name="searchType"></param>
        </member>
        <member name="T:PX.Objects.AM.Attributes.BOMIDActiveSelectorAttribute">
            <summary>
            Manufacturing BOM ID PX Selector Attribute for all Active BOMs
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.BOMIDActiveSelectorAttribute.#ctor">
            <summary>
            Display full list of unique BOM IDS
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.BOMIDActiveSelectorAttribute.#ctor(System.Type)">
            <summary>
            BOMID attribute with a search type and predefined column list
            </summary>
            <param name="searchType"></param>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CalcOptions">
            <summary>
            Manufacturing Configuration Calculate Options
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ColorCodingForOrders">
            <summary>
            Color coding for Production Schedule Board. Production Schedule part.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CombineInfoAttribute">
            <summary>
            Combines value from different fields from the same dac into a "/" delimited string.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ConfigKeyFormats">
            <summary>
            Manufacturing Configuration Key Formats
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ConfigOptionFixedIncludeAttribute">
            <summary>
            Manufacturing configuration option - fixed include attribute.
            (Links Qty Required and Fixed Include fields based on defaults and needing a formula field)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ConfigRevisionStatus">
            <summary>
            Configuration Revision Statuses
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ConfigRevisionStatus.Active">
            <summary>
            Active revision ("A")
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ConfigRevisionStatus.Inactive">
            <summary>
            Inactive revision ("I")
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ConfigRevisionStatus.Pending">
            <summary>
            Pending revision ("P")
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ControlPointAttribute">
            <summary>
            Standard Control Point field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CostMethod">
            <summary>
            Production costing methods. Indicates the different costing methods available for production completion unit cost calculations.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.CostMethod.Estimated">
            <summary>
            Estimated costing method.
            Only/Default option until "CostMethod" was implemented
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.CostMethod.Actual">
            <summary>
            Actual costing
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.CostMethod.Standard">
            <summary>
            Standard costing (for standard cost items only)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CostMethod.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.CostMethod.Desc.Standard">
            <summary>
            Standard costing description (for standard cost items only)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.CostMethod.Desc.Actual">
            <summary>
            Actual costing description
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.CostMethod.Desc.Estimated">
            <summary>
            Estimated costing method description
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CostMethod.standard">
            <summary>
            Standard costing (for standard cost items only)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CostMethod.estimated">
            <summary>
            Estimated costing method.
            Only/Default option until "CostMethod" was implemented
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CostMethod.actual">
            <summary>
            Actual costing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CostMethod.ListAllAttribute">
            <summary>
            List attribute used for DAC fields
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.CTPProcessActionOptions.RunCTP">
            <summary>
            Run CTP Process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.CTPProcessActionOptions.Accept">
            <summary>
            Accept CTP 
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.CTPProcessActionOptions.Reject">
            <summary>
            Reject CTP 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CTPProcessActionOptions.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CTPProcessActionOptions.runCTP">
            <summary>
            Run CTP Process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CTPProcessActionOptions.accept">
            <summary>
            Accept CTP
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.CTPProcessActionOptions.reject">
            <summary>
            Reject CTP
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DateRangeInq.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DaysOffsetDateAttribute">
            <summary>
            Date attribute to indicate an offset of days to set the min/max date values
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.DaysOffsetDateAttribute._MinOffsetValue">
            <summary>
            Min date offset in days
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.DaysOffsetDateAttribute._MaxOffsetValue">
            <summary>
            Max date offset in days
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.DaysOffsetDateAttribute.MinOffsetDays">
            <summary>
            Minimum date offset in days. The offset adds days to the current business date to define the minimum date value.
            If no offset is defined then the default min date value is used without an offset
            </summary>
            
            <example>
            The example below shows a StartDate field that will not allow a date less that yesterday based on the current business date of today.
            
            <code>
            [DaysOffsetDate(MinOffsetDays = "-1")]
                        public virtual DateTime? StartDate { get; set; }
            
            </code>
            
            </example>
        </member>
        <member name="P:PX.Objects.AM.Attributes.DaysOffsetDateAttribute.MaxOffsetDays">
            <summary>
            Maximum date offset in days. The offset adds days to the current business date to define the maximum date value.
            If no offset is defined then the default max date value is used without an offset
            </summary>
            
            <example>
            The example below shows a EndDate field that will not allow a date less that yesterday and greater than 30 days from now based on the current business date of today.
            
            <code>
            [DaysOffsetDate(MinOffsetDays = "-1", MaxOffsetDays = "30")]
                        public virtual DateTime? EndDate { get; set; }
            
            </code>
            
            </example>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DefaultMarkForAttribute">
            <summary>
            Default the mark for field value based on <see cref="T:PX.Objects.IN.InventoryItem"/> settings for <see cref="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMDefaultMarkFor"/>
            (Use the attribute on the Mark for Field)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DirectLaborAttribute">
            <summary>
            Manufacturing Direct Labor Selector Attribute.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DisableDecrementOnDeleteLineNbrScope">
            <summary>
            Represents a scope used to shut down <see cref="T:PX.Data.PXLineNbrAttribute"/> DecrementOnDelete option.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DocStatus">
            <summary>
            Manufacturing Document Status
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.DocStatus.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ECOIDAttribute">
            <summary>
            Standard BOM ID field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ECRIDAttribute">
            <summary>
            Standard BOM ID field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateDBQuantityAttribute">
            <summary>
            Handle non inventory with UOM conversion issues for the estimate module
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateIDAttribute">
            <summary>
            Standard Estimate ID field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateIDSelectAllAttribute">
            <summary>
            Manufacturing Estimate PX Selector Attribute for all Estimates/Revisions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateIDSelectAllAttribute.#ctor">
            <summary>
            Manufacturing Estimate Select All PX Selector Attribute.
            Fields displayed in selector:
            AMEstimateItem.estimateID; AMEstimateItem.revisionID; AMEstimateItem.status; 
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateIDSelectAllAttribute.#ctor(System.Type[])">
            <summary>
            Manufacturing Estimate Select All PX Selector Attribute.
            Search is defined, pass the columns to display in the selector.
            Available table AMEstimateItem
            </summary>
            <param name="colList">Columns to display in selector</param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateIDSelectAllAttribute.#ctor(System.Type)">
            <summary>
            EstimateID SelectAll attribute with a search type and predefined column list
            </summary>
            <param name="searchType"></param>
        </member>
        <member name="P:PX.Objects.AM.Attributes.EstimateIDSelectAllAttribute.ColumnList">
            <summary>
            Column list for EstimateID selector
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateIDSelectPrimaryAttribute">
            <summary>
            Manufacturing Estimate PX Selector Attribute for all Estimates/Revisions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.EstimateIDSelectPrimaryAttribute.ColumnList">
            <summary>
            Column list for EstimateID selector
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute">
            <summary>
            Estimate inventory CD attribute for Estimate Inventory records.
            Allows the user of the CD value to support both inventory (found in Inventory Item) and non-inventory (items not yet existing)
            while supporting inventory segments
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.DimensionAttributeFieldVerifying(PX.Data.PXCache,PX.Data.PXFieldVerifyingEventArgs)">
            <summary>
            Validate the entered dimension
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.GetDimensionAttribute(PX.Data.PXCache,System.Object,System.String)">
            <summary>
            Get the PXDimensionAttribute instance on the given field name
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.SetReferenceTaxCategory(PX.Data.PXGraph,PX.Objects.AM.IEstimateInventory,PX.Objects.IN.InventoryItem)">
            <summary>
            Estimate tax category is on the reference record - set from the given Inventory Item record as needed
            </summary>
            <param name="graph"></param>
            <param name="estimateInventory"></param>
            <param name="inventoryItem"></param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.RemoveMaskSeparators(PX.Data.PXSegment[],System.String)">
            <summary>
            Remove the mask separators to get the value without the display added separators
            </summary>
            <param name="segments">Segments related to the INVENTORY dimension</param>
            <param name="mask">Field mask</param>
            <returns>mask less separators</returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.IsExistingInventoryCD(PX.Data.PXGraph,System.String)">
            <summary>
            Does the given CD value currently exist in Inventory
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.FindByInventoryCD(PX.Data.PXGraph,System.String)">
            <summary>
            Find/Search for the inventory record by CD value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.IsDimensionValid``1(PX.Data.PXCache,System.String)">
            <summary>
            Is the given dimension valid
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateInventoryRawAttribute.EstimateDimensionSelectorAttribute">
            <summary>
            PXDimensionSelectorAttribute with the selector validate value as false
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateSource">
            <summary>
            Estimate Source Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.EstimateSource.Estimate">
            <summary>
            Estimate
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.EstimateSource.SalesOrder">
            <summary>
            Sales Order
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.EstimateSource.Opportunity">
            <summary>
            Opportunity
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateSource.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.EstimateStatus.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ForecastInterval">
            <summary>
            MRP Forecast Intervals
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ForecastInterval.OneTime">
            <summary>
            OneTime = O
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ForecastInterval.Weekly">
            <summary>
            Weekly = W
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ForecastInterval.Monthly">
            <summary>
            Monthly = M
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ForecastInterval.Yearly">
            <summary>
            Yearly = Y
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ForecastInterval.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ForecastInterval.GetEndDate(System.String,System.DateTime)">
            <summary>
            Get end date based on the begin date and the interval type
            </summary>
            <param name="interval">Forecast interval type</param>
            <param name="beginDate">Begin date</param>
            <returns>Calculated end date</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.FormulaStringAttribute">
            <summary>
            String attribute for formula based fields.
            Helps to identify all formula fields.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.IndirectLaborAttribute">
            <summary>
            Manufacturing Indirect Labor Selector Attribute.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.InheritedPXButtonAttribute">
            <summary>
            PXButton by default is not inherited
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.InventoryItemNoRestrictAttribute">
            <summary>
            Inventory item field/selector with no PX restrictions for item status.
            There is a need to have the InventoryItemAttribute without the item status restriction.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.StockItemNoRestrictAttribute">
            <summary>
            Stock item field/selector with no PX restrictions for item status.
            There is a need to have the InventoryItemAttribute without the item status restriction.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.LaborRateType">
            <summary>
            Labor rate types to define the location containing the labor rate used for production labor transactions
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.LaborRateType.Employee">
            <summary>
            Employee labor rate - hourly rate of the employee
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.LaborRateType.Standard">
            <summary>
            Standard labor rate - rate used from a Work Center
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.LaborRateType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.LaborRateType.employee">
            <summary>
            Employee labor rate - hourly rate of the employee
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.LaborRateType.standard">
            <summary>
            Standard labor rate - rate used from a Work Center
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.LoadAMPSetupCacheAttribute">
            <summary>
            Load <see cref="T:PX.Objects.AM.AMPSetup"/> into cache, if it's not already.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MaterialDefaultMarkFor.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.MaterialDefaultMarkFor.GetDescription(System.Nullable{System.Int32})">
            <summary>
            Return the functions user friendly description
            </summary>
            <returns>OrderTypeFunction.Desc value (same as the list drop down)</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MathMin`2">
            <summary>
            BqlFunction performing Math.Min(Operand1, Operand2)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MatlUnitCostDefaultAttribute">
            <summary>
            Unit Cost Default value for better control on using warehouse from parent and last cost when tran cost could be zero.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MfgLocationAvailAttribute">
            <summary>
            Manufacturing warehouse location available attribute.
            Includes location restrictions related to production locations.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.MfgLocationAvailAttribute.DefaultLocation">
            <summary>
            Should the location default a value.
            (Default is true)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MfgLocationAvailAttribute._IsProductionType">
            <summary>
            Always restricted by production allowed bin locations
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MfgLocationAvailAttribute._IgnoreLocationRestrictionField">
            <summary>
            Filed representing a condition that excludes the restriction on mfg only locations (any location allowed)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MfgLocationAvailAttribute._IgnoreLocationRestrictionParent">
            <summary>
            If the _IgnoreLocationRestrictionField comes from a different/parent DAC... set the parent type
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.MfgLocationAvailAttribute.ReplaceSelectorAttribute(System.Type,System.Type,System.Type)">
            <summary>
            Replace the base selector with a modified production related selector
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.MfgLocationAvailAttribute.ReplaceAttributes(System.Type)">
            <summary>
            Make sure the correct attributes are in place for Manufacturing locations.
            Swap the LocationRestrictorAttribute with the MfgLocationRestrictorAttribute.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MfgLocationRestrictorAttribute">
            <summary>
            Manufacturing warehouse location restrictor attribute.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.MfgLocationRestrictorAttribute.IgnoreLocationRestriction(PX.Data.PXCache,System.Object)">
            <summary>
            A condition where the manufacture location restrictions should be ignored (any location allowed)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MRPExceptionType">
            <summary>
            MRP Process Exception Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.Defer">
            <summary>
            Defer - Supply due prior to the promise date
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.Delete">
            <summary>
            Delete - Supply not required for any demand
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.Expedite">
            <summary>
            Expedite - Supply due beyond the promise date 
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.Late">
            <summary>
            Late - Supply item should have been received
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.Transfer">
            <summary>
            Transfer Available - Supply item has inventory beyond site requirements
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.OrderOnHold">
            <summary>
            Order on Hold - The order is not included in the MRP Processing due to the order being on hold and MRP Setup option excluding the order type when on hold
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.NoTRReplenishmentWarehouse">
            <summary>
            When a Transfer item does not contain a Replenishment Warehouse for planned transfer orders
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.ReplenishmentWarehouseLoop">
            <summary>
            When a Transfer item contains a set of item warehouse detail Replenishment Warehouses which are configured in a way creating a recursive condition
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPExceptionType.OrderWithoutSchedDate">
            <summary>
            Order With out Schedule Date  - 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MRPPlanningType">
            <summary>
            MRP Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.SalesOrder">
            <summary>
            Sales Order = SO (10)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.Shipment">
            <summary>
            SO Shipment
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.PurchaseOrder">
            <summary>
            Purchase Order = PU (15)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.ForecastDemand">
            <summary>
            Forecast Demand = FC (20)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.ProductionOrder">
            <summary>
            Production Order = PI (25)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.ProductionMaterial">
            <summary>
            Production Material = PM (30)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.StockAdjustment">
            <summary>
            Stock Adjustment = IN (35)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.SafetyStock">
            <summary>
            Safety Stock = SS (40)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.MPS">
            <summary>
            MPS = MS (45)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.MrpPlan">
            <summary>
            MRP Plan = MP (50)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.MrpRequirement">
            <summary>
            MRP Requirement (Blowdown) = BD (55)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.PlannedTransferDemand">
            <summary>
            MRP Generated Planned Transfer Demand Order
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.TransferDemand">
            <summary>
            MRP SO Transfer Demand
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.TransferSupply">
            <summary>
            MRP SO Transfer Supply
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.AssemblyDemand">
            <summary>
            MRP KIT Demand
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.AssemblySupply">
            <summary>
            MRP KIT Supply
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.InventoryDemand">
            <summary>
            MRP Generic Inventory Demand
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.InventorySupply">
            <summary>
            MRP Generic Inventory Supply
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.FieldService">
            <summary>
            MRP Field Service
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.Consolidated">
            <summary>
            Consolidated plan
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.BlanketOrder">
            <summary>
            Blanket Order
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.PlannedKitDemand">
            <summary>
            MRP Planned Kit Demand 
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.SOrderNonStockKitDemand">
            <summary>
            MRP Sales Order Kit Demand for Non-Stock
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.MRPPlanningType.ForecastNonStockKitDemand">
            <summary>
            MRP Forecast Kit Demand for Non-Stock
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MRPSDFlag">
            <summary>
            MRP Supply/Demand
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.MRPSDFlag.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OnHoldStatus">
            <summary>
            Defines order hold status related to order,setups, and item status
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OnHoldStatus.NotOnHold">
            <summary>
            Order is not on hold
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OnHoldStatus.OnHoldInclude">
            <summary>
            Order is on hold but included in the MRP Planning calculations
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OnHoldStatus.OnHoldExclude">
            <summary>
            Order is on hold and excluded from the MRP Planning calculations
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OnHoldStatus.InvalidItemStatus">
            <summary>
            Item status is invalid to support the order in MRP Planning calculations
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OnHoldStatus.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OperationCDFieldAttribute">
            <summary>
            Manufacturing Operation CD field attribute
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OperationCDFieldAttribute.OperationFieldLength">
            <summary>
            Database field size
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OperationCDFieldAttribute.OperationMaskLength">
            <summary>
            Operations are masked to 5 numbers "#####"
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OperationIDFieldAttribute">
            <summary>
            Manufacturing Operation ID field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OperationDBTimeAttribute">
            <summary>
            Operation time span attribute for correctly displaying the operation time format based on setup
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OperationNonDBTimeAttribute">
            <summary>
            Operation time span attribute for correctly displaying the operation time format based on setup
            (For unbound/non DB fields)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderCrossRefProcessSource.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderedSelect`3">
            <summary>
            Selector allowing a view to be ordered.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderSource">
            <summary>
            Order Source Types for Configurations
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderSource.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderSource.SalesOrder">
            <summary>
            Sales Order
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderSource.Opportunity">
            <summary>
            Opportunity
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderSource.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction">
            <summary>
            Manufacturing - Order Type - Functions
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderTypeFunction.All">
            <summary>
            All  types of orders - order type - function
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderTypeFunction.Regular">
            <summary>
            Regular/standard production order - order type - function
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderTypeFunction.Planning">
            <summary>
            Planning order - order type - function
            Planning orders are not released or processed with transactions. They are for planning purposes only such as generated from MRP
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OrderTypeFunction.Disassemble">
            <summary>
            Disassemble order - order type - function
            Disassemble orders are for Disassembly only
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.ListAttribute">
            <summary>
            List of order type functions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.ListAllAttribute">
            <summary>
            List of order type functions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.regular">
            <summary>
            Regular/standard production order - order type - function
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.planning">
            <summary>
            Planning order - order type - function
            Planning orders are not released or processed with transactions. They are for planning purposes only such as generated from MRP
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.disassemble">
            <summary>
            Disassemble order - order type - function
            Disassemble orders are for Disassembly only
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OrderTypeFunction.all">
            <summary>
            All Order Types - order type - function
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.OrderTypeFunction.GetDescription(System.Nullable{System.Int32})">
            <summary>
            Return the functions user friendly description
            </summary>
            <param name="function">function ID</param>
            <returns>OrderTypeFunction.Desc value (same as the list drop down)</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OverheadIDFieldAttribute">
            <summary>
            Manufacturing Overhead field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OverheadType">
            <summary>
            Manufacturing Overhead Types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.FixedType">
            <summary>
            Fixed overhead
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.VarLaborHrs">
            <summary>
            Variable overhead by labor hours
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.VarLaborCost">
            <summary>
            Variable overhead by labor cost
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.VarMatlCost">
            <summary>
            Variable overhead by material cost
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.VarMachHrs">
            <summary>
            Variable overhead by machine hours
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.VarQtyComp">
            <summary>
            Variable overhead by quantity completed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.OverheadType.VarQtyTot">
            <summary>
            Variable overhead by total completed
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.OverheadType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.OverheadType.GetTypeDesc(System.String)">
            <summary>
            Translate the overhead type identifier to the description
            </summary>
            <param name="overheadType">Overhead type id</param>
            <returns>Description of the overhead</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ParentLotSerialAssignment">
            <summary>
            Parent Lot/Serial Assign Settings
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ParentLotSerialAssignment.Never">
            <summary>
            Never
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ParentLotSerialAssignment.OnIssue">
            <summary>
            On Issue
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ParentLotSerialAssignment.OnCompletion">
            <summary>
            On Completion
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ParentLotSerialAssignment.Desc">
            <summary>
            Descriptions/labels for identifiers
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.PhantomRoutingOptions.Before">
            <summary>
            Include phantom routing before parent routing
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.PhantomRoutingOptions.After">
            <summary>
            Include phantom routing after parent routing
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.PhantomRoutingOptions.Exclude">
            <summary>
            Exclude phantom routing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.PhantomRoutingOptions.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.PhantomRoutingOptions.before">
            <summary>
            Include phantom routing before parent routing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.PhantomRoutingOptions.after">
            <summary>
            Include phantom routing after parent routing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.PhantomRoutingOptions.exclude">
            <summary>
            Exclude phantom routing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.POLineTypeListMfgAttribute">
            <summary>
            Extension to add new PO Lines types for manufacturing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.POReceiptLineTypeListMfgAttribute">
            <summary>
            Extension to add new PO Lines types to the existing set of line types
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.POReceiptLineTypeListMfgAttribute.AddMfgHiddenValues">
            <summary>
            Add hidden values to pass validation. These are not selectable values by the user in the UI
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource">
            <summary>
            Indicates the source of production detail
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionDetailSource.NoSource">
            <summary>
            Detail was not sourced from any specific area. No Source.
            Users have the ability to build the details from scratch.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionDetailSource.BOM">
            <summary>
            Source of Bill of Material details
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionDetailSource.Estimate">
            <summary>
            Source of Estimate order details
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionDetailSource.Configuration">
            <summary>
            Source of configuration result details (BOM + Config results)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionDetailSource.ProductionRef">
            <summary>
            Source of Production Ref Details
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionDetailSource.GetDescription(System.Nullable{System.Int32})">
            <summary>
            Get the list description of the given source
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.List">
            <summary>
            UI List attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.DisassembleList">
            <summary>
            UI List for Quick Disassemble Source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.noSource">
            <summary>
            Detail was not sourced from any specific area. No Source.
            Users have the ability to build the details from scratch.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.bom">
            <summary>
            Source of Bill of Material details
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.estimate">
            <summary>
            Source of Estimate order details
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.configuration">
            <summary>
            Source of configuration result details (BOM + Config results)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionDetailSource.productionRef">
            <summary>
            Source of Production Order details
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionEmployeeSelectorAttribute">
            <summary>
            Manufacturing/Production employee Selector
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionEmployeeSelectorAttribute.#ctor">
            <summary>
            Showing only production employees that are active
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionEmployeeSelectorAttribute.#ctor(System.Type)">
            <summary>
            Allowing for any search criteria
            </summary>
            <param name="searchType"></param>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionEventType">
            <summary>
            Production events
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.Info">
            <summary>
            Generic/info/default production event
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderCreated">
            <summary>
            Production order created
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderReleased">
            <summary>
            Production order released
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderPlaceOnHold">
            <summary>
            Production order set on hold
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderRemoveFromHold">
            <summary>
            Production order removed from Hold
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderCompleted">
            <summary>
            Production order completed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderClosed">
            <summary>
            Production order closed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderCancelled">
            <summary>
            Production order canceled
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderResetToPlan">
            <summary>
            Production order changed back to a Plan status
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.ReportPrinted">
            <summary>
            Production order report printed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.Transaction">
            <summary>
            Production transaction event
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.Comment">
            <summary>
            User added comment
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OrderEdit">
            <summary>
            Production order was edited
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.OperationChange">
            <summary>
            Production order operations changed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.Locked">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionEventType.Unlocked">
            <summary>
            Production order locked
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionEventType.GetEventTypeDescription(System.Int32)">
            <summary>
            Production order unlocked 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionNbrAttribute">
            <summary>
            Standard Production Nbr field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionOrderSelectorAttribute">
            <summary>
            Manufacturing production order number selector
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionOrderSelectorAttribute.#ctor(System.Type)">
            <summary>
            Production order number selector showing active production orders only
            </summary>
            <example> 
            [ProductionOrderSelector(typeof(AMProdItem.orderType))]
            </example>
            <param name="orderTypeField">field containing the order type to use for the order selection</param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionOrderSelectorAttribute.#ctor(System.Type,System.Boolean)">
            <summary>
            Production order number selector
            </summary>
            <example> 
            [ProductionOrderSelector(typeof(AMProdItem.orderType), true)]
            </example>
            <param name="orderTypeField">field containing the order type to use for the order selection</param>
            <param name="includeAll">Indicates if the selector should return all orders (when true) or only the active orders (when false)</param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionOrderSelectorAttribute.#ctor(System.Type,System.Boolean,System.Type[])">
            <summary>
            Production order number selector
            </summary>
            <param name="orderTypeField">field containing the order type to use for the order selection</param>
            <param name="includeAll">Indicates if the selector should return all orders (when true) or only the active orders (when false)</param>
            <param name="fieldList">Fields list for display as the selector columns</param>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionOrderSelectorAttribute.GetQueryCommand(System.Type,System.Type)">
            <summary>
            Builds the selector query
            </summary>
            <param name="orderTypeField">field containing the order type to use for the order selection</param>
            <param name="additional">additional where statement</param>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ProductionOrderSelectorAttribute.CustomerColumnList">
            <summary>
            Column list for production order selector including customer/inventory dacs
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionOrderStatus">
            <summary>
            Production order statuses
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Planned">
            <summary>
            Planned = P (New order default)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Released">
            <summary>
            Released = R
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.InProcess">
            <summary>
            InProcess = I
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Hold">
            <summary>
            Hold = H
            Status is not set in DB when order is placed on hold. Used for inquiry displays
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Cancel">
            <summary>
            Cancel = X
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Completed">
            <summary>
            Completed = M
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Locked">
            <summary>
            Locked = L
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionOrderStatus.Closed">
            <summary>
            Closed = C
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionOrderStatus.ListAttribute">
            <summary>
            Description/labels for identifiers
            </summary>/// 
        </member>
        <member name="M:PX.Objects.AM.Attributes.ProductionOrderStatus.GetStatusDescription(System.String)">
            <summary>
            Returns the production status description/label from the status single letter ID
            </summary>
            <param name="statusID">single letter status ID</param>
            <returns>Production description/label</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionScheduleStatus">
            <summary>
            Production Schedule Status
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionScheduleStatus.Unscheduled">
            <summary>
            A production order that has not been finite scheduled
            Unscheduled = U    (Default value)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionScheduleStatus.Scheduled">
            <summary>
            A production order that has been finite scheduled and could be rescheduled if rough cut is run again
            Scheduled = S
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionScheduleStatus.Firm">
            <summary>
            A production order that has been scheduled and should not be rescheduled when rough cut is run again
            Firmed = F
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionSupplyType">
            <summary>
            Prodction Supply Types 
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionSupplyType.Inventory">
            <summary>
            Inventory
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionSupplyType.Production">
            <summary>
            Production
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ProductionSupplyType.SalesOrder">
            <summary>
            SalesOrder
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionSupplyType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ProductionSupplyType.Desc.Inventory">
            <summary>
            Inventory
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ProductionSupplyType.Desc.Production">
            <summary>
            Production
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ProductionSupplyType.Desc.SalesOrder">
            <summary>
            SalesOrder
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionSupplyType.inventory">
            <summary>
            Production Supply Type Inventory
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionSupplyType.production">
            <summary>
            Production Supply Type Production
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionSupplyType.salesOrder">
            <summary>
            Production Supply Type Sales Order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionSupplyType.SupplyTypeListAttribute">
            <summary>
            List for Production Supply Types
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionTotalTimeDBAttribute">
            <summary>
            Production total time span attribute for correctly displaying the production total time format based on setup
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ProductionTotalTimeNonDBAttribute">
            <summary>
            Production total time span attribute for correctly displaying the production total time format based on setup
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.PXReferentialIntegrityCheck2Attribute">
            <summary>
            <see cref="T:PX.Data.ReferentialIntegrity.Attributes.PXReferentialIntegrityCheckAttribute"/> with Method usage for CacheAttached.
            Should only be used on CacheAttached as needed if not possible to add <see cref="T:PX.Data.ReferentialIntegrity.Attributes.PXReferentialIntegrityCheckAttribute"/> directly to the DAC
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.RawTimeFieldAttribute">
            <summary>
            <see cref="T:PX.Data.PXIntAttribute"/> time field which has no formating.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.Rev">
            <summary>
            Manufacturing Revision PX Selector Attribute
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.Rev.IDAttribute.DescriptionField">
            <summary>
            Selector Description Field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.RevisionIDFieldAttribute">
            <summary>
            Revision field attribute
            (Length 10)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.RollupOptions">
            <summary>
            Manufacturing Configuration Roll-up Options
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.RuleTargetSource">
            <summary>
            Manufacturing Configuration Rule Source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.RuleTypes">
            <summary>
            Manufacturing Configuration Rule Types
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.SchdBlockSizeListAttribute.Contains(System.Nullable{System.Int32})">
            <summary>
            Is the block size a standard block size value?
            </summary>
            <param name="blockSize"></param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScheduleMethod">
            <summary>
            Scheduling method parameters for controlling of scheduling start/end dates
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScheduleMethod.FinishOn">
            <summary>
            Finish On = "F"
                Backward schedule of an order
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScheduleMethod.StartOn">
            <summary>
            Start On = "S"
                Forward schedule of an order
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScheduleMethod.UserDates">
            <summary>
            User Dates = "U"
                Allows users to select specific start/end dates
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScheduleMethod.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapAction">
            <summary>
            Production Scrap Action 
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapAction.NoAction">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapAction.WriteOff">
            <summary>
            Write Off
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapAction.Quarantine">
            <summary>
            Quarantine
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapAction.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapAction.Desc.NoAction">
            <summary>
            NoAction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapAction.Desc.WriteOff">
            <summary>
            Write Off
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapAction.Desc.Quarantine">
            <summary>
            Warehouse
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapAction.noAction">
            <summary>
            NoAction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapAction.writeOff">
            <summary>
            Write Off
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapAction.quarantine">
            <summary>
            Quarantine
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapAction.ListAttribute">
            <summary>
            List for Production Scrap Action
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource">
            <summary>
            Production Scrap Source 
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapSource.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapSource.Item">
            <summary>
            Item -- Item Warehouse Details
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapSource.Warehouse">
            <summary>
            Warehouse -- Order Warehouse
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ScrapSource.OrderType">
            <summary>
            OrderType -- Order Type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapSource.Desc.None">
            <summary>
            None
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapSource.Desc.Item">
            <summary>
            Item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapSource.Desc.Warehouse">
            <summary>
            Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Attributes.ScrapSource.Desc.OrderType">
            <summary>
            Order Type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource.none">
            <summary>
            None
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource.item">
            <summary>
            Item
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource.warehouse">
            <summary>
            Warehouse
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource.orderType">
            <summary>
            OrderType
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ScrapSource.ListAttribute">
            <summary>
            List for Production Scrap Source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.SetupMessage">
            <summary>
            Setup message attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.SetupMessage.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ShiftCDFieldAttribute">
            <summary>
            Manufacturing Shift field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ShiftDiffType">
            <summary>
            Shift differential types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ShiftDiffType.Amount">
            <summary>
            Amount = A
                Differential is a fixed amount per hour
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.ShiftDiffType.Rate">
            <summary>
            Rate = R
                Differential is a rate per hour
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ShiftDiffType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ShiftDiffType.GetShiftDifferentialCost(PX.Data.PXGraph,System.String)">
            <summary>
            Get the shifts differential cost for the given work center
            </summary>
            <param name="graph">Calling graph</param>
            <param name="workCenterID">work center ID</param>
            <returns>Calculated total differential cost</returns>
        </member>
        <member name="M:PX.Objects.AM.Attributes.ShiftDiffType.GetShiftDifferentialCost(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String)">
            <summary>
            Get the shifts differential cost
            </summary>
            <param name="laborCost">Work center/Employee standard labor cost</param>
            <param name="shiftDifferentialCost">Shift differential cost</param>
            <param name="wcShiftDiffType">Differential type</param>
            <returns>Calculated total differential cost</returns>
        </member>
        <member name="T:PX.Objects.AM.Attributes.SiteMapTitleAttribute">
            <summary>
            Attribute to display a screen title related to the identified source screen ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.SortOrderDefaultAttribute">
            <summary>
            DAC Field level attribute for defaulting the sort order field by a multiplier from the Line Nbr field value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.SubNotLessThanZero`2">
            <summary>
            Returns the subtraction of <tt>Operand2</tt> from <tt>Operand1</tt> not less than decimal zero.
            Manufacturing generated class (sourced from PX.Data.Sub)
            </summary>
            <typeparam name="Operand1">A field, constant, or function of decimal type</typeparam>
            <typeparam name="Operand2">A field, constant, or function of decimal type</typeparam>
        </member>
        <member name="T:PX.Objects.AM.Attributes.TimeCardStatus.ListAttribute">
            <summary>
            UI list for production time card status
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.TimeUnits">
            <summary>
            Generic list of selectable time unit types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.TimeUnits.Days">
            <summary>
            Units in Days
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.TimeUnits.Hours">
            <summary>
            Units in Hours
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.TimeUnits.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.TimeUnits.LeadTimeListAttribute">
            <summary>
            Time units for Lead Time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.ToolIDFieldAttribute">
            <summary>
            Manufacturing ToolID field attribute
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.TriggerChildFormulaAttribute.#ctor(System.Type,System.Type)">
            <param name="childType">Type of child row</param>
            <param name="childUpdateField">Field in child formula used to trigger formula</param>
        </member>
        <member name="T:PX.Objects.AM.Attributes.TriggerEstimateOvhdFormulaAttribute">
            <summary>
            Due to PX.Data.Parent not triggering a formula to update, add this to AMEstimateOper fields where the change of value should re-trigger estimate overhead row formulas
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.UpdateChildOnFieldUpdatedAttribute">
            <summary>
            Auto update child row field on change of parent field attached to this attribute.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.UpdateChildOnFieldUpdatedAttribute.#ctor(System.Type,System.Type)">
            <param name="childType">Type of child row</param>
            <param name="childUpdateField">Field in child row to update</param>
        </member>
        <member name="T:PX.Objects.AM.Attributes.UpdateChildOnFieldUpdatedBaseAttribute">
            <summary>
            Auto update child row field on change of parent field attached to this attribute.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.UpdateChildOnFieldUpdatedBaseAttribute.#ctor(System.Type,System.Type)">
            <param name="childType">Type of child row</param>
            <param name="childUpdateField">Field in child formula used to trigger formula</param>
        </member>
        <member name="T:PX.Objects.AM.Attributes.UseCurrentParentScope">
            <summary>
            Sets <see cref="T:PX.Data.PXParentAttribute"/> <see cref="P:PX.Data.PXParentAttribute.UseCurrent"/> which helps avoid a trip to the database when a process is running bulk insert and parent is still only in cache.
            Helpful for performance reasons for large sets of data being processed.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Attributes.UseCurrentParentScope.#ctor(PX.Data.PXCache,System.Boolean,System.Type[])">
            <summary>
            Sets <see cref="T:PX.Data.PXParentAttribute"/> <see cref="P:PX.Data.PXParentAttribute.UseCurrent"/> which helps avoid a trip to the database when a process is running bulk insert and parent is still only in cache.
            Helpful for performance reasons for large sets of data being processed.
            </summary>
            <param name="cache">Cache containing PXParent fields to set UseCurrent</param>
            <param name="useCurrentValue"> Mapped to <see cref="P:PX.Data.PXParentAttribute.UseCurrent"/> </param>
            <param name="fields">Field(s) which contain PXParentAttribute. Leave null to find all and any fields with PXParent</param>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Operation.OutsideProcess">
            <summary>
            Outside / external operation
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Operation.Standard">
            <summary>
            Normal / Internal operation
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.NonStockPhantom">
            <summary>
            Non-stock Item – Phantom
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.NonStockRegular">
            <summary>
            Non-stock Item – Regular
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.NonStockSubcontract">
            <summary>
            Non-stock Item – Subcontract
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.StockPhantomBOM">
            <summary>
            Stock Item – Has BOM – Phantom
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.StockRegularBOM">
            <summary>
            Stock Item – Has BOM – Regular
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.StockSubcontractBOM">
            <summary>
            Stock Item – Has BOM – Subcontract
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.StockPhantomNoBOM">
            <summary>
            Stock Item – No BOM – Phantom
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.StockRegularNoBOM">
            <summary>
            Stock Item – No BOM – Regular
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.WorkbenchTreeIcons.Material.StockSubcontractNoBOM">
            <summary>
            Stock Item – No BOM – Subcontract
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.WorkCenterIDFieldAttribute">
            <summary>
            Manufacturing Work Center field attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.XRefType">
            <summary>
            Manufacturing Cross (X) Reference Type
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.XRefType.Purchase">
            <summary>
            Purchase X Reference type = P
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.XRefType.Manufacture">
            <summary>
            Manufacture X Reference type = M
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Attributes.XRefType.Transfer">
            <summary>
            Transfer X Reference type = T
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Attributes.XRefType.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderTypeMaint">
            <summary>
            Manufacturing Order Type Maintenance graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMReleaseProcess">
            <summary>
            Manufacturing release process for all manufacturing document types
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMReleaseProcess.INRegisterRecs">
            <summary>
            Used to update batch control totals when INTran is updated.
            This happens automatically but without the view the values are not updated to the DB
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMReleaseProcess.INTranRecs">
            <summary>
            Used to update INTran values during unit cost updates.
            Should not perform insert or updates on this view. Possibly use production transaction helper to build the IN transactions.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ClearProdRecsCache">
            <summary>
            Clear the production cache (updates and query)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ClearProdRecsCache(System.Boolean)">
            <summary>
            Clear the production cache (updates and query)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ReleaseReferenceBatches(PX.Objects.AM.AMBatch)">
            <summary>
            Release all related batches linked to current document being released
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.GetUnreleasedWIPByOperation(PX.Objects.AM.AMBatch)">
            <summary>
            Find the total amount of related batches linked to the given AM Batch and production order
            </summary>
            <param name="amBatch">Current document</param>
            <returns>Unreleased WIP amount</returns>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.FindInCache(PX.Objects.AM.AMProdItem)">
            <summary>
            Find the given production record in the cache.
            If found return the cache version in place of the passed version.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.FindInCache(PX.Objects.AM.AMProdOper)">
            <summary>
            Find the given production record in the cache.
            If found return the cache version in place of the passed version.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.UpdateUnitCosts(PX.Objects.AM.AMBatch,PX.Objects.AM.ProductionGLTranBuilder@)">
            <summary>
            Update each transaction line with a corrected unit costs.
            Should be called after backflushing has occurred.
            Requires AMProdItem and AMProdOper updated cache to exist so wip and qty totals are correctly set.
            (Ex: backflush material not making it to WIP until release so unit cost for actual would be incorrect unless adjusted after material release)
            </summary>
            <param name="doc">Current document being processed</param>
            <param name="productionGLTranBuilder"></param>
            <returns>true when costs are updated</returns>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.AddOverheadByBackflushMaterial(PX.Objects.AM.AMBatch,PX.Objects.AM.ProductionGLTranBuilder@)">
            <summary>
            Due to lag in backflush material and cost transactions processing at the same time this will create the overhead by material with the difference 
            based on the released backflush material transaction. No need to update the production overhead record as it will update correctly during the update order cleanup process.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.UpdateDisassemblyProductionOrder(PX.Objects.AM.AMBatch)">
            <summary>
            Update production order based on disassembly document
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.UpdateProductionOrdersForMoveLabor(PX.Objects.AM.AMBatch)">
            <summary>
            Update production order based on move or labor document
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.DocumentProcessSelector(PX.Objects.AM.AMBatch)">
            <summary>
            Select the correct document process method based on batch document type
            </summary>
            <param name="doc">Document being released</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.MarkBatchReleased(PX.Objects.AM.AMBatch)">
            <summary>
            Mark document and transaction lines as released
            </summary>
            <param name="doc">Document being released</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.MarkBatchReleasedWithINTran(PX.Objects.AM.AMBatch)">
            <summary>
            Mark document and transaction lines as released for a document related to Inventory
            </summary>
            <param name="doc">Document being released</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessAmGlTran(PX.Objects.AM.AMBatch)">
            <summary>
            Process Manufacturing GL transactions
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.RequiresScrapTransaction(PX.Objects.AM.AMMTran)">
            <summary>
            Does the given transaction require a scrap WIP Adjustment transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessDisassembly(PX.Objects.AM.AMBatch)">
            <summary>
            Process Manufacturing disassembly documents
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessDisassembleBatchTran(PX.Objects.AM.AMBatch,PX.Objects.AM.AMMTran,System.Collections.Generic.List{PX.Objects.AM.AMMTranSplit},PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdItem,PX.Objects.AM.ProductionTransactionHelper,PX.Objects.AM.InventoryTranBuilder@)">
            <summary>
            Process the disassembly batch/tran row (AMDisassembleBatch when projection).
            </summary>
            <param name="doc"></param>
            <param name="tranBatch"></param>
            <param name="splits">Split records related to <see cref="T:PX.Objects.AM.AMMTran"/> record</param>
            <param name="inventoryItem"><see cref="T:PX.Objects.IN.InventoryItem"/> related to InventoryID of <see cref="T:PX.Objects.AM.AMMTran"/> record</param>
            <param name="prodItem"></param>
            <param name="productionTranHelper"></param>
            <param name="inventoryBuilder">builder for generating the Inventory related transactions</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessDisassembleMaterial(PX.Objects.AM.AMMTran,System.Collections.Generic.List{PX.Objects.AM.AMMTranSplit},PX.Objects.IN.InventoryItem,PX.Objects.AM.InventoryTranBuilder@)">
            <summary>
            Process the disassembly tran (material) row (AMDisassembleTran when projection)
            </summary>
            <param name="tran"></param>
            <param name="splits">Split records related to <see cref="T:PX.Objects.AM.AMMTran"/> record</param>
            <param name="inventoryItem"><see cref="T:PX.Objects.IN.InventoryItem"/> related to InventoryID of <see cref="T:PX.Objects.AM.AMMTran"/> record</param>
            <param name="inventoryBuilder">builder for generating the Inventory related transactions</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CreateInventoryTranBuilder(PX.Objects.AM.AMBatch,PX.Objects.AM.InventoryTranBuilder.TransactionType)">
            <summary>
            Checks to see if current document contains references for the given type to reuse the unreleased batches from past release attempt.
            If nothing is found then a new IN batch number will be used.
            </summary>
            <param name="doc">Releasing document</param>
            <param name="transactionType">Transaction type (Issue/Receipt)</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CreateInventoryTranBuilder(PX.Objects.AM.AMBatch,PX.Objects.AM.InventoryTranBuilder.TransactionType,System.Boolean)">
            <summary>
            Checks to see if current document contains references for the given type to reuse the unreleased batches from past release attempt.
            If nothing is found then a new IN batch number will be used.
            </summary>
            <param name="doc">Releasing document</param>
            <param name="transactionType">Transaction type (Issue/Receipt)</param>
            <param name="useExistingJournalEntry">Should the creation of the inventory build re-use any found journal entry batch?</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.FindResetBackflushMaterialBatch(PX.Objects.AM.AMBatch,System.Boolean@,System.Boolean@)">
            <summary>
            Find a related backflush material batch (possible during re-release of transaction)
            </summary>
            <param name="doc">Move or Labor releasing document</param>
            <param name="materialReleased">has the related material transaction been released</param>
            <param name="inRegisterReleased">has the related material transaction's inventory transaction been released</param>
            <returns>Found MaterialEntry graph, otherwise null</returns>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessIndirectLaborLine(PX.Objects.AM.ProductionTransactionHelper,PX.Objects.AM.AMBatch,PX.Objects.AM.AMMTran)">
            <summary>
            Process indirect labor lines only
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessMoveTranLine(PX.Objects.AM.ProductionTransactionHelper,PX.Objects.AM.InventoryTranBuilder,PX.Objects.AM.InventoryTranBuilder,PX.Objects.AM.AMBatch,PX.Objects.AM.AMMTran,System.Collections.Generic.List{PX.Objects.AM.AMMTranSplit},PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdItem,PX.Objects.AM.AMProdOper,PX.Objects.AM.MoveOperationQtyTotals)">
            <summary>
            Process a standard move/labor transactions (no indirect labor)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.GetCachedProcessedOrderBaseQty(PX.Objects.AM.AMMTran)">
            <summary>
            For the same transaction what has already been processed for the same order.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.DeleteOperationWipCompleteRecords(PX.Objects.AM.AMBatch,System.Boolean)">
            <summary>
            Remove the release process only WIP Complete tran type records. They should only exist when the transaction completes/release
            </summary>
            <param name="doc"></param>
            <param name="persistDelete"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckScrapReturn(PX.Objects.AM.MoveOperationQtyBuilder)">
            <summary>
            Validate over return scraps for a particular operation
            </summary>
            <param name="builder"></param>
            <exception cref="T:PX.Data.PXException"></exception>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessMoveTran(PX.Objects.AM.AMBatch)">
            <summary>
            Process Manufacturing move or labor transaction
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckTranAttributes(PX.Objects.AM.AMBatch)">
            <summary>
            Check all transaction attributes on a move/labor document
            </summary>
            <param name="doc">Move/Labor document to validate the attributes</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckUnderIssuedMaterial(PX.Objects.AM.MoveOperationQtyBuilder)">
            <summary>
            Check all transactions for under issued material
            </summary>
            <param name="builder">Builder containing pre-processed operation quantity data</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckOverIssuedMaterial(PX.Objects.AM.AMMTran,PX.Data.PXResultset{PX.Objects.AM.AMMTran})">
            <summary>
            Check transaction for over issued material
            </summary>
            <param name="ammTran">Transaction to check over issued material</param>
            <param name="allTrans">List of transactions to calculate total quantity of same material for over issued materials</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckControlPointQty(PX.Objects.AM.MoveOperationQtyBuilder)">
            <summary>
            Validate operation control point quantity
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckNegMoveQty(PX.Objects.AM.AMBatch,System.Collections.Generic.List{PX.Objects.AM.AMMTran})">
            <summary>
            Check returning qty and make sure the numbers make sense  
            </summary>
            <param name="doc"></param>
            <param name="results"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckMoveOnCompletedOrder(System.Collections.Generic.List{PX.Data.PXResult{PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMOrderType,PX.Objects.AM.AMProdItem,PX.Objects.AM.AMProdOper}})">
            <summary>
            Check all transactions for attempted transactions move on a completed order
            </summary>
            <param name="results"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckOverCompletedOrders(PX.Objects.AM.MoveOperationQtyBuilder)">
            <summary>
            Check all transactions for over completion
            </summary>
            <param name="builder">Builder containing pre-processed operation quantity data</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckDuplicateSerialNumber(PX.Objects.AM.AMBatch)">
            <summary>
            Check all transactions for Repeat Serial Number in current Batch
            Equivalent to IN Error Duplicate Serial Number found in Document
            Also Check if the Serial Number has already been Issued
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CheckInterBranchTransaction(PX.Objects.AM.AMBatch,PX.Objects.AM.MoveOperationQtyBuilder)">
            <summary>
            Check all transactions, if the branch ID doesn't match
            make sure an account mapping is set up between the branches
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.GetMaterialTransactions(PX.Objects.AM.AMBatch)">
            <summary>
            Get material transaction lines
            </summary>
            <param name="doc">material batch header</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ProcessMaterialTran(PX.Objects.AM.AMBatch)">
            <summary>
            Process Manufacturing material transaction
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.CalculateCachedIssueDelta(PX.Data.PXCache{PX.Objects.AM.AMProdMatlLotSerial},System.Collections.Generic.IEnumerable{PX.Objects.AM.AMProdMatlLotSerial})">
            <summary>
            Calculate the net change from  data in the cache
            </summary>
            <param name="matlLotSerialCache"></param>
            <param name="collection"></param>
            <returns>Net change of the issued qty from the cache (can be negative or positive)</returns>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ReferencedBatchesReleased(PX.Objects.AM.AMBatch)">
            <summary>
            Records which lines have released related batches
            </summary>
            <param name="doc">Manufacturing document header</param>
            <returns>Dictionary of line nbrs for ammtran lines with bool value for found released reference (true) or not found (false)</returns>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.UpdateProductionMaterial(PX.Objects.AM.AMBatch)">
            <summary>
            Update material records on production orders related to the document
            </summary>
            <param name="doc">document being processed</param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.UpdateProductionMaterial(PX.Objects.AM.AMMTran,PX.Objects.AM.AMProdItem)">
            <summary>
            Lookup process for updating production material prior to 5.30.2126.49
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.AddMaterialToOrder(PX.Objects.AM.AMBatch)">
            <summary>
            Material transactions allow for adding material on the fly (not on the production order). 
            This call will add material to the production details if not already
            </summary>
            <param name="doc"></param>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ReleaseIN">
            <summary>
            Release related inventory transactions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ReleaseGL">
            <summary>
            Release related general ledger transactions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.DeleteEmptyGL(PX.Objects.AM.AMBatch)">
            <summary>
            There are re-release scenarios where users edit transactions leaving empty related transactions.
            Here we delete them so they are not left over after release
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.DeleteUnreleasedIN(PX.Objects.AM.AMBatch)">
            <summary>
            There are re-release scenarios where users edit transactions leaving empty related transactions.
            Here we delete them so they are not left over after release
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.ReleaseAM(System.Collections.Generic.List{PX.Objects.AM.AMBatch})">
            <summary>
            Release related Manufacturing transactions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMReleaseProcess.GetAccountMapping(PX.Data.PXGraph,PX.Objects.AM.AMBatch,PX.Objects.IN.InventoryItem,PX.Objects.IN.INSite,PX.Objects.GL.BranchAcctMapFrom@,PX.Objects.GL.BranchAcctMapTo@)">
            <summary>
            Check that there is an account mapping between branches
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTranMoveByLotSerial">
            <summary>
            Summarize transaction data by production order/transaction/lot serial number
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMTranMoveByLotSerial.BaseQty">
            <summary>
            SUM of AMMTranSplit.BaseQty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMTimeCardFilter">
            <summary>
            The filter for processing the labor transaction results of the <see cref="T:PX.Objects.AM.AMMTran"/> class in the <see cref="T:PX.Objects.AM.AMTimeCardCreate"/> graph, and on the Create Labor Time Activities (AM513000) form.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.APSMaintenanceProcess.ProcessingRecords">
            <summary>
            Processing records
            </summary>
        </member>
        <member name="F:PX.Objects.AM.APSMaintenanceProcess.Filter">
            <summary>
            Processing page filter
            </summary>
        </member>
        <member name="M:PX.Objects.AM.APSMaintenanceProcess.RunWorkCenterCalendarProcess(System.Int32)">
            <summary>
            Generate work center work days for X number of days
            </summary>
            <param name="numberOfDays"></param>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceFilter">
            <summary>
            The filter for processing the <see cref="T:PX.Objects.AM.APSMaintenanceProcess"/> graph on the APS Maintenance Process (AM512000) form.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceFilter.isWorkCenterCalendarProcess">
            <summary>
            Update Work Center Schedule from Calendar
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceFilter.IsWorkCenterCalendarProcess">
            <summary>
            Update Work Center Schedule from Calendar
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceFilter.isBlockSizeSyncProcess">
            <summary>
            Sync Block Size with Schedules
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceFilter.IsBlockSizeSyncProcess">
            <summary>
            Sync Block Size with Schedules
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceFilter.isHistoryCleanupProcess">
            <summary>
            Cleanup History
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceFilter.IsHistoryCleanupProcess">
            <summary>
            Cleanup History
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceFilter.isWorkCalendarProcess">
            <summary>
            Sync Work Calendar Changes
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceFilter.IsWorkCalendarProcess">
            <summary>
            Sync Work Calendar Changes
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceFilter.isWorkCenterUpdatedProcess">
            <summary>
            Sync Work Center Changes
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceFilter.IsWorkCenterUpdatedProcess">
            <summary>
            Sync Work Center Changes
            </summary>
        </member>
        <member name="T:PX.Objects.AM.APSRoughCutProcess">
            <summary>
            Advanced Planning and Scheduling Rough Cut Process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.APSRoughCutProcess.OrderList">
            <summary>
            Processing records
            </summary>
        </member>
        <member name="F:PX.Objects.AM.APSRoughCutProcess.Filter">
            <summary>
            Processing page filter
            </summary>
        </member>
        <member name="T:PX.Objects.AM.APSRoughCutProcessFilter">
            <summary>
            Filter DAC for APSRoughCutProcess graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.APSRoughCutProcessFilter.releaseOrders">
            <summary>
            During processing, should the selected orders be released (true)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.APSRoughCutProcessFilter.ReleaseOrders">
            <summary>
            During processing, should the selected orders be released (true)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.APSRoughCutProcessFilter.excludePlanningOrders">
            <summary>
            Show/hide planning type orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.APSRoughCutProcessFilter.ExcludePlanningOrders">
            <summary>
            Show/hide planning type orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.APSRoughCutProcessFilter.excludeFirmOrders">
            <summary>
            Show/hide orders which are schedule status Firm
            </summary>
        </member>
        <member name="P:PX.Objects.AM.APSRoughCutProcessFilter.ExcludeFirmOrders">
            <summary>
            Show/hide orders which are schedule status Firm
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AsBuiltConfigFilter">
            <summary>
            The required filter for displaying the information on the As-Built Configuration (AM401700) form (corresponding to the <see cref="T:PX.Objects.AM.AsBuiltConfigInq"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMAttributeMaint">
            <summary>
            BOM Attribute Maintenance graph
            Main graph for managing BOM Attributes
            </summary>
        </member>
        <member name="F:PX.Objects.AM.BOMBaseGraph`1.Attributes">
            <summary>
            BOM attributes redirect action
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.attributes(PX.Data.PXAdapter)">
            <summary>
            BOM attributes redirect delegate
            </summary>
        </member>
        <member name="F:PX.Objects.AM.BOMBaseGraph`1.AMCopyBom">
            <summary>
            Copy bom smart panel to copy the current BOM contents to a new BOM using the entered item/site/sub item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.aMCopyBom(PX.Data.PXAdapter)">
            <summary>
            Copy bom smart panel to copy the current BOM contents to a new BOM using the entered item/site/sub item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem)">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.Nullable{System.Int32})">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="subItemID">SUbItemID</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.DuplicateEntryMessage(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.String)">
            <summary>
            Builds and creates the warning/error message related to duplicates items on a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="duplicateAMBomMatl">The found duplicate AMBomMatl row</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="setupCheck">BOM Setup duplicate setup option indicating warning or error</param>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.DefaultItemSiteByBOM(PX.Objects.AM.AMBomItem)">
            <summary>
            Create an INItemSite record if one doesn't exist for the bom item/site
            </summary>
            <param name="amBomItem">BOM containing item/site ids</param>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.DefaultItemSite(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an INItemSite record if one doesn't exist for the bom item/site
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMBaseGraph`1.InsertMissingINItemSite">
            <summary>
            Insert INItemSite records based on inserted bom item or matl records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMCompareInq.BOMCompareFilter">
            <summary>
            The required filter for displaying the information on the BOM Compare (AM41000) form (corresponding to the <see cref="T:PX.Objects.AM.BOMCompareInq"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.BOMCostRoll.IsMultiLevel">
            <summary>
            Indicates if the process is running for multi level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.RollCostsRetry(PX.Objects.AM.RollupSettings)">
            <summary>
            Perform cost roll with retry on PXExceptions
            </summary>
            <param name="filter"></param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.UpdatePending">
            <summary>
            Update the pending standard cost for each BOM cost item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.UpdateItemSiteStdCostOverrides">
            <summary>
            Handle standard cost overrides at the site level using primary bom for the site
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.GetToolCost(PX.Objects.AM.AMBomCost)">
            <summary>
            Calculate the total tool cost for a BOM
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.SetOverheadCosts(PX.Objects.AM.AMBomCost@,System.Boolean,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts)">
            <summary>
            Update the current BOM Cost row with the correct calculated overhead costs
            </summary>
            <param name="currentAMBomCost">BOM Cost row being updated</param>
            <param name="includeFixValues">Should the fixed overheads be included</param>
            <param name="operationMatlCosts">previously calculated material costs</param>
            <param name="operationLaborCosts">previously calculated labor costs</param>
            <param name="operationLaborHours">previously calculated labor hours</param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.SetBomOverheadCosts(PX.Objects.AM.AMBomCost@,System.Boolean,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts)">
            <summary>
            Update the current BOM Cost row with the correct calculated BOM Only overhead costs
            </summary>
            <param name="currentAMBomCost">BOM Cost row being updated</param>
            <param name="includeFixValues">Should the fixed overheads be included</param>
            <param name="operationMatlCosts">previously calculated material costs</param>
            <param name="operationLaborCosts">previously calculated labor costs</param>
            <param name="operationLaborHours">previously calculated labor hours</param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.SetBomCostOverheadValues(PX.Objects.AM.AMBomCost@,PX.Objects.AM.AMOverhead,System.Decimal,System.Boolean)">
            <summary>
            Sets the correct overhead field of the BOM Cost row
            </summary>
            <param name="currentAMBomCost">BOM Cost row being updated</param>
            <param name="amOverhead">Overhead master row</param>
            <param name="overheadCost">calculated overhead cost</param>
            <param name="includeFixValues">Should the fixed overheads be included</param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.SetWorkCenterOverheadCosts(PX.Objects.AM.AMBomCost@,System.Boolean,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts)">
            <summary>
            Update the current BOM Cost row with the correct calculated Operation Work Center Only overhead costs
            </summary>
            <param name="currentAMBomCost">BOM Cost row being updated</param>
            <param name="includeFixValues">Should the fixed overheads be included</param>
            <param name="operationMatlCosts">previously calculated material costs</param>
            <param name="operationLaborCosts">previously calculated labor costs</param>
            <param name="operationLaborHours">previously calculated labor hours</param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.CalculateOverheadCost(PX.Objects.AM.AMOverhead,PX.Objects.AM.AMWCOvhd,PX.Objects.AM.AMBomOper,System.Decimal,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.AMOverheadCurySettings)">
            <summary>
            Calculate the overhead costs based on a work center overhead row
            </summary>
            <returns>Calculated overhead cost</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.CalculateOverheadCost(PX.Objects.AM.AMOverhead,PX.Objects.AM.AMBomOvhd,PX.Objects.AM.AMBomOper,System.Decimal,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.BOMCostRoll.OperationCosts,PX.Objects.AM.AMOverheadCurySettings)">
            <summary>
            Calculate the overhead costs based on a BOM overhead row
            </summary>
            <returns>Calculated overhead cost</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.CalculateOverheadCost(System.Decimal,System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Calculate the overhead costs based on type and correct variables
            </summary>
            <returns>Calculated overhead cost</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.UpdateMaterialUnitCost(PX.Objects.AM.AMBomMatl,System.Nullable{System.Decimal})">
            <summary>
            Update the BOM Material unit cost into the cache
            </summary>
            <param name="amBomMatl">BOM Material Row</param>
            <param name="unitCost">Unit cost to use in the update process</param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.GetMaterialCost(PX.Objects.AM.AMBomCost,System.Collections.Generic.IEnumerable{PX.Data.PXResult{PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,PX.Objects.IN.INItemSite}},System.Boolean,System.Collections.Generic.List{System.String}@)">
            <summary>
            Get the total BOM/Operations material cost
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.GetCurrentBomCost(System.String,System.String)">
            <summary>
            Get the current BOM unitcost calculated in the AMBomCost table/cache
            </summary>
            <param name="bomId">BOM ID of unit cost to search for</param>
            <param name="revisionId">BOM Revision of unit cost to search for</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.GetMachineCost(PX.Objects.AM.AMBomCost)">
            <summary>
            Get total BOM Machine cost
            </summary>
            <param name="amBomCost">BOM Cost row being processed</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.GetLaborHours(PX.Objects.AM.AMBomOper,System.Boolean)">
            <summary>
            Converts the bom operation record into the total labor hours
            </summary>
            <param name="amBomOper"></param>
            <param name="includeSetupTime">Include the setup hours in the total</param>
            <returns>Total operation labor hours</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.SetLaborCost(PX.Objects.AM.AMBomCost@,System.Boolean)">
            <summary>
            Get the total labor cost and hours while updating the current ambomcost record with the correct labor values.
            </summary>
            <param name="currentAmBomCost">Current AMBomCost record that will be updated</param>
            <param name="includeFixValues">Indicates if fixed labor should be included in the calculations</param>
            <returns>Operation Labor Costs (Item1) and Operation Labor Hours (Item2)</returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.DeleteUserCostRollData">
            <summary>
            Delete any calculated BOM cost records for the current user
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.DeleteUserCostRollData(System.Guid)">
            <summary>
            Delete any calculated BOM cost records for the given user
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMCostRoll.OperationCosts">
            <summary>
            Record costs or units for a set of operations
            </summary>
        </member>
        <member name="P:PX.Objects.AM.BOMCostRoll.OperationCosts.TotalCost">
            <summary>
            Total costs across all operation costs
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.OperationCosts.OperationCost(System.Nullable{System.Int32})">
            <summary>
            Cost for the given operation
            </summary>
            <param name="operationID">Operation ID</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.OperationCosts.Add(System.Nullable{System.Int32},System.Decimal,System.Boolean)">
            <summary>
            Add costs to an operation
            </summary>
            <param name="operationID">OperationID</param>
            <param name="cost">cost/unit value</param>
            <param name="addToExistingCost">Should the entry add to an existing cost if found (when true) or be replaced (when false)</param>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.WriteAMBomCostHistoryRecord(PX.Objects.AM.AMBomCost)">
            <summary>
            Write AMBomCostHistory record from AMBomCost record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMCostRoll.UpdateAMBomCostHistoryRecord(PX.Objects.AM.AMBomCostHistory,PX.Objects.AM.AMBomCost)">
            <summary>
            Update  existing AMBomCostHistory record from AMBomCost record
            </summary>
        </member>
        <member name="T:PX.Objects.AM.RollupSettings">
            <summary>
            BOM Cost roll filter DAC
            </summary>
        </member>
        <member name="P:PX.Objects.AM.RollupSettings.IgnoreReplenishmentSettings">
            <summary>
            When checked the exploded levels will ignore the items replenishment settings for manufactured items only. 
            If a default bom is found it will be used during processing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.RollupSettings.isPersistMode">
            <summary>
            Is the cost roll processing going to persist the overall results after processing?
            Useful when call from other processes where we want to skip persisting and just get the results from the cache
            </summary>
        </member>
        <member name="P:PX.Objects.AM.RollupSettings.IsPersistMode">
            <summary>
            Is the cost roll processing going to persist the overall results after processing?
            Useful when call from other processes where we want to skip persisting and just get the results from the cache
            </summary>
        </member>
        <member name="T:PX.Objects.AM.RollupSettings.foundRecursiveBom">
            <summary>
            Updated fields from cost roll process which sets the field true when a recursive is found
            </summary>
        </member>
        <member name="P:PX.Objects.AM.RollupSettings.FoundRecursiveBom">
            <summary>
            Updated fields from cost roll process which sets the field true when a recursive is found
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMCostRollMultiLevelExt">
            <summary>
            Graph extension of <see cref="T:PX.Objects.AM.BOMCostRoll"/> to apply reusable business object <see cref="T:PX.Objects.AM.MultiLevelBomProcessBase`2"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMInquiryGraph`1">
            <summary>
            Use for inquiry based BOM screens
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMInquiryBaseGraph`1">
            <summary>
            Use for inquiry based BOM screens
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMMaint">
            <summary>
            Bill of Material Maintenance graph
            Main graph for managing a Bill of Material (BOM)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMMaint.Redirect(System.String)">
            <summary>
            Redirect to this graph for the given BOM
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMMaint.Redirect(System.String,System.String)">
            <summary>
            Redirect to this graph for the given BOM / effective date
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMMassChange">
            <summary>
            BOM Mass Change Graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMFilter">
            <summary>
            The required filter for displaying the information on the Mass Change (AM509000) form (corresponding to the <see cref="T:PX.Objects.AM.BOMMassChange"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMWhereUsedInq">
            <summary>
            Manufacturing BOM Material Where Used Inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.BOMWhereUsedInq.CheckRecursive(System.Collections.Generic.Dictionary{System.Int32,PX.Objects.AM.BomWhereUsedDetail},PX.Objects.AM.AMBomItem,System.Int32,PX.Objects.AM.BomWhereUsedDetail)">
            <summary>
            Checks for recursive items found in the multi level where used process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BomWhereUsedFilter">
            <summary>
            Where used inquiry filter
            </summary>
        </member>
        <member name="P:PX.Objects.AM.BomWhereUsedFilter.Sequence">
            <summary>
            Keep track of the records being inserted into the rows for display
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BomWhereUsedDetail">
            <summary>
            Where used inquiry detail
            </summary>
        </member>
        <member name="P:PX.Objects.AM.BomWhereUsedDetail.Sequence">
            <summary>
            Keep track of the records being inserted into the rows for display/sort order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ReadDirection">
            <summary>
            Defines the direction the calendar should be read - forward (1/1 --> 12/31) or backwards(12/31 --> 1/1)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CalendarHelper.EmptyTime">
            <summary>
            Empty date time as it would relate to a calendar day start/end time
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.DayOfWeekAbbreviation(System.DayOfWeek)">
            <summary>
            Get the day of week as an abbreviated 3 character long description.
            Example: DayOfWeek.Sunday = "Sun"
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.DayOfWeekFullName(System.DayOfWeek)">
            <summary>
            Get the day of week as the days normal full description.
            Example: DayOfWeek.Sunday = "Sunday"
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetNextExceptionDate(System.Nullable{System.DateTime})">
            <summary>
            Find the next exception date record from the given date.
            </summary>
            <param name="dateTime">the date to check after for exceptions (optional to return first exception)</param>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.CheckForNextDateException(System.DateTime)">
            <summary>
            Is the given date >= current exception date
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.ResetCalendarException">
            <summary>
            When switching forward and backward with dates it is required that the next calendar exception is reset to correctly process exceptions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.CacheNextException(System.DateTime)">
            <summary>
            Make sure the calendar exception date is cached
            </summary>
            <param name="dateTime">Current calendar date being reviewed</param>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetBreakTimeMinutes(System.DateTime,System.Collections.Generic.List{PX.Objects.AM.AMCalendarBreakTime})">
            <summary>
            Get the total minutes of break time from calendar break details
            </summary>
            <returns>Break time in default minutes</returns>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.AdjustBreakTimes(System.Collections.Generic.List{PX.Objects.AM.AMCalendarBreakTime},System.DateTime,System.DateTime)">
            <summary>
            Adjusts/orders the passed in break time detail to only account for the times between the start and end times
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.BreakTimeOvernightSort(System.Collections.Generic.List{PX.Objects.AM.AMCalendarBreakTime})">
            <summary>
            This will sort PM before AM times as work calendars all have the same date.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetBreakTimesForDayOfWeek(System.DayOfWeek,System.Collections.Generic.List{PX.Objects.AM.AMCalendarBreakTime})">
            <summary>
            Return the break time detail related only to the day of week (includes those marked as any)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetBreakTimes(System.DayOfWeek,System.DateTime,System.DateTime)">
            <summary>
            Gets the break time detail for the given day of week and between the start/end times
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetDateInfo(System.DateTime)">
            <summary>
            Returns information about a given date related to the current calendar
            </summary>
            <param name="dateTime">The date to get information</param>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetNextWorkDay(System.DateTime,System.Boolean)">
            <summary>
            Returns the next calendar working day
            </summary>
            <param name="dateTime">current datetime object needing calculated to get the next date</param>
            <param name="includeCurrentDate">Should the dateTime current date be validated as a working day and if so returned</param>
            <returns>A working day with hours greater than zero</returns>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetGenericWorkingTimes(System.DayOfWeek,PX.Objects.CS.CSCalendar,System.Collections.Generic.List{PX.Objects.AM.AMCalendarBreakTime})">
            <summary>
            Given a day of the week and a working calendar return the correct working times of that day.
            Not date specific
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CalendarHelper.GetGenericWorkingTimes(System.DayOfWeek,System.DateTime,System.DateTime,System.Collections.Generic.List{PX.Objects.AM.AMCalendarBreakTime})">
            <summary>
            Given a day of the week and a working calendar return the correct working times of that day.
            Not date specific
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CapacityInqBase`2">
            <summary>
            Base MFG Capacity Graph
            </summary>
            <typeparam name="TPrimary"></typeparam>
            <typeparam name="TDetail"></typeparam>
        </member>
        <member name="T:PX.Objects.AM.ClockApprovalProcess">
            <summary>
            Approve Clock Entries (AM516000)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ClockApprovalProcess.GetStartEndLaborTime(PX.Data.PXCache,PX.Objects.AM.AMClockTran)">
            <summary>
            Calculate the time between the user entered start/end times
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ClockApprovalProcess.CalcLaborTime(PX.Data.PXCache,PX.Objects.AM.AMClockTran)">
            <summary>
            Sets the Labor Time field with the calculated start/end labor hours value
            </summary>
            <param name="cache"></param>
            <param name="tran"></param>
        </member>
        <member name="T:PX.Objects.AM.ClockTranFilter">
            <summary>
            An optional filter for information on the Approve Clock Entries (AM516000) form (corresponding to the <see cref="T:PX.Objects.AM.ClockApprovalProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ClockEntry">
            <summary>
            Clock Entry (AM315000)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CloseOrderProcess">
            <summary>
            Close production orders process graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.FinancialPeriod">
            <summary>
            Non-table DAC for passing the financial period information into the manufacturing processes which require such information.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ConfigKeyFormulaEngine">
            <summary>
            Engine for processing configuration keys and their related auto calculated/formula values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigKeyFormulaEngine.IsKeyIdInUse(PX.Data.PXGraph,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Determine if the given configuration key is in use by another finished configuration
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.ResetSalesOrderLinesSortOrder(PX.Objects.SO.SOLine,PX.Objects.SO.SOOrderEntry,System.Int32)">
            <summary>
            Reset the sales lines sort order to fit in the new supplemental lines after the parent
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.ResetOpportunityDetailsLineSortOrder(PX.Objects.CR.CROpportunityProducts,PX.Data.PXGraph,PX.Data.PXSelectBase{PX.Objects.CR.CROpportunityProducts})">
            <summary>
            Reset the detail lines sort order of Opportunities/Sales Quote to fit in the new supplemental lines after the parent
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.IsSupplementalLine(PX.Objects.CR.CROpportunityProducts,PX.Objects.CR.CROpportunityProducts)">
            <summary>
            Returns True if a CROpportunityProducts record is a supplemental item of a parent CROpportunityProducts record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.RemoveSOSupplementalLineItems(PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Remove sales order related supplemental line items specific to given configuration result
            </summary>
            <param name="configResult">Configuration to remove related supplemental sales lines</param>
            <returns>True if updates made</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.RemoveSOSupplementalLineItems(PX.Objects.SO.SOOrderEntry,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Remove sales order related supplemental line items specific to given configuration result
            </summary>
            <param name="soOrderEntryGraph">Sales Order Entry Graph</param>
            <param name="configResult">Configuration to remove related supplemental sales lines</param>
            <returns>True if updates made</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.RemoveProductSupplementalLineItems(PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Remove Opportunity related supplemental line items
            </summary>
            <param name="configResult"></param>
            <returns>True if updates made</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.RemoveProductSupplementalLineItems(PX.Data.PXGraph,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Remove Opportunity related supplemental line items
            </summary>
            <param name="configResult"></param>
            <returns>True if updates made</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.ContainsNewSupplementalLines(PX.Data.PXGraph)">
            <summary>
            Does the given opportunity or Quote graph contain new/inserted Supplemental lines?
            </summary>
            <param name="graph">Opportunity graph or Quote Graph</param>
            <returns>True if inserted Supplemental lines found</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigSupplementalItemsHelper.ContainsNewSupplementalLines(PX.Objects.SO.SOOrderEntry)">
            <summary>
            Does the given sales order graph contain new/inserted Supplemental lines?
            </summary>
            <param name="graph">Sales Order graph</param>
            <returns>True if inserted Supplemental lines found</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationCopyEngine.GetConfigResultByKey(PX.Data.PXGraph,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get the latest configuration result by a config key
            </summary>
            <param name="graph">Calling graph</param>
            <param name="configKey">Configuration KEYID to lookup</param>
            <param name="configurationID">ConfigurationID the ConfigKey is related to</param>
            <param name="excludingConfigResultsID">Excluding a specific config results ID (optional)</param>
        </member>
        <member name="T:PX.Objects.AM.ConfigurationCopyEngine.RemoveMultiFormulaAggregrateScope`1">
            <summary>
            Similar to OverrideAttributePropertyScope however by a single field and allows for multiple of TAttribute while the property can have different values
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ConfigurationEntryBase.IsInitConfiguration">
            <summary>
            Is the processing initializing a configuration
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ConfigurationIDManager">
            <summary>
            Manage the use of configuration IDs for given inventory ID and/or warehouse ID
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.ConfigurationContainsActiveRev">
            <summary>
            Check if the given configuration contains a rev that is active
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.ConfigurationContainsActiveRev(System.String)">
            <summary>
            Check if the given configuration contains a rev that is active
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.ConfigurationContainsActiveRev(PX.Data.PXGraph,System.String)">
            <summary>
            Check if the given configuration contains a rev that is active
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.ConfigurationContainsOtherRevs">
            <summary>
            Check if the given configuration contains other revisions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.ConfigurationContainsOtherRevs(PX.Objects.AM.AMConfiguration)">
            <summary>
            Check if the given configuration contains other revisions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.ConfigurationContainsOtherRevs(System.String,System.String)">
            <summary>
            Check if the given configuration contains other revisions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.GetAttributeVariableInUseMessages(PX.Objects.AM.AMConfigurationAttribute)">
            <summary>
            Main call for check of all attribute variables in use checks.
            </summary>
            <returns>List of user messages referencing entities using the given variable</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.GetAttributeVariableInUseMessages(System.String,System.String,System.String)">
            <summary>
            Main call for check of all attribute variables in use checks.
            </summary>
            <returns>List of user messages referencing entities using the given variable</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.GetFeaturesOptionsWithAttributeVariable(System.String,System.String,System.String)">
            <summary>
            Find all features and/or options using formulas relating to variables returning user messages of row/values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.GetAttributesWithAttributeVariable(System.String,System.String,System.String)">
            <summary>
            Find all attributes using formulas relating to variables returning user messages of row/values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.GetAttributesRulesWithAttributeVariable(System.String,System.String,System.String)">
            <summary>
            Find all attributes rules using formulas relating to variables returning user messages of row/values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationMaint.PrepareImportRow(System.String,System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Validate an excel row
            </summary>
            <param name="viewName"></param>
            <param name="keys"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.ConfigurationMaint.ConfigurationIDLevels">
            <summary>
            An indicator for storing the Configuration ID by the selected levels as configured on pop-up panel on the Configuration Maintenance (AM207500) form (corresponding to the <see cref="T:PX.Objects.AM.ConfigurationMaint"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ConfigurationSelect.IsDirty">
            <summary>
            Are any of the configuration caches dirty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ConfigurationSelect.IsCopyMode">
            <summary>
            Is the current cache of configurations being used in a copy configuration process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ConfigurationSelect._isCopyMode">
            <summary>
            Is the current cache of configurations being used in a copy configuration process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ConfigurationSelect._IsConfigCreation">
            <summary>
            Is the configuration being created and loading all result records.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.ConfigPersistInsertUpdate">
            <summary>
            Persist only the configuration data
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.TraceConfigurationValues(PX.Data.PXCache,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Print selective configuration data to Trace window. Example of use: running configuration entry in test mode
            </summary>
            <param name="configResults"></param>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.CalculateSalesPrice(PX.Data.PXGraph,PX.Data.PXCache,System.Nullable{System.Int32},PX.Objects.CM.CurrencyInfo,System.String)">
            <summary>
            Calculate sales price without customer information
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.TryGetDefaultConfigurationID(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String@)">
            <summary>
            Resolve which configuration ID to return as default by looking for IDs set in INItemSite and InventoryItem.
            </summary>
            <param name="inventoryID">InventoryItem item ID</param>
            <param name="siteID">INItemSite site ID</param>
            <param name="configurationID"> Configuration ID taken from : Item Warehouse if available,  otherwise returns Stock Item if available.  Null if not found.</param>
            <returns> True if a configurationID was found, otherwise false.</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.TryGetDefaultConfigurationID(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String@)">
            <summary>
            Resolve which configuration ID to return as default by looking for IDs set in INItemSite and InventoryItem.
            </summary>
            <param name="inventoryID">InventoryItem item ID</param>
            <param name="siteID">INItemSite site ID</param>
            <param name="configurationID"> Configuration ID taken from : Item Warehouse if available,  otherwise returns Stock Item if available.  Null if not found.</param>
            <returns> True if a configurationID was found, otherwise false.</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.TryGetDefaultConfigurationID(System.Nullable{System.Int32},System.String@)">
            <summary>
            Return default configuration ID set on Stock Item.
            </summary>
            <param name="inventoryID">InventoryItem item ID</param>
            <param name="configurationID"> Configuration ID taken from Stock Item if available, otherwise null.</param>
            <returns> True if a configurationID was found, otherwise false.</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.TryGetDefaultConfigurationID(PX.Data.PXGraph,System.Nullable{System.Int32},System.String@)">
            <summary>
            Return default configuration ID set on Stock Item.
            </summary>
            <param name="inventoryID">InventoryItem item ID</param>
            <param name="configurationID"> Configuration ID taken from Stock Item if available, otherwise null.</param>
            <returns> True if a configurationID was found, otherwise false.</returns>
        </member>
        <member name="M:PX.Objects.AM.ConfigurationSelect.ClearConfigurationCache">
            <summary>
            Clear the cache configuration Results 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateECOsFilter">
            <summary>
            Optional filter processing options on the Create ECOs (AM514000) form (corresponding to the <see cref="T:PX.Objects.AM.CreateECOsProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateInventoryItemProcess">
            <summary>
            Estimate module - creation of non-inventory items to stock/non-stock items
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateInventoryItemProcess.GetMaskedInventoryCDValue(PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem,System.String)">
            <summary>
            Trim the given inventory CD to fit the mask.
            Necessary due to module release without segment/dimension support
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateInventoryItemProcess.Process(System.Collections.Generic.List{PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem},PX.Objects.AM.CreateInventoryItemProcess.CreateInventoryItemFilter)">
            <summary>
            Process selected grid contents
            </summary>
            <param name="list">List of selected grid rows</param>
        </member>
        <member name="M:PX.Objects.AM.CreateInventoryItemProcess.CheckRequiredFields(PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem)">
            <summary>
            Make sure all required fields have a value
            </summary>
            <param name="selectedInventoryItem">Row to check for valid required fields</param>
        </member>
        <member name="M:PX.Objects.AM.CreateInventoryItemProcess.ProcessRow(PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem)">
            <summary>
            Process a single row
            </summary>
            <param name="row">Row to process</param>
        </member>
        <member name="M:PX.Objects.AM.CreateInventoryItemProcess.CreateInventoryItem(PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem)">
            <summary>
            Create a stock/non stock item
            </summary>
            <param name="row">row used to create stock item</param>
            <returns>Newly created inventory item row</returns>
        </member>
        <member name="M:PX.Objects.AM.CreateInventoryItemProcess.UpdateEstimate(PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem,PX.Objects.IN.InventoryItem)">
            <summary>
            Update the estimate revisions using the created item
            </summary>
            <param name="row">Processing row</param>
            <param name="inventoryItem">Created/Found inventory item</param>
        </member>
        <member name="T:PX.Objects.AM.CreateInventoryItemProcess.CreateInventoryItemFilter">
            <summary>
            Filter DAC for Create Inventory Items Graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem">
            <summary>
            Grid detail DAC containing non-inventory estimate/material items
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem.Body">
            <summary>
            Rich text description of the item/estimate
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem.NonInventoryLevel">
            <summary>
            Non-Inventory Level attribute
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateInventoryItemProcess.NonInventoryItem.NonInventoryLevel.Desc">
            <summary>
            Description/labels for identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateProductionOrdersProcess">
            <summary>
            Create Production Orders Process Graph 
            Processing Graph for Creating and Scheduling Creation of production orders
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateProductionOrdersProcess.EnumerateAndPrepareFixedDemands(PX.Data.PXResultset{PX.Objects.AM.AMFixedDemand})">
            <summary>
            Enumerates the and prepares fixed demands for the view delegate. 
            </summary>
            <param name="fixedDemands">The fixed demands.</param>
            <returns/>
        </member>
        <member name="M:PX.Objects.AM.CreateProductionOrdersProcess.CreateProductionOrdersFromSalesLines(System.Collections.Generic.List{PX.Objects.SO.SOLine})">
            <summary>
            Create production orders based on a set list of sales lines
            Called from the SOOrderEntry Screen
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateProductionOrdersProcess.CreateProductionOrders(System.Collections.Generic.List{PX.Objects.AM.AMFixedDemand},PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter,PX.Objects.AM.ProdMaint)">
            <summary>
            Create production orders 
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateProductionOrdersProcess.GetProductionCreatedEventMessage(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMFixedDemand,PX.Objects.SO.SOLine,PX.Objects.AM.AMProdItem)">
            <summary>
            Build the production event for the order created event message
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateProductionOrdersProcess.GetPlanDate(PX.Objects.SO.SOLine,System.DateTime)">
            <summary>
            Get/calculate the sales lines plan date for production
            </summary>
            <param name="soLine">sales line</param>
            <returns>production plan date</returns>
        </member>
        <member name="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter">
            <summary>
            Optional filter processing options on the 'Create Production Orders' (AM510000) form (corresponding to the <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilterProjectionAttribute">
            <summary>
            Specialized version of the Projection Attribute. Defines Projection as <br/>
            a select of <see cref="T:PX.Objects.IN.INItemPlan"/> Join <see cref="T:PX.Objects.IN.INPlanType"/> Join <see cref="T:PX.Objects.IN.InventoryItem"/> Join <see cref="T:PX.Objects.IN.INUnit"/> Left Join <see cref="T:PX.Objects.IN.INItemSite"/> <br/>
            filtered by <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> and <see cref="T:PX.Objects.IN.InventoryItem.productManagerID"/> according to the values <br/>
            in the <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter"/>: <br/>
            1. <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.ownerID"/> is null or <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.ownerID"/> = <see cref="T:PX.Objects.IN.InventoryItem.productManagerID"/> <br/>
            2. <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.workGroupID"/> is null or <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.workGroupID"/> = <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/><br/>
            3. <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.myWorkGroup"/> = false or <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> = InMember&lt;<see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.currentOwnerID"/>&gt;<br/>
            4. <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> is null or <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> = Owened&lt;<see cref="T:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilter.currentOwnerID"/>&gt;<br/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CreateProductionOrdersProcess.ProductionOrdersCreateFilterProjectionAttribute.#ctor">
            <summary>
            Default ctor
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMFixedDemand">
            <summary>
            A projection that uses the "Mark for Production" data in the <see cref="T:PX.Objects.IN.INItemPlan"/> class for processing data on the Create Production Orders (AM510000) form (corresponding to the <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineDemandConfiguration.ordLineRef">
            <summary>
            <inheritdoc cref="T:PX.Objects.AM.AMConfigurationResults.ordLineRef"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SOLineDemandConfiguration.OrdLineRef">
            <summary>
            <inheritdoc cref="P:PX.Objects.AM.AMConfigurationResults.OrdLineRef"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineDemandConfiguration.ordTypeRef">
            <summary>
            <inheritdoc cref="T:PX.Objects.AM.AMConfigurationResults.ordTypeRef"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SOLineDemandConfiguration.OrdTypeRef">
            <summary>
            <inheritdoc cref="P:PX.Objects.AM.AMConfigurationResults.OrdTypeRef"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineDemandConfiguration.ordNbrRef">
            <summary>
            <inheritdoc cref="T:PX.Objects.AM.AMConfigurationResults.ordNbrRef"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SOLineDemandConfiguration.OrdNbrRef">
            <summary>
            <inheritdoc cref="P:PX.Objects.AM.AMConfigurationResults.OrdNbrRef"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineDemandConfiguration.configResultsID">
            <summary>
            <inheritdoc cref="T:PX.Objects.AM.AMConfigurationResults.configResultsID"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SOLineDemandConfiguration.ConfigResultsID">
            <summary>
            <inheritdoc cref="P:PX.Objects.AM.AMConfigurationResults.ConfigResultsID"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineDemandConfiguration.completed">
            <summary>
            <inheritdoc cref="T:PX.Objects.AM.AMConfigurationResults.completed"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SOLineDemandConfiguration.Completed">
            <summary>
            <inheritdoc cref="P:PX.Objects.AM.AMConfigurationResults.Completed"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineDemandConfiguration.isCompletionRequired">
            <summary>
            <inheritdoc cref="T:PX.Objects.AM.AMConfiguration.isCompletionRequired"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SOLineDemandConfiguration.IsCompletionRequired">
            <summary>
            <inheritdoc cref="P:PX.Objects.AM.AMConfiguration.IsCompletionRequired"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CriticalMaterialsInq">
            <summary>
            Manufacturing critical materials inquiry graph (Page: AM401000)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CriticalMaterialsInq.BuildSelectedProdMatl(System.Collections.Generic.List{PX.Objects.AM.SelectedProdMatl},PX.Objects.AM.AMProdMatl,PX.Objects.AM.AMProdOper,PX.Objects.AM.AMProdItem,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdMatlSplit,PX.Objects.IN.INSiteStatusByCostCenter,PX.Objects.AM.INLocationTotals,PX.Objects.IN.INItemSite)">
             <summary>
             Builds a displayed production material record in the critical material grid
             </summary>
             <returns>Processed selected material row</returns>
            
        </member>
        <member name="M:PX.Objects.AM.CriticalMaterialsInq.GetPreviousMaterialQty(System.Collections.Generic.List{PX.Objects.AM.SelectedProdMatl},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Find the previous qty for like items to correctly show shortages
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CriticalMaterialsInq.TryCreateTransferOrder(System.Collections.Generic.List{PX.Objects.AM.SelectedProdMatl},PX.Objects.AM.TROrderFilter,PX.Objects.CS.Numbering,PX.Objects.SO.SOOrder@)">
            <summary>
            Create (persist) a new Transfer order
            </summary>
            <param name="prodMatlList">list of production material being added to the transfer</param>
            <param name="filter">CreatePurchase Order Filter used for order creation</param>
            <param name="numbering">Create transfer order Numbering </param>
            <param name="newTrOrder">If create process complete this will be the new transfer order record</param>
            <returns>true when successful in creation, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.CriticalMaterialsInq.CreateProductionOrders(PX.Objects.AM.AMProdItem,System.Collections.Generic.List{PX.Objects.AM.SelectedProdMatl},PX.Objects.AM.CreateProdFilter,PX.Objects.CS.Numbering,System.Collections.Generic.List{PX.Objects.AM.AMProdItem})">
            <summary>
            Create Manufacturing production orders
            </summary>
            <param name="prodCreatedFrom">ProdItem Record that generated critical Material</param>
            <param name="prodMatlList">List of production material records</param>
            <param name="filter">Create Production Order Filter from Smart panel</param>
            <param name="numbering">Production Numbering from the order type</param>
            <returns>List of Production orders created</returns>
        </member>
        <member name="M:PX.Objects.AM.CriticalMaterialsInq.CreateNewProdItem(PX.Objects.AM.AMProdItem,System.Decimal,PX.Objects.AM.AMProdMatl,PX.Objects.AM.CreateProdFilter,PX.Objects.CS.Numbering,PX.Objects.AM.ProdMaint)">
            <summary>
            Create/Insert a new Production Order record using the given ProdMaint graph
            </summary>
            <param name="parentAMProdItem">Parent production record</param>
            <param name="qtyToProduce">Qty to produce</param>
            <param name="prodMatl">Production material record from the parent order as the base for the child order</param>
            <param name="filter">Critical materials create manufactured production order filter</param>
            <param name="numbering">Production order type numbering sequence</param>
            <param name="prodMaintGraph">Production order maintenance graph for creating the production order</param>
            <returns>Current/Inserted production record</returns>
        </member>
        <member name="T:PX.Objects.AM.SelectedProdMatl">
            <summary>
            Processing or inquiry information based on the <see cref="T:PX.Objects.AM.AMProdMatl"/> class for use on the Critical Materials (AM401000) form (corresponding to the <see cref="T:PX.Objects.AM.CriticalMaterialsInq"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SelectedProdMatl.ReplenishmentSource">
            <summary>
            Replenishment source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProdItemFilter">
            <summary>
            Required filter for displaying the information on the Critical Materials (AM401000) form (corresponding to the <see cref="T:PX.Objects.AM.CriticalMaterialsInq"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateProdFilter">
            <summary>
            The filter for the "Create Production Order" pop-up panel that is opened when a user clicks "Manufacture" on the Critical Materials (AM401000) form (corresponding to the <see cref="T:PX.Objects.AM.CriticalMaterialsInq"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.TROrderFilter">
            <summary>
            The filter for the "Create Transfer" pop-up panel that is opened when a user clicks "Transfer" on the Critical Materials (AM401000) form (corresponding to the <see cref="T:PX.Objects.AM.CriticalMaterialsInq"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreatePurchaseOrdFilter">
            <summary>
            The filter for the "Create Purchase Order" pop-up panel that is opened when a user clicks "Purchase" on the Critical Materials (AM401000) form (corresponding to the <see cref="T:PX.Objects.AM.CriticalMaterialsInq"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.INLocationTotals.QtyProductionSupplyPrepared">
            <summary>
            Production / Manufacturing 
            Specifies the quantity Production Supply Prepared.  
            </summary>
        </member>
        <member name="P:PX.Objects.AM.INLocationTotals.QtyProductionSupply">
            <summary>
            Production / Manufacturing 
            Specifies the quantity Production Supply.  
            </summary>
        </member>
        <member name="P:PX.Objects.AM.INLocationTotals.QtyProductionDemandPrepared">
            <summary>
            Production / Manufacturing 
            Specifies the quantity On Production Demand Prepared.  
            </summary>
        </member>
        <member name="P:PX.Objects.AM.INLocationTotals.QtyProductionDemand">
            <summary>
            Production / Manufacturing 
            Specifies the quantity On Production Demand.  
            </summary>
        </member>
        <member name="F:PX.Objects.AM.CTPProcess.Filter">
            <summary>
            Processing page filter
            </summary>
        </member>
        <member name="F:PX.Objects.AM.CTPProcess.ProcessingRecords">
            <summary>
            Processing records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CTPProcess.CTPFilter">
            <summary>
            Processing filter for the Process Capable to Promise (AM515000) form (corresponding to the <see cref="T:PX.Objects.AM.CTPProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CTPProcess.CTPLine">
            <summary>
            Projection of the <see cref="T:PX.Objects.SO.SOLine"/> class used as the processing data for the Process Capable to Promise (AM515000) form (corresponding to the <see cref="T:PX.Objects.AM.CTPProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CTPProcess.QtyAvailFilter">
            <summary>
            The filter for the "Quantity Available" pop-up panel that is opened when a user clicks the hyperlink in the OpenQty field on the Critical Materials (AM401000) form (corresponding to the <see cref="T:PX.Objects.AM.CriticalMaterialsInq"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CurrencyHelper">
            <summary>
            Manufacturing Currency Helper class
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CurrencyHelper.GetBaseCuryDecimalPlaces(PX.Data.PXGraph)">
            <summary>
            Get the current base currency decimal places
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMAPSMaintenanceSetup">
            <summary>
            A single result of processing on the APS Maintenance Process (AM512000) form,
            which corresponds to the <see cref="T:PX.Objects.AM.APSMaintenanceProcess"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.WorkCenterCalendarProcessLastRunDateTime">
            <summary>
            The date when the work center schedule was updated for the last time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.WorkCenterCalendarProcessLastRunByID">
            <summary>
            The user who ran the update of the work center schedule.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.BlockSizeSyncProcessLastRunDateTime">
            <summary>
            The date and time when the schedule blocks for the work center were last updated.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.BlockSizeSyncProcessLastRunByID">
            <summary>
            The user who updated the schedule block for the work center.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.LastBlockSize">
            <summary>
            The previous schedule block size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.CurrentBlockSize">
            <summary>
            The new block size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.HistoryCleanupProcessLastRunDateTime">
            <summary>
            The date and time when the history was cleaned up for the last time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.HistoryCleanupProcessLastRunByID">
            <summary>
            The user who ran the history cleanup.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.WorkCalendarProcessLastRunDateTime">
            <summary>
            The date and time when the work calendar process was lately run.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMAPSMaintenanceSetup.WorkCalendarProcessLastRunByID">
            <summary>
            The user who ran the update of the work calendar parameters.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBatch">
            <summary>
            The information about the manufacturing transaction batch header.
            Transactions include the <see cref="F:PX.Objects.AM.Attributes.AMDocType.Move"/>, <see cref="F:PX.Objects.AM.Attributes.AMDocType.Labor"/>,
            <see cref="F:PX.Objects.AM.Attributes.AMDocType.Material"/>, <see cref="F:PX.Objects.AM.Attributes.AMDocType.WipAdjust"/>,
            <see cref="F:PX.Objects.AM.Attributes.AMDocType.ProdCost"/>, and <see cref="F:PX.Objects.AM.Attributes.AMDocType.Disassembly"/> classes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.BranchID">
            <summary>
            The branch ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.DocType">
            <summary>
            The type of the manufacturing document or transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.BatNbr">
            <summary>
            The reference number of the transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.FinPeriodID">
            <summary>
            The financial period that corresponds to the transaction date.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.Status">
            <summary>
            The status of the transaction set by the system.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.Hold">
            <summary>
            A Boolean value that indicates whether the batch is on hold.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.ControlAmount">
            <summary>
            The control amount.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.ControlQty">
            <summary>
            The control quantity of the transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.ControlCost">
            <summary>
            The control cost of the transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.TranDate">
            <summary>
            The date when the transaction was created.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.OrigBatNbr">
            <summary>
            The batch number of th original transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.OrigDocType">
            <summary>
            The document type of the original transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.TranPeriodID">
            <summary>
            The financial period in which the transaction amount is posted.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.Released">
            <summary>
            A Boolean value that indicates whether the batch is released.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.TotalAmount">
            <summary>
            The total amount of the transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.TotalQty">
            <summary>
            The total quantity of the transaction, which the system calculates as the sum of the values in <see cref="P:PX.Objects.AM.AMMTran.Qty"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.TotalCost">
            <summary>
            The total cost of the transaction, which the system calculates as the sum of the values in <see cref="P:PX.Objects.AM.AMMTran.ExtCost"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.LineCntr">
            <summary>
            The line counter.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.RefLineNbr">
            <summary>
            The reference line number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.TranDesc">
            <summary>
            A brief description of the transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.EditableBatch">
            <summary>
            A Boolean value that indicates whether the batch is editable.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBatch.DeletableBatch">
            <summary>
            A Boolean value that indicates whether the batch can be deleted.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomAttribute">
            <summary>
            Bill of material attributes for both BOM and Operation level. BOM attributes are optional for a bill of material.
            Parent:  <see cref = "T:PX.Objects.AM.AMBomItem"/> 
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.BOMID">
            <summary>
            The ID of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.RevisionID">
            <summary>
            The revision of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.LineNbr">
            <summary>
            The line number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.Level">
            <summary>
            The attribute level, which is specified automatically.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.AttributeID">
            <summary>
            The ID of the attribute.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.OperationID">
            <summary>
            The operation number from the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.Label">
            <summary>
            The unique label.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.Descr">
            <summary>
            A description for the attribute.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.Enabled">
            <summary>
            A Boolean value that indicates (if set to <see langword="true" />) that the value can be changed in the production order and entered when reporting production.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.TransactionRequired">
            <summary>
            A Boolean value that indicates (if set to <see langword="true" />) that the value must be specified before the production transaction batch is released.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.Value">
            <summary>
            The default value that is copied onto the production order or operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.OrderFunction">
            <summary>
            The field that specifies where the attribute can be used.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomAttribute.RowStatus">
            <summary>
            The row status.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomCost">
            <summary>
            Table with results when processing the Cost Roll (AM508000) form and the <see cref="T:PX.Objects.AM.BOMCostRoll"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.MatlManufacturedCost">
            <summary>
            The manufactured material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.MatlNonManufacturedCost">
            <summary>
            The purchase material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.MatlCost">
            <summary>
            The total cost of the BOM materials.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.FLaborCost">
            <summary>
            The fixed labor cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.VLaborCost">
            <summary>
            The variable labor cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.MachCost">
            <summary>
            The total machine cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.OutsideCost">
            <summary>
            The outside cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.DirectCost">
            <summary>
            The direct cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.FOvdCost">
            <summary>
            The total cost of fixed overhead.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.VOvdCost">
            <summary>
            The total cost of variable overhead.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.SubcontractMaterialCost">
            <summary>
            The cost of materials with the Subcontract type and the Purchase or Ship to Vendor subcontract source.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.ReferenceMaterialCost">
            <summary>
            The cost of materials that have the Subcontract type and the Vendor Supplied subcontract source.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.InventoryID">
            <summary>
            The stock item assigned to the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.SubItemID">
            <summary>
            The subitem of the inventory item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.SiteID">
            <summary>
            The warehouse assigned to the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.BOMID">
            <summary>
            The bill of material with the rolled-up cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.RevisionID">
            <summary>
            The revision of the bill of material that is specified in <see cref="P:PX.Objects.AM.AMBomCost.BOMID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.UnitCost">
            <summary>
            The unit cost of the item, which has been calculated during the cost rollup process.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.UserID">
            <summary>
            The user ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.ToolCost">
            <summary>
            The total cost of tools.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.LotSize">
            <summary>
            The lot size, which the system uses to apportion fixed costs, such as fixed labor costs and fixed overhead costs.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.TotalCost">
            <summary>
            The total cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.MultiLevelProcess">
            <summary>
            Indicates if the record was processed using Multi level
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.Level">
            <summary>
            BOM Level based on the entered cost roll filter criteria (not max low level).
            This field is important to the order of processing cost roll boms. Highest value (lowest level) are calculated first
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.IsDefaultBom">
            <summary>
            Is the given BOM a default BOM
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.FixedLaborTime">
            <summary>
            The total setup time for all operations of the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.VariableLaborTime">
            <summary>
            The total run time for all operations of the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.MachineTime">
            <summary>
            The total machine time for all operations of the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.ItemClassID">
            <summary>
            The item class of the stock item specified in the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.StdCost">
            <summary>
            The current standard cost if the item has the Standard valuation method.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.PendingStdCost">
            <summary>
            The pending cost if the item has the Standard valuation method.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCost.CuryID">
            <summary>
            The currency ID.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomCostHistory">
            <summary>
            History of the <see cref="T:PX.Objects.AM.AMBomCost"/> graph that was created when a user clicked "Archive" on the Cost Roll (AM508000) form, and the <see cref="T:PX.Objects.AM.BOMCostRoll"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.BOMID">
            <summary>
            The ID of the bill of material that was rolled up.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.RevisionID">
            <summary>
            The revision of the bill of material that is specified in <see cref="P:PX.Objects.AM.AMBomCostHistory.BOMID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.StartDate">
            <summary>
            The start date.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.EndDate">
            <summary>
            The end date.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.MatlManufacturedCost">
            <summary>
            The total level cost of all subassemblies.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.MatlNonManufacturedCost">
            <summary>
            The total level cost of all purchased items.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.MatlCost">
            <summary>
            The total cost of the BOM materials.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.FLaborCost">
            <summary>
            The calculated total cost of setup hours multiplied by the standard rates of the work center for the lot size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.VLaborCost">
            <summary>
            The calculated total cost of labor multiplied by the standard rates of the work center for the lot size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.MachCost">
            <summary>
            The total cost of machine hours multiplied by the machine per hour rate for the lot size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.OutsideCost">
            <summary>
            The outside cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.DirectCost">
            <summary>
            The direct cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.FOvdCost">
            <summary>
            The total cost of fixed overhead for the lot size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.VOvdCost">
            <summary>
            The total cost of variable overheads for the lot size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.SubcontractMaterialCost">
            <summary>
            The cost of materials with the Subcontract material type and the Purchase or Ship to Vendor subcontract source.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.ReferenceMaterialCost">
            <summary>
            The reference materials that have the Subcontract material type and the Vendor Supplied subcontract source.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.InventoryID">
            <summary>
            The stock item for the BOM ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.SubItemID">
            <summary>
            The subitem of the inventory item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.SiteID">
            <summary>
            The warehouse for the BOM ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.UnitCost">
            <summary>
            The calculated unit cost that will update the pending cost when the update pending process runs.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.ToolCost">
            <summary>
            The total cost of tooling for the lot size.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.LotSize">
            <summary>
            The lot size that is used to allocate the fixed cost elements.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.TotalCost">
            <summary>
            The total cost.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.MultiLevelProcess">
            <summary>
            Indicates if the record was processed using Multi level
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.Level">
            <summary>
            BOM Level based on the entered cost roll filter criteria (not max low level).
            This field is important to the order of processing cost roll boms. Highest value (lowest level) are calculated first
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.IsDefaultBom">
            <summary>
            Is the given BOM a default BOM
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.FixedLaborTime">
            <summary>
            The total setup time for the level.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.VariableLaborTime">
            <summary>
            The total labor run time for the level based on the minimum, maximum, and lot size values.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.MachineTime">
            <summary>
            The total machine time for the level based on the minimum, maximum, and lot size values.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.ItemClassID">
            <summary>
            The item class of the stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.StdCost">
            <summary>
            The current cost, which is displayed on the Item Warehouse Details (IN204500) form, for the items that use the standard cost valuation method.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.PendingStdCost">
            <summary>
            The pending cost, which is displayed on the Item Warehouse Details (IN204500) form, for the items that use the standard cost valuation method.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomCostHistory.CuryID">
            <summary>
            The currency ID.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBOMCurySettings">
            <summary>
            Multiple base currency table that is also used for all standard currencies when the <see cref="P:PX.Objects.CS.FeaturesSet.Multicurrency"/> feature is not enabled, to store the currency-specific costs against a bill of material.
            The table supports the costs for the <see cref = "T:PX.Objects.AM.BOMCurySettingsLineType"/> types linked to the <see cref="T:PX.Objects.AM.AMBomMatl"/> (Material), <see cref="T:PX.Objects.AM.AMBomOper"/> (Operations), and <see cref = "T:PX.Objects.AM.AMBomTool"/> (Tools) classes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.RevisionID">
            <summary>
            The revision ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.OperationID">
            <summary>
            The operation ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.LineID">
            <summary>
            The line ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.CuryID">
            <summary>
            The currency ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.LineType">
            <summary>
            The line type.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.SiteID">
            <summary>
            The warehouse.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.LocationID">
            <summary>
            The warehouse location.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.VendorID">
            <summary>
            The vendor ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.VendorLocationID">
            <summary>
            The vendor location.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBOMCurySettings.UnitCost">
            <summary>
            The unit cost.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BOMCurySettingsLineType">
            <summary>
            Line type value for the <see cref="T:PX.Objects.AM.AMBOMCurySettings"/> table as it supports multiple BOM tables.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItem">
            <summary>
            BOM Item (Master BOM Header Record)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.Descr">
            <summary>
            A description of the bill of material. The system copies the description to production orders that are created by using the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.EffStartDate">
            <summary>
            The date when the BOM revision becomes effective.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.EffEndDate">
            <summary>
            The last date when the BOM revision was effective.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.InventoryID">
            <summary>
            The identifier of the stock item that is produced by using the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.SubItemID">
            <summary>
            The subitem of the stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.SiteID">
            <summary>
            The warehouse to which the produced stock item is received when the item production is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.LineCntrAttribute">
            <summary>
            The counter for attribute lines.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.LineCntrOperation">
            <summary>
            The counter for operation lines.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.Status">
            <summary>
            The status of the revision.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.OwnerID">
            <summary>
            The owner of the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.WorkgroupID">
            <summary>
            The work group.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.Hold">
            <summary>
            A Boolean value that indicates whether the BOM item is on hold.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.Approved">
            <summary>
            A Boolean value that indicates whether the BOM item is approved.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.Rejected">
             <summary>
            A Boolean value that indicates whether the BOM item is rejected.
             </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItem.activeFlg">
            <summary>
            Unbound field indicating BOM Status = Active. Obsolete field for endpoint support only.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.ActiveFlg">
            <summary>
            Unbound field indicating BOM Status = Active. Obsolete field for endpoint support only.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItem.isProcessMFG">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.IsProcessMFG"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem.IsProcessMFG">
            <summary>
            Is the document linked to the Process Manufacturing feature.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItem2">
            <summary>
            A DAC copy of the <see cref="T:PX.Objects.AM.AMBomItem"/> graph to be used as secondary cache for same table when multiple BOM items are used in a single graph.
            See <see cref="T:PX.Objects.AM.EngineeringWorkbenchMaint"/> for example.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItem3">
            <summary>
            Disabled version of <see cref="T:PX.Objects.AM.AMBomItem"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.BOMID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.BOMID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.RevisionID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.RevisionID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.Descr">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.Descr"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.EffStartDate">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.EffStartDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.EffEndDate">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.EffEndDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.InventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.SubItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.SubItemID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.Status">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.Status"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItem3.Hold">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.Hold"/>
        </member>
        <member name="T:PX.Objects.AM.BomInventoryItem">
            <summary>
            BOM item inventory only
            </summary>
        </member>
        <member name="T:PX.Objects.AM.BomInventoryItemSimple">
            <summary>
            BOM item inventory only with small set of columns
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemByInventoryID">
            <summary>
            Aggregate of inventory items with BOMs
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemActive">
            <summary>
            Projection for max valid revision and to display unique bom ids (excludes Archived boms)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemActive2">
            <summary>
            Projection for max valid revision and to display unique bom ids for Active BOMs only
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemNotArchivedAggregate">
            <summary>
            Aggregate of Revisions. Use this is a sub-query on BOM's to get Max Revision that are not Archived
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemActiveAggregate">
            <summary>
            Aggregate of Revisions. Use this is a sub-query on BOM's to get Max Revision and display only BOMs that are active
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemBomDefaults">
            <summary>
            A projection of <see cref="T:PX.Objects.AM.AMBomItem"/> that includes fields indicating default BOMs.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.BOMID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.BOMID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.RevisionID">
            <inheritdoc cref="P:PX.Objects.AM.AMBomItem.RevisionID"/>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemBomDefaults.itemBOMID">
            <summary>
            Default InventoryItem BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.ItemBOMID">
            <summary>
            Default InventoryItem BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemBomDefaults.itemPlanningBOMID">
            <summary>
            InventoryItem Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.ItemPlanningBOMID">
            <summary>
            InventoryItem Planning BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemBomDefaults.itemSiteBOMID">
            <summary>
            Default InventoryItem BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.ItemSiteBOMID">
            <summary>
            Default InventoryItem BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomItemBomDefaults.itemSitePlanningBOMID">
            <summary>
            InventoryItem Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.ItemSitePlanningBOMID">
            <summary>
            InventoryItem Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.IsItemDefaultBOM">
            <summary>
            A Boolean value that indicates whether the BOM is default for the item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.IsItemSiteDefaultBOM">
            <summary>
            A Boolean value that indicates whether the BOM is default for the item warehouse.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.IsDefaultBOM">
            <summary>
            A Boolean value that indicates whether the BOM is the default one.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.ItemReplenishmentSource">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.ReplenishmentSource"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomItemBomDefaults.ItemSiteReplenishmentSource">
            <inheritdoc cref="P:PX.Objects.IN.INItemSite.ReplenishmentSource"/>
        </member>
        <member name="T:PX.Objects.AM.AMBomMatl">
            <summary>
            A BOM material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.OperationID">
            <summary>
            The numeric identifier of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.LineID">
            <summary>
            The line ID, which is an autoincremental number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.InventoryID">
            <summary>
            The identifier of the item used as a material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.SubItemID">
            <summary>
            The subitem of the inventory item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.Descr">
            <summary>
            The description of the inventory item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.QtyReq">
            <summary>
            The material quantity needed to produce the item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.UOM">
            <summary>
            The unit of measure for the quantity specified in <see cref="P:PX.Objects.AM.AMBomMatl.QtyReq"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.BaseQty">
            <summary>
            The base quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.UnitCost">
            <summary>
            The unit cost for the material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.MaterialType">
            <summary>
            The type of the material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.PhantomRouting">
            <summary>
            The way of adding operations of the material that is a phantom subassembly to production orders based on the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.BFlush">
            <summary>
            A Boolean value that indicates whether the the user needs to release the material manually.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.SiteID">
            <summary>
            The warehouse from which the material is issued.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.CompBOMID">
            <summary>
            The subassembly's bill of materials used for production.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.CompBOMRevisionID">
            <summary>
            The revision of the BOM that is specified in <see cref="P:PX.Objects.AM.AMBomMatl.CompBOMID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.LocationID">
            <summary>
            The warehouse location from which the material is issued.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.ScrapFactor">
            <summary>
            The scrap or shrinkage factor for the material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.BubbleNbr">
            <summary>
            The number of the material on the engineering drawing that relates to the BOM.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.EffDate">
            <summary>
            The date when the system starts using the material for the item production.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.ExpDate">
            <summary>
            The date when the system stops using the material for the item production.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.LineNbr">
            <summary>
            The line number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.SortOrder">
            <summary>
            The sorting order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.BatchSize">
            <summary>
            The additional parameter that you can use to flexibly set up the required material quantity. The system uses this value to calculate the final quantity of the material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.PlanCost">
            <summary>
            The planned cost of the inventory item.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomMatl.lineCntrRef">
            <summary>
            <see cref="T:PX.Objects.AM.AMBomRef"/> line counter
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.LineCntrRef">
            <summary>
            <see cref="T:PX.Objects.AM.AMBomRef"/> line counter
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.RowStatus">
            <summary>
            The change status.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.SubcontractSource">
            <summary>
            The source of the material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.IsStockItem">
            <summary>
            A Boolean value that indicates whether the material is a stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatl.OriginalTreeNodeID">
            <summary>
            The original tree node.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomMatlCury">
            <summary>
            Projection of the <see cref="T:PX.Objects.AM.AMBOMCurySettings"/> class for the currency cost data of only the <see cref="T:PX.Objects.AM.AMBomMatl"/> (Material) class.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.BOMID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.BOMID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.RevisionID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.RevisionID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.OperationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.OperationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.LineID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LineID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.CuryID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.CuryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.LineType">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LineType"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.LocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LocationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.VendorID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.VendorID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.VendorLocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.VendorLocationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomMatlCury.UnitCost">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.UnitCost"/>
        </member>
        <member name="T:PX.Objects.AM.AMBomOper">
            <summary>
            A BOM operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.OperationID">
            <summary>
            The numeric identifier of the operation, which determines the sequence in which the operation is executed in production orders.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.OperationCD">
            <summary>
            The numeric identifier of the operation, which is displayed in the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.Descr">
            <summary>
            A description of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.WcID">
            <summary>
            The active work center where the operation takes place.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.SetupTime">
            <summary>
            The time it takes to prepare to start the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.RunUnitTime">
            <summary>
            The time required to produce the specified run units of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.RunUnits">
            <summary>
            The number of units produced during the specified run time for the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.MachineUnitTime">
            <summary>
            The time required to produce the number of machine units specified for the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.MachineUnits">
            <summary>
            The number of units produced during the specified machine time for the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.QueueTime">
            <summary>
            The time a semi-finished item has to wait in the work center before workers can start processing the item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.FinishTime">
            <summary>
            The time required for the semi-finished item to be prepared for the next operation when the current operation has been finished.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.BFlush">
            <summary>
            A Boolean value that indicates whether a labor transaction is needed to report labor hours spent for the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.LineCntrMatl">
            <summary>
            The counter of material lines.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.LineCntrOvhd">
            <summary>
            The counter of overhead lines.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.LineCntrStep">
            <summary>
            The counter of step lines.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.LineCntrTool">
            <summary>
            The counter of tool lines.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.ScrapAction">
            <summary>
            The default scrap action for the operation in new production orders.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.RowStatus">
            <summary>
            The change status.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.MoveTime">
            <summary>
            The time for a semi-finished item to be moved from the work center where the current operation is performed to the work center where the next operation will be performed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.ControlPoint">
            <summary>
            A Boolean value that indicates whether the operation is a control point.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.SetupTimeRaw">
            <summary>
            The setup time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.RunUnitTimeRaw">
            <summary>
            The run unit time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.MachineUnitTimeRaw">
            <summary>
            The machine unit time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.QueueTimeRaw">
            <summary>
            The queue time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.FinishTimeRaw">
            <summary>
            The finish time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.MoveTimeRaw">
            <summary>
            The move time.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.OutsideProcess">
            <summary>
            The outside process.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.DropShippedToVendor">
            <summary>
            A Boolean value that indicates whether the operation has been drop shipped to the vendor.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.VendorID">
            <summary>
            The vendor.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.VendorLocationID">
            <summary>
            The vendor location.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.NewOperationCD">
            <summary>
            The new operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOper.OriginalTreeNodeID">
            <summary>
            The original tree node.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomOperCury">
            <summary>
            A projection over the <see cref="T:PX.Objects.AM.AMBOMCurySettings"/> class for the currency cost data of the <see cref="T:PX.Objects.AM.AMBomOper"/> class.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.BOMID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.BOMID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.RevisionID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.RevisionID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.OperationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.OperationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.LineID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LineID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.CuryID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.CuryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.LineType">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LineType"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.LocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LocationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.VendorID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.VendorID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomOperCury.VendorLocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.VendorLocationID"/>
        </member>
        <member name="T:PX.Objects.AM.AMBomOvhd">
            <summary>
            The BOM overhead.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.OperationID">
            <summary>
            The numeric identifier of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.LineID">
            <summary>
            The line ID, which is an autoincremental number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.OFactor">
            <summary>
            The multiplier that the system uses to calculate the overhead cost for the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.OvhdID">
            <summary>
            The overhead identifier.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomOvhd.RowStatus">
            <summary>
            The change status.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomRef">
            <summary>
            The BOM material reference designators.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.OperationID">
            <summary>
            The numeric identifier of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.MatlLineID">
            <summary>
            The material line ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.LineID">
            <summary>
            The line ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.Descr">
            <summary>
            A description.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.RefDes">
            <summary>
            A reference description.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomRef.RowStatus">
            <summary>
            The change status.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomStep">
            <summary>
            The BOM steps.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.OperationID">
            <summary>
            The numeric identifier of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.Descr">
            <summary>
            The description of the step in the work instruction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.LineID">
            <summary>
            The line ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.RowStatus">
            <summary>
            The change status.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomStep.SortOrder">
            <summary>
            The sorting order.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomTool">
            <summary>
            The BOM tool.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.BOMID">
            <summary>
            The identifier of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.RevisionID">
            <summary>
            The identifier of the BOM revision, which is the modification of the bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.OperationID">
            <summary>
            The numeric identifier of the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.ToolID">
            <summary>
            The identifier of the tool.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.Descr">
            <summary>
            The read-only description of the tool, which the system copies from the Tools (AM205500) form.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.LineID">
            <summary>
            The line ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.QtyReq">
            <summary>
            The quantity (per item unit) of the tool that is required for the operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.UnitCost">
            <summary>
            The unit cost of the tool.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomTool.RowStatus">
            <summary>
            The change status.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomToolCury">
            <summary>
            A projection of the <see cref="T:PX.Objects.AM.AMBOMCurySettings"/> class for the currency cost data of the <see cref="T:PX.Objects.AM.AMBomTool"/> (Tool) class.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.BOMID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.BOMID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.RevisionID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.RevisionID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.OperationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.OperationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.LineID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LineID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.CuryID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.CuryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.LineType">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LineType"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.LocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.LocationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.VendorID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.VendorID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.VendorLocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.VendorLocationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMBomToolCury.UnitCost">
            <inheritdoc cref="P:PX.Objects.AM.AMBOMCurySettings.UnitCost"/>
        </member>
        <member name="T:PX.Objects.AM.AMBSetup">
            <summary>
            The manufacturing bill of material (BOM) preferences.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.BOMNumberingID">
            <summary>
            The numbering sequence the system uses for assigning reference numbers to bills of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.DuplicateItemOnBOM">
            <summary>
            The option that controls the use of duplicate inventory items as materials in all operations of bills of material.
            (Previously DupInvBOM)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.DuplicateItemOnOper">
            <summary>
            The option that controls the use of duplicate inventory items as materials added to each operation of a bill of material.
            (Previously DupInvOper)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.AllowEmptyBOMSubItemID">
            <summary>
            A Boolean value that indicates whether the BOM can be created without a subitem ID.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBSetup.lastLowLevelCompletedDateTime">
            <summary>
            The last date when the low-level values were calculated.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.LastLowLevelCompletedDateTime">
            <summary>
            The last date when the low-level values were calculated.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBSetup.lastMaxLowLevel">
            <summary>
            The maximum low level that was calculated from the last completed low-level process.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.LastMaxLowLevel">
            <summary>
            The maximum low level that was calculated from the last completed low-level process.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.WcID">
            <summary>
            The default work center that is specified for each operation that you add to a bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.OperationTimeFormat">
            <summary>
            The format that is used in the columns with time settings in the operations.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.ProductionTimeFormat">
            <summary>
            The time format that is used for total time values.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.DefaultRevisionID">
            <summary>
            The default identifier of a revision for new bills of material, which is an alphanumeric string.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.ECRNumberingID">
            <summary>
            The numbering sequence the system uses for assigning reference numbers to engineering change requests (ECRs).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.ECONumberingID">
            <summary>
            The numbering sequence the system uses for assigning reference numbers to engineering change orders (ECOs).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.ECRRequestApproval">
            <summary>
            A Boolean value that indicates whether the ECR needs to be approved.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.ECORequestApproval">
            <summary>
            A Boolean value that indicates whether the ECO needs to be approved.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.ForceECR">
            <summary>
            A Boolean value that indicates whether the ECR or ECO is required for new BOM revisions.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.RequireECRBeforeECO">
            <summary>
            A Boolean value that indicates whether the ECR is required before creating ECO.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.AllowArchiveWithoutUpdatePending">
            <summary>
            A Boolean value that indicates whether users can archive the cost roll results without updating the pending costs.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.AutoArchiveWhenUpdatePending">
            <summary>
            A Boolean value that indicates whether the system will archive the cost roll results when a user updates pending costs.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.BOMHoldRevisionsOnEntry">
            <summary>
            A Boolean value that indicates whether the new BOM revisions have the On Hold status. 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBSetup.defaultMoveTime">
            <inheritdoc cref="P:PX.Objects.AM.AMBSetup.DefaultMoveTime"/>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.DefaultMoveTime">
            <summary>
            The time for a semi-finished item to be moved from the work center where the current operation is performed to the work center where the next operation will be performed.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBSetup.defaultQueueTime">
            <inheritdoc cref="P:PX.Objects.AM.AMBSetup.DefaultQueueTime"/>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.DefaultQueueTime">
            <summary>
            The time a semi-finished item has to wait in the work center before workers can start processing the item.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBSetup.defaultFinishTime">
            <inheritdoc cref="P:PX.Objects.AM.AMBSetup.DefaultFinishTime"/>
        </member>
        <member name="P:PX.Objects.AM.AMBSetup.DefaultFinishTime">
            <summary>
            The time required for the semi-finished item to be prepared for the next operation when the current operation has been finished.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMCalendarBreakTime">
            <summary>
            The DAC whose data is shown on the Break Times tab of the Work Calendar (CS209000) form via the <see cref="T:PX.Objects.AM.GraphExtensions.CSCalendarMaintAMExtension"/> graph extension. The data drives break time information for use in production scheduling. A work calendar can have zero to many break time records.
            Parent: <see cref = "T:PX.Objects.CS.CSCalendar"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMClockItem">
            <summary>
            A manufacturing clock transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.BranchID">
            <summary>
            The branch of the clock transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.EmployeeID">
            <summary>
            The identifier of the employee for whom the labor time is recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.TranType">
            <summary>
            The type of the transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.OrderType">
            <summary>
            The type of the production order for which the labor time is recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.ProdOrdID">
            <summary>
            The reference number of the production order that contains the operation for which the labor time is recorded. 
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.OperationID">
            <summary>
            The operation of the production order for which the labor time is recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.InventoryID">
            <summary>
            The item being produced, which is specified in the production order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.SubItemID">
            <summary>
            The subitem of the item specified in <see cref="P:PX.Objects.AM.AMClockItem.InventoryID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.SiteID">
            <summary>
            The warehouse to which the system will move the completed items when the last operation in the routing is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.LocationID">
            <summary>
            The warehouse location to which the system will move the complete items to when the last routing operation is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.TranDate">
            <summary>
            The date when the clock entry has been created.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.Qty">
            <summary>
            The quantity of items completed for this operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.UOM">
            <summary>
            The unit of measure for the item quantity specified in the <see cref="P:PX.Objects.AM.AMClockItem.Qty"/> field.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.BaseQty">
            <summary>
            The base quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.StartTime">
            <summary>
            The selected employee’s clock-in time for the production operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.EndTime">
            <summary>
            The employee’s clock-out time for the production operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.LaborTime">
            <summary>
            The automatically calculated amount of time during which the employee was clocked in
            for the operation of the production order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.LastOper">
            <summary>
            A Boolean value that indicates whether the operation is the last operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.LotSerCntr">
            <summary>
            A counter for lot serials.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.LotSerialNbr">
            <summary>
            The lot serial number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.ShiftCD">
            <summary>
            The shift in which the employee works.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.InvtMult">
            <summary>
            A multiplier.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.ExpireDate">
            <summary>
            The expiration date of the specified quantity of the stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.TranDesc">
            <summary>
            A transaction description.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.ProjectID">
            <summary>
            The project.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.TaskID">
            <summary>
            The task of the project.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.LineCntr">
            <summary>
            A line counter.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.UnassignedQty">
            <summary>
            The unassigned quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItem.IsClockedIn">
            <summary>
            A Boolean value that indicates whether the item is clocked in.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMClockItemSplit">
            <summary>
            A projection over the <see cref="T:PX.Objects.AM.AMClockTranSplit"/> class that represents the Line Details dialog box for the <see cref="T:PX.Objects.AM.AMClockItem"/> class on the Clock Entry (AM315000) form (which corresponds to the <see cref="T:PX.Objects.AM.ClockEntry"/> graph).
            The parent of the class is <see cref = "T:PX.Objects.AM.AMClockItem"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.EmployeeID">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.EmployeeID"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.TranType">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.TranType"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.LineNbr">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.LineNbr"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.SplitLineNbr">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.SplitLineNbr"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.TranDate">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.TranDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.InventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.SubItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.SubItemID"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.LocationID">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.LocationID"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.LotSerialNbr">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.LotSerialNbr"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.LotSerClassID">
            <summary>
            Lot serial class
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.AssignedNbr">
            <summary>
            The assigned number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.ExpireDate">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.ExpireDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.InvtMult">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.InvtMult"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.Released">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.Released"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.UOM">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.UOM"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.Qty">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.Qty"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.BaseQty">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.BaseQty"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.ProjectID">
            <summary>
            The project.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.TaskID">
            <summary>
            The task.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.IsStockItem">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.IsStockItem"/>
        </member>
        <member name="P:PX.Objects.AM.AMClockItemSplit.IsAllocated">
            <inheritdoc cref="P:PX.Objects.AM.AMClockTranSplit.IsAllocated"/>
        </member>
        <member name="T:PX.Objects.AM.AMClockTran">
            <summary>
            A manufacturing clock transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.BranchID">
            <summary>
            The branch ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.EmployeeID">
            <summary>
            The identifier of the employee for whom the labor time is recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LineNbr">
            <summary>
            The line number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.TranType">
            <summary>
            The transaction type.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.OrderType">
            <summary>
            The type of the production order for which the labor time was recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.ProdOrdID">
            <summary>
            The reference number of the production order that contains the operation for which the labor time was recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.OperationID">
            <summary>
            The production operation for which the labor time was recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.InventoryID">
            <summary>
            The item being produced, which is specified in the production order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.SubItemID">
            <summary>
            The subitem of the item specified in <see cref="P:PX.Objects.AM.AMClockTran.InventoryID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.SiteID">
            <summary>
            The warehouse to which the system moves the completed items to when the last routing operation is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LocationID">
            <summary>
            The warehouse location to which the system moves the completed items to when the last routing operation is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.TranDate">
            <summary>
            The date when the clock entry has been created.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.Qty">
            <summary>
            The quantity of items completed for this operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.UOM">
            <summary>
            The unit of measure for the item quantity specified in <see cref="P:PX.Objects.AM.AMClockTran.Qty"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.BaseQty">
            <summary>
            The base quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.Closeflg">
            <summary>
            A Boolean value that indicates whether the clock transaction is approved.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.StartTime">
            <summary>
            The selected employee’s clock-in time for the production operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.EndTime">
            <summary>
            The employee’s clock-out time for the production operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LaborTime">
            <summary>
            The employee clock-in time that is automatically calculated for the production order operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LastOper">
            <summary>
            The last operation.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LotSerCntr">
            <summary>
            A lot and serial counter.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LotSerialNbr">
            <summary>
            The lot or serial number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.ShiftCD">
            <summary>
            The shift in which the employee worked when processing the items.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.InvtMult">
            <summary>
            A multiplier.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.ExpireDate">
            <summary>
            The expiration date of the specified quantity of the stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.TranDesc">
            <summary>
            A transaction description.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.ProjectID">
            <summary>
            The project.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.TaskID">
            <summary>
            The task.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.UnassignedQty">
            <summary>
            The unassigned quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.IsStockItem">
            <summary>
            A Boolean value that indicates whether the clock transaction is a stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.Status">
            <summary>
            The status of the clock transaction.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.IsLotSerialPreassigned">
            <summary>
            A Boolean value that indicates whether the clock transaction has preassigned lot or serial number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.BaseQtyScrapped">
            <summary>
            The base quantity that is scrapped.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.QtyScrapped">
            <summary>
            The scrapped quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.ReasonCodeID">
            <summary>
            The reason code.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.ScrapAction">
            <summary>
            Scrap action.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.FinPeriodID">
            <summary>
            The financial period.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.WcID">
            <summary>
            The work center.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.AllowMultiClockEntry">
            <summary>
            A Boolean value that indicates whether multiple clock entries are allowed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.LaborTimeSeconds">
            <summary>
            The labor time in seconds.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTran.Duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMClockTranSplit">
            <summary>
            The DAC that represents the Line Details dialog box for the <see cref="T:PX.Objects.AM.AMClockTran"/> class on the Clock Entry (AM315000), Multiple Production Clock Entry (AM316000), and Approve Clock Entries (AM516000) forms.
            The parent class is <see cref = "T:PX.Objects.AM.AMClockItem"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.EmployeeID">
            <summary>
            The identifier of the employee for whom you the labor time is recorded.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.TranType">
            <summary>
            The transaction type.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.LineNbr">
            <summary>
            The line number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.SplitLineNbr">
            <summary>
            The split line number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.TranDate">
            <summary>
            The transaction date.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.InventoryID">
            <summary>
            The item being produced, which is specified in the production order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.SubItemID">
            <summary>
            The subitem of the item specified in <see cref="P:PX.Objects.AM.AMClockTranSplit.InventoryID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.SiteID">
            <summary>
            The warehouse to which the system moves the completed items to when the last routing operation is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.LocationID">
            <summary>
            The warehouse location that the system moves the completed items to when the last routing operation is completed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.LotSerialNbr">
            <summary>
            The lot or serial number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMClockTranSplit.LotSerClassID">
            <summary>
            The lot or serial class ID.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigResultsAttribute">
            <summary>
            The table with the results of the product configurator attributes. The data is based on the configuration maintenance data from the <see cref="T:PX.Objects.AM.AMConfigurationAttribute"/> class with the entered or calculated results during the configuration entry. New data is stored for each new configuration result.
            Parent: <see cref = "T:PX.Objects.AM.AMConfigurationResults"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigResultsFeature">
            <summary>
            The table with the product configurator feature results. The data is based on the configuration maintenance data from the <see cref="T:PX.Objects.AM.AMConfigurationFeature"/> class with the entered or calculated results during the configuration entry. New data is stored for each new configuration result.
            Parent: <see cref = "T:PX.Objects.AM.AMConfigurationResults"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigResultsOption">
            <summary>
            The table with the product configurator option results. The data is based on the configuration maintenance data from the <see cref="T:PX.Objects.AM.AMConfigurationOption"/> class with the entered or calculated results during the configuration entry. New data is stored for each new configuration result.
            Parent: <see cref = "T:PX.Objects.AM.AMConfigurationResults"/>, <see cref = "T:PX.Objects.AM.AMConfigResultsFeature"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigResultsRule">
            <summary>
            The table with the product configurator rule results. The data is based on the configuration maintenance data from the <see cref="T:PX.Objects.AM.AMConfigurationRule"/> class with the entered or calculated results during the configuration entry. New data is stored for each new configuration result.
            The <see cref="P:PX.Objects.AM.AMConfigResultsRule.RuleSource"/> class indicates that the rule is for a feature or an attribute.
            Parent: <see cref = "T:PX.Objects.AM.AMConfigurationResults"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfiguration">
            <summary>
            The maintenance table for a product configurator configuration and revision as shown on the Configuration Maintenance (AM207500) form (corresponding to the <see cref="T:PX.Objects.AM.ConfigurationEntry"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfiguration.TranDescription">
            <summary>
            Formula field to configure a custom transaction description for sales order tran description.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationAttribute">
            <summary>
            The maintenance table for the configuration of the product configurator attributes under a configuration revision on the Configuration Maintenance (AM207500) form (corresponding to the <see cref="T:PX.Objects.AM.ConfigurationEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMConfiguration"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationFeature">
            <summary>
            The maintenance table for the configuration of the product configurator features under a configuration revision on the Configuration Maintenance (AM207500) form (corresponding to the <see cref="T:PX.Objects.AM.ConfigurationEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMConfiguration"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationFeature.printResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationFeature.PrintResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationKeys">
            <summary>
            Projection to display Configuration Keys of most recent completed Keys (no duplicate KeyIDs displayed)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.DocDate">
            <summary>
            The date of the document.
            </summary>
            <value>
            Defaults to the current <see cref="P:PX.Data.AccessInfo.BusinessDate">Business Date</see>.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CustomerID">
            <summary>
            Identifier of the <see cref="T:PX.Objects.AR.Customer"/>, whom the document belongs.
            </summary>
            <value>
            Corresponds to the <see cref="P:PX.Objects.CR.BAccount.BAccountID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CustomerLocationID">
            <summary>
            Identifier of the <see cref="T:PX.Objects.CR.Location"/> of the Customer.
            </summary>
            <value>
            Defaults to the <see cref="P:PX.Objects.CR.BAccount.DefLocationID">Default Location</see> of the <see cref="P:PX.Objects.AM.AMConfigurationKeys.CustomerID">Customer</see> if it is specified,
            or to the first found <see cref="T:PX.Objects.CR.Location"/>, associated with the Customer.
            Corresponds to the <see cref="P:PX.Objects.CR.Location.LocationID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CuryID">
            <summary>
            The code of the <see cref="T:PX.Objects.CM.Currency"/> of the document.
            </summary>
            <value>
            Defaults to the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            Corresponds to the <see cref="P:PX.Objects.CM.Currency.CuryID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CuryInfoID">
            <summary>
            Identifier of the <see cref="T:PX.Objects.CM.CurrencyInfo">CurrencyInfo</see> object associated with the document.
            </summary>
            <value>
            Corresponds to the <see cref="P:PX.Objects.CM.CurrencyInfo.CuryInfoID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CuryOptionPriceTotal">
            <summary>
            The total amount of the non supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationKeys.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.OptionPriceTotal">
            <summary>
            The total amount of the non supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CurySupplementalPriceTotal">
            <summary>
            The total amount of the supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationKeys.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.SupplementalPriceTotal">
            <summary>
            The total amount of the supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CuryBOMPriceTotal">
            <summary>
            The total amount of the <see cref="T:PX.Objects.AM.AMBomMatl">lines</see> of the related Bill of Material.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationKeys.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.BOMPriceTotal">
            <summary>
            The total amount of the <see cref="T:PX.Objects.AM.AMBomMatl">lines</see> of the related Bill of Material.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.CuryFixedPriceTotal">
            <summary>
            The total amount of the AMConfigResultsFixed lines of the document.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationKeys.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.FixedPriceTotal">
            <summary>
            The total amount of the AMConfigResultsFixed lines of the document.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationKeys.closed">
            <summary>
            Indicates if the configuration is closed - no more edit.
            Most likely related to linked sales order/opportunity is closed/canceled
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.Closed">
            <summary>
            Indicates if the configuration is closed - no more edit.
            Most likely related to linked sales order/opportunity is closed/canceled
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationKeys.keyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationKeys.KeyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationKeysAggregate">
            <summary>
            Aggregate of keys to remove duplicates. Use this is a sub-query on configResultID for full AMConfigurationResults records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOption">
            <summary>
            The maintenance table for the configuration of the product configurator options under a configuration revision on the Configuration Maintenance (AM207500) form (corresponding to the <see cref="T:PX.Objects.AM.ConfigurationEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMConfiguration"/>, <see cref="T:PX.Objects.AM.AMConfigurationFeature"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOption.configurationID">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOption.ConfigurationID">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOption.revision">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOption.Revision">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOption.configFeatureLineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOption.ConfigFeatureLineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOption.lineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOption.LineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOption.ResultsCopy">
            <summary>
            Indicates the selection/values of this option are not copied when creating a new configuration result
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOption.printResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOption.PrintResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOptionCurySettings">
            <summary>
            The maintenance table for product configurator option based on the base currency. The data from this table is not directly visible in the UI.
            Parent: <see cref="T:PX.Objects.AM.AMConfigurationOption"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOptionCurySettings.configurationID">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOptionCurySettings.ConfigurationID">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOptionCurySettings.revision">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOptionCurySettings.Revision">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOptionCurySettings.configFeatureLineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOptionCurySettings.ConfigFeatureLineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationOptionCurySettings.lineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationOptionCurySettings.LineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationResults">
            <summary>
            Master table with the product configurator results. The data is based on the configuration maintenance data from the <see cref="T:PX.Objects.AM.AMConfiguration"/> class with the configuration totals and order references. New data is stored for each new configuration result.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationResults.isConfigurationTesting">
            <summary>
            Indicates the configuration is running in test mode (no persist to the database)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.IsConfigurationTesting">
            <summary>
            Indicates the configuration is running in test mode (no persist to the database)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.DocDate">
            <summary>
            The date of the document.
            </summary>
            <value>
            Defaults to the current <see cref="P:PX.Data.AccessInfo.BusinessDate">Business Date</see>.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CustomerID">
            <summary>
            Identifier of the <see cref="T:PX.Objects.AR.Customer"/>, whom the document belongs.
            </summary>
            <value>
            Corresponds to the <see cref="P:PX.Objects.CR.BAccount.BAccountID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CustomerLocationID">
            <summary>
            Identifier of the <see cref="T:PX.Objects.CR.Location"/> of the Customer.
            </summary>
            <value>
            Defaults to the <see cref="P:PX.Objects.CR.BAccount.DefLocationID">Default Location</see> of the <see cref="P:PX.Objects.AM.AMConfigurationResults.CustomerID">Customer</see> if it is specified,
            or to the first found <see cref="T:PX.Objects.CR.Location"/>, associated with the Customer.
            Corresponds to the <see cref="P:PX.Objects.CR.Location.LocationID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CuryID">
            <summary>
            The code of the <see cref="T:PX.Objects.CM.Currency"/> of the document.
            </summary>
            <value>
            Defaults to the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            Corresponds to the <see cref="P:PX.Objects.CM.Currency.CuryID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CuryInfoID">
            <summary>
            Identifier of the <see cref="T:PX.Objects.CM.CurrencyInfo">CurrencyInfo</see> object associated with the document.
            </summary>
            <value>
            Corresponds to the <see cref="P:PX.Objects.CM.CurrencyInfo.CuryInfoID"/> field.
            </value>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CuryOptionPriceTotal">
            <summary>
            The total amount of the non supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationResults.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.OptionPriceTotal">
            <summary>
            The total amount of the non supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CurySupplementalPriceTotal">
            <summary>
            The total amount of the supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationResults.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.SupplementalPriceTotal">
            <summary>
            The total amount of the supplemental <see cref="T:PX.Objects.AM.AMConfigResultsOption">lines</see> of the document.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CuryBOMPriceTotal">
            <summary>
            The total amount of the <see cref="T:PX.Objects.AM.AMBomMatl">lines</see> of the related Bill of Material.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationResults.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.BOMPriceTotal">
            <summary>
            The total amount of the <see cref="T:PX.Objects.AM.AMBomMatl">lines</see> of the related Bill of Material.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.CuryFixedPriceTotal">
            <summary>
            Parent configured price.
            Given in the <see cref="P:PX.Objects.AM.AMConfigurationResults.CuryID">currency of the document</see>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.FixedPriceTotal">
            <summary>
            Parent configured price.
            Given in the <see cref="P:PX.Objects.GL.Company.BaseCuryID">base currency of the company</see>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationResults.closed">
            <summary>
            Indicates if the configuration is closed - no more edit.
            Most likely related to linked sales order/opportunity is closed/canceled
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.Closed">
            <summary>
            Indicates if the configuration is closed - no more edit.
            Most likely related to linked sales order/opportunity is closed/canceled
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationResults.keyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.KeyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.IsSalesReferenced">
            <summary>
            Contains sales order references
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.IsOpportunityReferenced">
            <summary>
            Contains CR Opportunity references
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationResults.IsProductionReferenced">
            <summary>
            Contains Production references
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationRule">
            <summary>
            The maintenance table for the configuration of the product configurator rules under a configuration revision on the Configuration Maintenance (AM207500) form (corresponding to the <see cref="T:PX.Objects.AM.ConfigurationEntry"/> graph).
            The <see cref="P:PX.Objects.AM.AMConfigurationRule.RuleSource"/> graph indicates that the rule is for a feature or an attribute.
            Parent: <see cref="T:PX.Objects.AM.AMConfiguration"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationRule.configurationID">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationRule.ConfigurationID">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationRule.revision">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationRule.Revision">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationRule.ruleSource">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationRule.RuleSource">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationRule.sourceLineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationRule.SourceLineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationRule.lineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfigurationRule.LineNbr">
            <summary>
            key field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationAttributeRule">
            <summary>
            Projection for the <see cref="T:PX.Objects.AM.AMConfigurationRule"/> class for only the attribute rules.
            Parent: <see cref="T:PX.Objects.AM.AMConfigurationAttribute"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfigurationFeatureRule">
            <summary>
            Projection for the <see cref="T:PX.Objects.AM.AMConfigurationRule"/> class for only the feature rules.
            Parent: <see cref="T:PX.Objects.AM.AMConfigurationFeature"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfiguratorSetup">
            <summary>
            Manufacturing product configurator setup
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMConfiguratorSetup.defaultsNumberingID">
            <summary>
            setting not implemented
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMConfiguratorSetup.DefaultsNumberingID">
            <summary>
            setting not implemented
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleBatch">
            <summary>
            Disassembly transaction batch header that is entered on the Disassembly (AM301500) form (corresponding to the <see cref="T:PX.Objects.AM.DisassemblyEntry"/> graph).
            This projection will manage both the <see cref="T:PX.Objects.AM.AMBatch"/> and <see cref="T:PX.Objects.AM.AMMTran"/> records for the disassembling item.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMDisassembleBatch.IsDisassembleBatchTran(PX.Objects.AM.AMBatch,PX.Objects.AM.AMMTran)">
            <summary>
            Is the given standard manufacturing batch and transaction records represented as a AMDisassembleBatch row?
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleBatchAttribute">
            <summary>
            Disassembly transaction attributes based on the <see cref="T:PX.Objects.AM.AMMTranAttribute"/> class. Values are entered on the Attributes tab of the Disassembly (AM301500) form (corresponding to the <see cref="T:PX.Objects.AM.DisassemblyEntry"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleBatchSplit">
            <summary>
            Disassembly transaction line details for a <see cref="T:PX.Objects.AM.AMDisassembleBatch"/> batch header that is entered on the Line Details tab of the Disassembly (AM301500) form (corresponding to the <see cref="T:PX.Objects.AM.DisassemblyEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMDisassembleBatch"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleBatchSplit.projectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDisassembleBatchSplit.ProjectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleBatchSplit.taskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDisassembleBatchSplit.TaskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleTran">
            <summary>
            Projection of the <see cref="T:PX.Objects.AM.AMMTran"/> class as a disassembly transaction line that is entered on the Disassembly (AM301500) form (corresponding to the <see cref="T:PX.Objects.AM.DisassemblyEntry"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDisassembleTranSplit">
            <summary>
            Disassembly transaction line detail that represents the <see cref="T:PX.Objects.AM.AMMTranSplit"/> class, as a line detail for the <see cref="T:PX.Objects.AM.AMDisassembleTran"/> class that is entered on Disassembly (AM301500) form (corresponding to <see cref="T:PX.Objects.AM.DisassemblyEntry"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber">
            <summary>
            PXProjection - List transaction split serial tracked items
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.docType">
            <summary>
            AMMTranSplit.docType - IsKey
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.DocType">
            <summary>
            AMMTranSplit.DocType - IsKey
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.batNbr">
            <summary>
            AMMTranSplit.batNbr - IsKey
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.BatNbr">
            <summary>
            AMMTranSplit.BatNbr - IsKey
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.lineNbr">
            <summary>
            AMMTranSplit.lineNbr - IsKey
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.LineNbr">
            <summary>
            AMMTranSplit.LineNbr - IsKey
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.splitLineNbr">
            <summary>
            AMMTranSplit.splitLineNbr - IsKey
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.SplitLineNbr">
            <summary>
            AMMTranSplit.SplitLineNbr - IsKey
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.invtMult">
            <summary>
            AMMTran.invtMult
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.InvtMult">
            <summary>
            AMMTran.InvtMult
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.orderType">
            <summary>
            AMMTran.orderType
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.OrderType">
            <summary>
            AMMTran.OrderType
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.prodOrdID">
            <summary>
            AMMTran.prodOrdID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.ProdOrdID">
            <summary>
            AMMTran.ProdOrdID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.inventoryID">
            <summary>
            AMMTranSplit.inventoryID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.InventoryID">
            <summary>
            AMMTranSplit.InventoryID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.inventoryCD">
            <summary>
            InventoryItem.inventoryCD
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.InventoryCD">
            <summary>
            InventoryItem.InventoryCD
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.subItemID">
            <summary>
            AMMTranSplit.subItemID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.SubItemID">
            <summary>
            AMMTranSplit.SubItemID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.siteID">
            <summary>
            AMMTranSplit.siteID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.SiteID">
            <summary>
            AMMTranSplit.SiteID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.locationID">
            <summary>
            AMMTranSplit.locationID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.LocationID">
            <summary>
            AMMTranSplit.LocationID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.lotSerialNbr">
            <summary>
            AMMTranSplit.lotSerialNbr
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.LotSerialNbr">
            <summary>
            AMMTranSplit.LotSerialNbr
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.lastOper">
            <summary>
            AMMTran.lastOper
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.LastOper">
            <summary>
            AMMTran.LastOper
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.tranQty">
            <summary>
            AMMTran.qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.TranQty">
            <summary>
            AMMTran.Qty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.qtyOnHand">
            <summary>
            INLotSerialStatus.qtyOnHand
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.QtyOnHand">
            <summary>
            INLotSerialStatus.QtyOnHand
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.qtyAvail">
            <summary>
            INLotSerialStatus.qtyAvail
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.QtyAvail">
            <summary>
            INLotSerialStatus.QtyAvail
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.lotSerTrack">
            <summary>
            INLotSerClass.lotSerTrack
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.LotSerTrack">
            <summary>
            INLotSerClass.LotSerTrack
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMDuplicateSerialNumber.lotSerAssign">
            <summary>
            INLotSerClass.lotSerAssign
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMDuplicateSerialNumber.LotSerAssign">
            <summary>
            INLotSerClass.LotSerAssign
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECOItem">
            <summary>
            ECR Item (Master Engineering Change Order Header Record)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMECOItem.ECORev">
            <summary>
            Constant Revision ID Value for all ECO Item records. A unique value to prevent any key violations.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECOItem.eCORev">
            <summary>
            BQL Constant Revision ID Value for all ECO Item records. A unique value to prevent any key violations.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECOSetupApproval">
            <summary>
            Setup record for the Engineering Change Orders (AM215000) form that is related to the approval process. Configured on the BOM Preferences (AM101000) form with the <see cref="T:PX.Objects.AM.BOMSetup"/> graph.
            Requires the <see cref="T:PX.Objects.CS.FeaturesSet.manufacturingECC"/> feature to be enabled.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECRItem">
            <summary>
            ECR Item (Master Engineering Change Request Header Record)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMECRItem.ECRRev">
            <summary>
            Constant Revision ID Value for all ECR Item records. A unique value to prevent any key violations.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECRItem.eCRRev">
            <summary>
            BQL Constant Revision ID Value for all ECR Item records. A unique value to prevent any key violations.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMECRSetupApproval">
            <summary>
            Setup record for the Engineering Change Request (AM210000) form that is related to the approval process. Configured on the BOM Preferences (AM101000) form with the <see cref="T:PX.Objects.AM.BOMSetup"/> graph.
            Requires the <see cref="T:PX.Objects.CS.FeaturesSet.manufacturingECC"/> feature to be enabled.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateClass">
            <summary>
            The maintenance class of defaults for the estimates defined on the Estimate Classes (AM206000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateClassMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateHistory">
            <summary>
            History of all estimate revisions that are viewable on the History tab of the Estimate (AM303000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateItem">
            <summary>
            Master table for an Estimate. 
            </summary>
            <remarks>
            The records of this type are created and edited on the following forms:
            <list type="bullet">
            <item><description>Sales Orders (SO301000) (corresponding to the <see cref="T:PX.Objects.SO.SOOrderEntry"/> graph)</description></item>
            <item><description>Opportunities (CR304000) (corresponding to the <see cref="T:PX.Objects.CR.OpportunityMaint"/> graph)</description></item>
            <item><description>Sales Quotes (CR304500) (corresponding to the <see cref="T:PX.Objects.CR.QuoteMaint"/> graph)</description></item>
            <item><description>Estimate Maintenance (AM303000) (corresponding to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph)</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateItem.ExtCostDisplay">
            <summary>
            For use in totals display without a currency view impact
            (hiding from currency toggle)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateItem.Body">
            <summary>
            Rich text description of the item/estimate
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateItem.pEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateItem.PEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateItem.primaryRevisionID">
            <summary>
            Primary revision of current estimate
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateItem.PrimaryRevisionID">
            <summary>
            Primary revision of current estimate
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateItem.estimateStatus">
            <summary>
            Overall estimate status
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateItem.EstimateStatus">
            <summary>
            Overall estimate status
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateItem.isLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateItem.IsLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateMatl">
            <summary>
            Maintenance table for the materials on an estimate operation on the Estimate Operations (AM304000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateOperMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMEstimateItem"/>, <see cref="T:PX.Objects.AM.AMEstimateOper"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateMatl.BackFlush">
            <summary>
            Determine whether user need to release material manually or not 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateMatl.qtyReqWithScrap">
            <summary>
            Qty Required with Scrap Factor worked in
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateMatl.QtyReqWithScrap">
            <summary>
            Qty Required with Scrap Factor worked in
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateOper">
            <summary>
            Maintenance table for the operations on an estimate on the Estimate Maintenance (AM303000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMEstimateItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateOvhd">
            <summary>
            Maintenance table for the overheads on an estimate operation on the Estimate Operations (AM304000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateOperMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMEstimateItem"/>, <see cref="T:PX.Objects.AM.AMEstimateOper"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateOvhd.OvhdType">
            <summary>
            <see cref="T:PX.Objects.AM.AMOverhead"/> type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateReference">
            <summary>
            Maintenance table for the references on an estimate on the Estimate Maintenance (AM303000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMEstimateItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateReference.quoteNbrLink">
            <summary>
            Non-editable version of quoteNbr used on the page for hyper-link
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateReference.QuoteNbrLink">
            <summary>
            Non-editable version of QuoteNbr used on the page for hyper-link
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateSetup">
            <summary>
            Setup record for the Estimating feature on the Estimate Preferences (AM103000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateSetup"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateSetup.newRevisionIsPrimary">
            <summary>
            During new revision of an estimate, should the new revision automatically be marked as the primary revision
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMEstimateSetup.NewRevisionIsPrimary">
            <summary>
            During new revision of an estimate, should the new revision automatically be marked as the primary revision
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateStep">
            <summary>
            Estimate Steps
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMEstimateTool">
            <summary>
            Maintenance table for the tools on an estimate operation on the Estimate Operations (AM304000) form (corresponding to the <see cref="T:PX.Objects.AM.EstimateOperMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMEstimateItem"/>, <see cref="T:PX.Objects.AM.AMEstimateOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMFeature">
            <summary>
            The configuration of available features that are used when maintaining a product configurator configuration. Maintains data on the Features (AM203500) form (corresponding to the <see cref="T:PX.Objects.AM.FeatureMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMFeature.printResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMFeature.PrintResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMFeatureAttribute">
            <summary>
            The default attribute when selecting the feature while maintaining a product configurator configuration. Maintain data in the Attributes tab of the Features (AM203500) form (corresponding to the <see cref="T:PX.Objects.AM.FeatureMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMFeature"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMFeatureOption">
            <summary>
            The default option when selecting the feature while maintaining a product configurator configuration. Maintains data on the Options tab of the Features (AM203500) form (corresponding to the <see cref="T:PX.Objects.AM.FeatureMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMFeature"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMFeatureOption.printResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMFeatureOption.PrintResults">
            <summary>
            Flag used for reporting
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMForecast">
            <summary>
            Maintenance table for MRP demand forecast records on the Forecasts (AM202000) form (corresponding to the <see cref="T:PX.Objects.AM.Forecast"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMForecastStaging">
            <summary>
            The table with results when generating forecasts on the Generate Forecast (AM502000) form (corresponding to the <see cref="T:PX.Objects.AM.GenerateForecastProcess"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMLaborCode">
            <summary>
            Maintenance table for production labor codes setup on the Labor Codes (AM206500) form (corresponding to the <see cref="T:PX.Objects.AM.LaborCodeMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMach">
            <summary>
            Production machine
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMachCurySettings">
            <summary>
            Multiple base currency table that is also used for all standard currencies when the <see cref="P:PX.Objects.CS.FeaturesSet.Multicurrency"/> feature is not enabled, to store the currency-specific costs.
            The table supports the costs for the Machines <see cref="T:PX.Objects.AM.AMMach"/> class.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMachSchd">
            <summary>
            Table that contains the production schedule for a machine on a specific day. These records are generated by the <see cref="T:PX.Objects.AM.ProductionScheduleEngine"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMachSchd.SchdTime">
            <summary>
            Indicates the machine Schedule Time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMachSchdDetail">
            <summary>
            Table that contains the production schedule detail for a machine within a single day. These records are generated by the <see cref="T:PX.Objects.AM.ProductionScheduleEngine"/> graph.
            Parent: <see cref="T:PX.Objects.AM.AMMachSchd"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMachSchdDetail.startTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMachSchdDetail.StartTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMachSchdDetail.endTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMachSchdDetail.EndTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMMachSchdDetail.Copy(PX.Objects.AM.AMMachSchdDetail)">
            <summary>
            Makes a copy of the object excluding the recordID, created by, last mod by, and timestamps fields
            </summary>
            <param name="schdDetail">Schd Detail record to copy</param>
            <returns>new object with copied values</returns>
        </member>
        <member name="M:PX.Objects.AM.AMMachSchdDetail.Copy">
            <summary>
            Makes a copy of the object excluding the recordID, created by, last mod by, and timestamps fields
            </summary>
            <returns>new object with copied values</returns>
        </member>
        <member name="T:PX.Objects.AM.AMMPS">
            <summary>
            Maintenance table for MRP production supply records on the Master Production Schedule (AM201000) form (corresponding to the <see cref="T:PX.Objects.AM.MPSMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMPSType">
            <summary>
            Maintenance table for Master Production Schedule Type records on the MPS Type (AM203000) form (corresponding to the <see cref="T:PX.Objects.AM.MPSType"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMRPBucket">
            <summary>
            MRP Bucket table for maintaining MRP Buckets
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMRPBucketDetail">
            <summary>
            MRP Bucket Detail table for maintaining MRP Bucket Details
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMRPBucketDetailInq">
            <summary>
            MRP Bucket Detail Inquiry table for MRP Bucket Reporting and Inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMRPBucketInq">
            <summary>
            MRP Bucket Inquiry table for MRP Bucket Reporting and Inquiry
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMRPBucketInq.ReplenishmentSource">
            <summary>
            Replenishment source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMrpProdMatl.function">
            <summary>
            Production order function
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMrpProdMatl.Function">
            <summary>
            Production order function
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTran">
            <summary>
            Manufacturing AM Transaction record
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTran.receiptNbr">
            <summary>
            Record the original receipt number for negative move adjustments
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMTran.ReceiptNbr">
            <summary>
            Record the original receipt number for negative move adjustments
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTran.referenceCostID">
            <summary>
            Cost ID value such as Tool ID, Overhead ID, Machine ID, etc.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMTran.ReferenceCostID">
            <summary>
            Cost ID value such as Tool ID, Overhead ID, Machine ID, etc.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTran.tranTypeChanged">
            <summary>
            Returns true if the trantype has been changed. This is used when deleting splits to make sure tran isn't recalculated
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMTran.TranTypeChanged">
            <summary>
            Returns true if the splits associated with the line has mixed ProjectTask values.
            This field is used to validate the record on persist. 
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTranUnreleasedWipByOperation">
            <summary>
            Projection of <see cref="T:PX.Objects.AM.AMMTran"/> used to lookup unreleased WIP amounts by order operation.
            Uses index AMMTran_IX_UnreleasedWipByOperation
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTranProductionOrder">
            <summary>
            Production orders by transaction
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTranLotSerialNbrAll">
            <summary>
            Projection of <see cref="T:PX.Objects.AM.AMMTran"/> for lot/serial information only.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMTranAttribute">
            <summary>
            Production attributes that are recorded during a transaction.
            Parent: <see cref="T:PX.Objects.AM.AMMTran"/>
            </summary>
            <remarks>
            The records of this type are created and edited on the following forms:
            <list type="bullet">
            <item><description>Move (AM302000) (corresponding to the <see cref="T:PX.Objects.AM.MoveEntry"/> graph)</description></item>
            <item><description>Labor (AM301000) (corresponding to the <see cref="T:PX.Objects.AM.LaborEntry"/> graph)</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:PX.Objects.AM.AMMTranSplit">
            <summary>
            Line details for a production transaction.
            Parent: <see cref="T:PX.Objects.AM.AMMTran"/>
            </summary>
            <remarks>
            The records of this type are created and edited on the following forms:
            <list type="bullet">
            <item><description>Move (AM302000) (corresponding to the <see cref="T:PX.Objects.AM.MoveEntry"/> graph)</description></item>
            <item><description>Labor (AM301000) (corresponding to the <see cref="T:PX.Objects.AM.LaborEntry"/> graph)</description></item>
            <item><description>Materials (AM300000) (corresponding to the <see cref="T:PX.Objects.AM.MaterialEntry"/> graph)</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:PX.Objects.AM.AMMultiLevelBomData">
            <summary>
            Report In Memory DAC (Not an actual table) for the MLB reports
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderCrossRef">
            <summary>
            Used as a transfer object between source screens and order creation screens.
            Temporary data
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderCrossRef.dmdDetGroupedRecNbrs">
            <summary>
            Storing all grouped demand nbrs in a single column with a delimited value
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMOrderCrossRef.DmdDetGroupedRecNbrsDelimiter">
            <summary>
            Delimiter for values stored in <see cref="P:PX.Objects.AM.AMOrderCrossRef.DmdDetGroupedRecNbrs"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderCrossRef.DmdDetGroupedRecNbrs">
            <summary>
            Storing all grouped demand nbrs in a single column with a delimited value
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderCrossRef.KitRevisionID">
            <summary>
            Kit Revision ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderEstimateItemFilter">
            <summary>
            Filter for open estimates.
            </summary>
            <remarks>
            This filter is used on the following forms:
            <list type="bullet">
            <item><description>Sales Orders (SO301000) (corresponding to the <see cref="T:PX.Objects.SO.SOOrderEntry"/> graph)</description></item>
            <item><description>Opportunities (CR304000) (corresponding to the <see cref="T:PX.Objects.CR.OpportunityMaint"/> graph)</description></item>
            <item><description>Sales Quotes (CR304500) (corresponding to the <see cref="T:PX.Objects.CR.QuoteMaint"/> graph)</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType">
            <summary>
            Manufacturing Production Order Types
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.underIssueMaterial">
            <summary>
            Check for under issued material during move entry based on operation/current move qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.UnderIssueMaterial">
            <summary>
            Check for under issued material during move entry based on operation/current move qty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.moveCompletedOrders">
            <summary>
            Check operation completed status during move entry
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.MoveCompletedOrders">
            <summary>
            Check operation completed status during move entry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.overCompleteOrders">
            <summary>
            Check for last operation if move qty > order qty remaining
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.OverCompleteOrders">
            <summary>
            Check for last operation if move qty > order qty remaining
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.exceedQtyOperations">
            <summary>
            Check if the Qty is exceeded for the operation
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.ExceedQtyOperations">
            <summary>
            Check if the Qty is exceeded for the operation
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.overIssueMaterial">
            <summary>
            Check for over issued material during material entry
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.OverIssueMaterial">
            <summary>
            Check for over issued material during material entry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.includeUnreleasedOverIssueMaterial">
            <summary>
            When checked, this option tells the calculation for over issue material to include any qty unreleased for the given material item.
            (Preference works with OverIssueMaterial.)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.IncludeUnreleasedOverIssueMaterial">
            <summary>
            When checked, this option tells the calculation for over issue material to include any qty unreleased for the given material item.
            (Preference works with OverIssueMaterial.)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.backflushUnderIssueMaterial">
            <summary>
            Check for under issued material during move entry based on operation/current move qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.BackflushUnderIssueMaterial">
            <summary>
            Check for under issued material during move entry based on operation/current move qty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.issueMaterialOnTheFly">
            <summary>
            Check for the given material item being added to a material issue transaction if the item exists on the entered production order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.IssueMaterialOnTheFly">
            <summary>
            Check for the given material item being added to a material issue transaction if the item exists on the entered production order.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.checkSchdMatlAvailability">
            <summary>
            APS Schedule option - Check for Material Availability.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.CheckSchdMatlAvailability">
            <summary>
            APS Schedule option - Check for Material Availability.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.preassignLotSerial">
            <summary>
            Allow pre-assigning of lot/serial numbers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.PreassignLotSerial">
            <summary>
            Allow pre-assigning of lot/serial numbers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.parentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.ParentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.AutoBackwardReporting">
            <summary>
            Enable/ Disable Auto backward reporting for the order type.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderType.isProcessMFG">
            <inheritdoc cref="P:PX.Objects.AM.AMOrderType.IsProcessMFG"/>
        </member>
        <member name="P:PX.Objects.AM.AMOrderType.IsProcessMFG">
            <summary>
            Is the document linked to the Process Manufacturing feature.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOrderTypeAttribute">
            <summary>
            Attributes tied to a production order type that will be pulled into every production order of that type. These records are maintained on the Production Order Types (AM201100) form (corresponding to the <see cref="T:PX.Objects.AM.AMOrderTypeMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMOrderType"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOverhead">
            <summary>
            Maintenance table for overhead costs on the Overheads (AM202500) form (corresponding to the <see cref="T:PX.Objects.AM.OvhdMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMOverheadCurySettings">
            <summary>
            Multiple base currency table that is also used for all standard currencies when the <see cref="P:PX.Objects.CS.FeaturesSet.Multicurrency"/> feature is not enabled, to store the currency-specific costs.
            The table supports the costs for the Overheads <see cref="T:PX.Objects.AM.AMOverhead"/> class.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdAttribute">
            <summary>
            Attributes of a production order that are maintained on the Production Order Maintenance (AM201500) form (corresponding to the <see cref="T:PX.Objects.AM.ProdMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdEvnt">
            <summary>
            Production event history
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem">
            <summary>
            Master table for a production order.
            </summary>
            <remarks>
            The records of this type are created and edited on the following forms:
            <list type="bullet">
            <item><description>Create Production Orders (AM510000) (corresponding to the <see cref="T:PX.Objects.AM.CreateProductionOrdersProcess"/> graph)</description></item>
            <item><description>Production Order Maintenance (AM201500) (corresponding to the <see cref="T:PX.Objects.AM.ProdMaint"/> graph)</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.QtyRemaining">
            <summary>
            Quantity remaining to be completed on the production order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem.schPriority">
            <summary>
            Scheduling/dispatch priority from 1 (high) to 10 (low)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.SchPriority">
            <summary>
            Scheduling/dispatch priority from 1 (high) to 10 (low)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem.detailSource">
            <summary>
            Indicates where the production detail source comes from.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.DetailSource">
            <summary>
            Indicates where the production detail source comes from.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.IsConfigurable">
            <summary>
            Indicates whether it's possible to configure this production item.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem.isReportPrinted">
            <summary>
            Indicates if the current production order report has been printed.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.IsReportPrinted">
            <summary>
            Indicates if the current production order report has been printed.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem.preassignLotSerial">
            <summary>
            Allow pre-assigning of lot/serial numbers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.PreassignLotSerial">
            <summary>
            Allow pre-assigning of lot/serial numbers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem.parentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.ParentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.Locked">
            <summary>
            Production Order Locked Status
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.AutoBackwardReporting">
            <summary>
            Override Auto backward reporting value for the order.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItem.isProcessMFG">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.IsProcessMFG"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItem.IsProcessMFG">
            <summary>
            Is the document linked to the Process Manufacturing feature.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemStatus">
            <summary>
            Simplified PXProjection of <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemRelated">
            <summary>
            <see cref="T:PX.Objects.AM.AMProdItem"/> for cache updates to related parent and product orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplit">
            <summary>
            Line details for a production order. The line details are maintained on the Production Order Maintenance (AM201500) form (corresponding to the <see cref="T:PX.Objects.AM.ProdMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplit.projectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplit.ProjectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplit.taskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplit.TaskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplit.QtyRemaining">
            <summary>
            Quantity remaining to be completed on the production order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplitPreassign">
            <summary>
            Projection of <see cref="T:PX.Objects.AM.AMProdItem"/> and <see cref="T:PX.Objects.AM.AMProdItemSplit"/> to show preassigned lot/serial numbers for a production order. 
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplitPreassign.QtyRemaining">
            <summary>
            Quantity remaining to be completed on the production order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplitPreassign.preassignLotSerial">
            <summary>
            Allow pre-assigning of lot/serial numbers
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplitPreassign.PreassignLotSerial">
            <summary>
            Allow pre-assigning of lot/serial numbers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplitPreassign.parentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplitPreassign.ParentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemSplitPreassign.locked">
            <summary>
            Production Order Lock state
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemSplitPreassign.Locked">
            <summary>
            Production Order Lock state
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatl">
            <summary>
            Maintenance table for the materials on a production order operation on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>, <see cref="T:PX.Objects.AM.AMProdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatl.qtyReqWithScrap">
            <summary>
            Qty Required with Scrap Factor worked in
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatl.QtyReqWithScrap">
            <summary>
            Qty Required with Scrap Factor worked in
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatl.BFlush">
            <summary>
            Determine whether user need to release material manually or not 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatl.projectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatl.ProjectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatl.taskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatl.TaskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlInventory">
            <summary>
            Projection to select all <see cref="T:PX.Objects.AM.AMProdMatl"/> fields with some <see cref="T:PX.Objects.IN.InventoryItem"/> and <see cref="T:PX.Objects.AM.AMProdOper"/> fields which otherwise when joined would cause sub query to InventoryItem after the main join query (based on some attributes on Inventory Item)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatlInventory.ItemDescr">
            <summary>
            The description of the Inventory Item.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlLotSerial">
            <summary>
            Table to store the relationship between lot/serial numbers of materials issued to a production order, and the parent lot/serial numbers of the finished good. 
            This relationship can be viewed and edited on the Late Assignment (AM312000) form (corresponding to the <see cref="T:PX.Objects.AM.LateAssignmentMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlLotSerialAssigned">
            <summary>
            Material Lot Serial Assigned
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlLotSerialUnassigned">
            <summary>
            Material Lot Serial Unassigned
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlSplit">
            <summary>
            Line details for a material on a production order. The line details are created on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlSplit.projectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatlSplit.ProjectID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdMatlSplit.taskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdMatlSplit.TaskID">
            <summary>
            Project/Task is not implemented for Manufacturing. Including fields as a 5.30.0663 or greater requirement for the class that implements ILSPrimary/ILSMaster
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper">
            <summary>
            Maintenance table for the operations on a production order on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.BFlush">
            <summary>
            Determine whether user need to release labor manually or not 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.actualLaborTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.actualLaborTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.ActualLaborTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.ActualLaborTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.actualMachineTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.actualMachineTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.ActualMachineTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.ActualMachineTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.planLaborTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.planLaborTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.PlanLaborTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.PlanLaborTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.planMachineTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.planMachineTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.PlanMachineTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.PlanMachineTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.varianceLaborTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.varianceLaborTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.VarianceLaborTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.VarianceLaborTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.setupTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.setupTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.SetupTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.SetupTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.runUnitTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.runUnitTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.RunUnitTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.RunUnitTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.machineUnitTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.machineUnitTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.MachineUnitTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.MachineUnitTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.queueTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.queueTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.QueueTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.QueueTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.finishTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.finishTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.FinishTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.FinishTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.moveTimeRaw">
            <summary>
            The raw unformatted value from <see cref="T:PX.Objects.AM.AMProdOper.moveTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.MoveTimeRaw">
            <summary>
            The raw unformatted value from <see cref="P:PX.Objects.AM.AMProdOper.MoveTime"/>. Value is in total minutes.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOper.baseMaterialQty">
            <summary>
            Unbound field used only during the processing of operation status
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.BaseMaterialQty">
            <summary>
            Unbound field used only during the processing of operation status
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMProdOper.AutoReportQty">
            <summary>
            Auto report qty decides if the operation allows non sequential quantities when a move occurs for a later operation.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdOvhd">
            <summary>
            Maintenance table for the overheads on a production order operation on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/> <see cref="T:PX.Objects.AM.AMProdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdStep">
            <summary>
            Maintenance table for the steps on a production order operation on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/> <see cref="T:PX.Objects.AM.AMProdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdTool">
            <summary>
            Maintenance table for the tools on a production order operation on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/> <see cref="T:PX.Objects.AM.AMProdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdTotal">
            <summary>
            Table that contains the planned and actual costs of a production order. These records can be viewed on the Production Order Details (AM209000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdDetail"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMPSetup">
            <summary>
            Manufacturing Production Preferences table
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMPSetup.useShiftCrewSize">
            <summary>
            When scheduling a production order should the process use crew size and efficiency
            Default is false to match logic before upgrade. Requires APS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMPSetup.UseShiftCrewSize">
            <summary>
            When scheduling a production order should the process use crew size and efficiency
            Default is false to match logic before upgrade. Requires APS
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMPSetup.includeFinishTimeInCapacity">
            <summary>
            When scheduling a production order will operation finish time consume capacity at the work center
            Requires APS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMPSetup.IncludeFinishTimeInCapacity">
            <summary>
            When scheduling a production order will operation finish time consume capacity at the work center
            Requires APS
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMPSetup.includeQueueTimeInCapacity">
            <summary>
            When scheduling a production order will operation queue time consume capacity at the work center
            Requires APS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMPSetup.IncludeQueueTimeInCapacity">
            <summary>
            When scheduling a production order will operation queue time consume capacity at the work center
            Requires APS
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMPSetup.schdBlockSize">
            <summary>
            Scheduling block size (in minutes) for APS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMPSetup.SchdBlockSize">
            <summary>
            Scheduling block size (in minutes) for APS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMPSetup.LockWorkflowEnabled">
            <summary>
            Lock status on production order preferrence
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPAuditHistory">
            <summary>
            Result of processing Regenerate Inventory Planning (AM50500) and the information captured in the grid of this screen from <see cref="T:PX.Objects.AM.AMRPAuditTable"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPAuditTable">
            <summary>
            The table with the information messages when running the MRP Regeneration (AM505000) report (corresponding to the <see cref="T:PX.Objects.AM.MRPEngine"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPAuditTable.MsgTypes">
            <summary>
            <see cref="T:PX.Objects.AM.AMRPAuditTable"/> MsgType values
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMRPAuditTable.MsgTypes.Default">
            <summary>
            Normal reporting message
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMRPAuditTable.MsgTypes.Start">
            <summary>
            The starting message when the process begins
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMRPAuditTable.MsgTypes.End">
            <summary>
            The ending message when the process completes
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMRPAuditTable.MsgTypes.Warning">
            <summary>
            Warning message during process which does not stop the process from running
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMRPAuditTable.MsgTypes.Error">
            <summary>
            Errors found in the process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetail">
            <summary>
            Root Inventory Planning table for Inventory Planning display (planning recommendations)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.BOMID">
            <summary>
            BOM ID - ID of Bill of materials record
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.BOMRevisionID">
            <summary>
            Bill of material Revision ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.RefType">
            <summary>
            Plan type related to the RefOrdertype and RefOrderNbr
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.ReplenishmentSource">
            <summary>
            Replenishment source
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.Type">
            <summary>
            Planning Type
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.TransferSiteID">
            <summary>
            Transfer Warehouse ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetail.KitRevisionID">
            <summary>
            Kit Revision ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFP">
            <summary>
            Inventory Planning first pass detail records rebuilt during Inventory Planning regen process
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFP.OrderQtyConsumed">
            <summary>
            Contains forecast and MPS qty consumed numbers when the types are dependent
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFP.RefType">
            <summary>
            Reference type
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFP.Type">
            <summary>
            Planning Type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFP.siteSequence">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SiteSequence"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFP.SiteSequence">
            <summary>
            Declares the order of processing for the same <see cref="P:PX.Objects.AM.AMRPDetailFP.InventoryID"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFP.KitRevisionID">
            <summary>
            Kit Revision ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFP.parentSchdNoteID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.ParentSchdNoteID"/>>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFP.ParentSchdNoteID">
            <summary>
            Reference to the parent <see cref="P:PX.Objects.AM.AMSchdItem.NoteID"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPSupply.siteSequence">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFPSupply.SiteSequence"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFPSupply.SiteSequence">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SiteSequence"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailPlan">
            <summary>
            Inventory Planning detail plan records loaded from INItemPlan table rebuilt during Inventory Planning regen process
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailPlan.RefType">
            <summary>
            Reference type
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailPlan.RefNbr">
            <summary>
            Ref nbr
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPExceptions">
            <summary>
            The table with the exception messages when running the Inventory Planning Regeneration (AM505000) report (corresponding to the <see cref="T:PX.Objects.AM.MRPEngine"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPExceptions.Type">
            <summary>
            Type of MRP Exception
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPExceptions.RefType">
            <summary>
            Reference type
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPExceptions.SupplySiteID">
            <summary>
            Supply Warehouse
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPHistory">
            <summary>
            Overall summary of each process of Regenerate Inventory Planning (AM50500) to capture process information such as start date, end date, was there an error, duration, and some record counts.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.ProcessID">
            <summary>
            Process i d
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.StartDateTime">
            <summary>
            Start date time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.EndDateTime">
            <summary>
            End date time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.HasError">
            <summary>
            Has error
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.CountAMRPDetailPlan">
            <summary>
            Count a m r p detail plan
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.CountAMRPDetailFP">
            <summary>
            First Pass Detail Count
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.CountAMRPDetail">
            <summary>
            Count a m r p detail
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.CountAMRPExceptions">
            <summary>
            Exceptions Count
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.CountAMRPPlan">
            <summary>
            Count a m r p plan
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPHistory.CountAMRPItemSite">
            <summary>
            Inventory Count
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPItemSite">
            <summary>
            The table that stores replenishment values for an Inventory Item at a Warehouse. These values are used by Inventory Planning Regeneration (AM505000) (corresponding to the <see cref="T:PX.Objects.AM.MRPEngine"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPItemSite.ReplenishmentSource">
            <summary>
            Replenishment source
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPItemSite.AMGroupWindow">
            <summary>
            Days of Supply for the Inventory Planning
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPPlan">
            <summary>
            Table grouping all actual and plan orders together to support detail inquiry
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPPlan.RefType">
            <summary>
            Plan type related to the RefOrdertype and RefOrderNbr
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPPlan.Type">
            <summary>
            Planning Type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPPlan.isPlan">
            <summary>
            Does the MRP entry contribute to planned qty (when true) vs actual qty (when false)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPPlan.IsPlan">
            <summary>
            Does the MRP entry contribute to planned qty (when true) vs actual qty (when false)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPPlan.QtyOnHand">
            <summary>
            Projected On-Hand Qty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPSetup">
            <summary>
            Manufacturing MRP Preferences table
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.IncludeOnHoldSalesOrder">
            <summary>
            Defines if a sales order on hold should be included as Demand in MRP
            Previously AMRPDefaults.Admin
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.IncludeOnHoldPurchaseOrder">
            <summary>
            Defines if a purchase order on hold should be included as Supply in MRP
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.IncludeOnHoldProductionOrder">
            <summary>
            Defines if a production order on hold should be included as supply (Item) and demand (material) in MRP
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.ExceptionDaysBefore">
            <summary>
            Exception days before
            Previously AMRPDefaults.EXWin
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.ExceptionDaysAfter">
            <summary>
            Exception days after
            Previously AMRPDefaults.EXWin1
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPSetup.forecastPlanHorizon">
            <summary>
            Demand Time Fence (days)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.ForecastPlanHorizon">
            <summary>
            Demand Time Fence (days)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.UseFixMfgLeadTime">
            <summary>
            Flag indicating if the MRP regen process should use fixed manufacturing lead times if checked
            Previously AMRPDefaults.MFGLead
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.MPSFence">
            <summary>
            MPS Time Fence (days)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.DefaultMPSTypeID">
            <summary>
            Default MPS Type ID when creating new MPS entires
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.GracePeriod">
            <summary>
            MRP Grace Period (days)
            Previously AMRPDefaults.PlnH
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.PlanOrderType">
            <summary>
            Plan order type
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.IncludeOnHoldKitAssemblies">
            <summary>
            Include on hold kit assemblies
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMRPSetup.AMPlanningHorizon">
            <summary>
            Users shall be able to specify how many calendar days into the future all supply/demand records should not be processed.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMScanSetup">
            <summary>
            The table with the settings for the barcode scanning forms. The settings are maintained on the Production Preferences (AM102000) form (corresponding to the <see cref="T:PX.Objects.AM.ProdSetup"/> graph).
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMScanSetup.DefaultLotSerialNumber">
            <summary>
            Auto generated lot/serial number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMScanSetup.DefaultExpireDate">
            <summary>
            Default expiration date
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMScanUserSetup">
            <summary>
            The table with the settings for barcode scanning forms, where the settings apply only to a single user.
            </summary>
            <remarks>
            These settings are used on the following forms:
            <list type="bullet">
            <item><description>Scan Move (AM302010) (corresponding to the <see cref="T:PX.Objects.AM.ScanMove"/> graph)</description></item>
            <item><description>Scan Labor (AM302020) (corresponding to the <see cref="T:PX.Objects.AM.ScanLabor"/> graph)</description></item>
            <item><description>Scan Materials (AM300030) (corresponding to the <see cref="T:PX.Objects.AM.ScanMaterial"/> graph)</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:PX.Objects.AM.AMScanUserSetup.DefaultLotSerialNumber">
            <summary>
            Auto generated lot/serial number.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMScanUserSetup.DefaultExpireDate">
            <summary>
            Default Expire Date 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdItem">
            <summary>
            Master table for a production order schedule.
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdItem.isPlan">
            <summary>
            Indicates if the record is plan order (most likely out of MRP planning)
            Plan orders should not have an Actual order in AMProdItem as of 6.0 release
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdItem.IsPlan">
            <summary>
            Indicates if the record is plan order (most likely out of MRP planning)
            Plan orders should not have an Actual order in AMProdItem as of 6.0 release
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdItem.isMRP">
            <summary>
            When MRP Reruns it will reset the IsPlan records for this field back to false.
            Then rerun and if the same order is picked back up to reschedule it will contain a true value
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdItem.IsMRP">
            <summary>
            When MRP Reruns it will reset the IsPlan records for this field back to false.
            Then rerun and if the same order is picked back up to reschedule it will contain a true value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdItem.qtyComplete">
            <summary>
            Order Base Unit Qty Complete
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdItem.QtyComplete">
            <summary>
            Order Base Unit Qty Complete
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdItem.qtyScrapped">
            <summary>
            Order Base Unit Qty Scrapped
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdItem.QtyScrapped">
            <summary>
            Order Base Unit Qty Scrapped
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdItem.qtytoProd">
            <summary>
            Order Base Unit Qty to Produce
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdItem.QtytoProd">
            <summary>
            Order Base Unit Qty to Produce
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOper">
            <summary>
            The table that stores the schedule for an operation on a production order.
            Parent: <see cref="T:PX.Objects.AM.AMProdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOper.isPlan">
            <summary>
            Indicates if the record is plan order (most likely out of MRP planning)
            Plan orders should not have an Actual order in AMProdItem as of 6.0 release
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOper.IsPlan">
            <summary>
            Indicates if the record is plan order (most likely out of MRP planning)
            Plan orders should not have an Actual order in AMProdItem as of 6.0 release
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOper.isMRP">
            <summary>
            When MRP Reruns it will reset the IsPlan records for this field back to false.
            Then rerun and if the same order is picked back up to reschedule it will contain a true value
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOper.IsMRP">
            <summary>
            When MRP Reruns it will reset the IsPlan records for this field back to false.
            Then rerun and if the same order is picked back up to reschedule it will contain a true value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOperDetail">
            <summary>
            The table that stores the schedule details for an operation on a production order.
            Parent: <see cref="T:PX.Objects.AM.AMSchdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOperDetail.isPlan">
            <summary>
            Indicates if the record is plan order (most likely out of MRP planning)
            Plan orders should not have an Actual order in AMProdItem as of 6.0 release
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOperDetail.IsPlan">
            <summary>
            Indicates if the record is plan order (most likely out of MRP planning)
            Plan orders should not have an Actual order in AMProdItem as of 6.0 release
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOperDetail.isMRP">
            <summary>
            When MRP Reruns it will reset the IsPlan records for this field back to false.
            Then rerun and if the same order is picked back up to reschedule it will contain a true value
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOperDetail.IsMRP">
            <summary>
            When MRP Reruns it will reset the IsPlan records for this field back to false.
            Then rerun and if the same order is picked back up to reschedule it will contain a true value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOperDetail.schdQty">
            <summary>
            Planned Schedule quantity related to the current detail row
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOperDetail.SchdQty">
            <summary>
            Planned Schedule quantity related to the current detail row
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOperDetail.chain">
            <summary>
            Groups consecutive schedule details together into a chain. A break in the chain is indicated with a new chain number
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOperDetail.Chain">
            <summary>
            Groups consecutive schedule details together into a chain. A break in the chain is indicated with a new chain number
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSchdOperDetail.schdKey">
            <summary>
            Links the order detail to a schedule detail record for scheduled blocks.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSchdOperDetail.SchdKey">
            <summary>
            Links the order detail to a schedule detail record for scheduled blocks.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMShift">
            <summary>
            Work Center Shift
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSiteTransfer">
            <summary>
            The maintenance table for transferring lead times between warehouses when the Manufacturing feature is enabled.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSubItemDefault">
            <summary>
            The table that stores the bill of material information for an inventory subitem on the Stock Items (IN202500) form (corresponding to the <see cref="T:PX.Objects.IN.InventoryItemMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMProdItem"/>, <see cref="T:PX.Objects.AM.AMProdOper"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSubItemDefault.bOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSubItemDefault.BOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMSubItemDefault.planningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMSubItemDefault.PlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolMst">
            <summary>
            Maintenance table for tools on the Tools (AM205500) form (corresponding to the <see cref="T:PX.Objects.AM.ToolMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMOrderType"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolMst.scheduleEnabled">
            <summary>
            Indicates the tool is scheduled in APS.
            (Only used in APS.)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMToolMst.ScheduleEnabled">
            <summary>
            Indicates the tool is scheduled in APS.
            (Only used in APS.)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolMst.scheduleQty">
            <summary>
            APS Schedule qty/units for scheduling tools. 
            The number of tools available for scheduling.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMToolMst.ScheduleQty">
            <summary>
            APS Schedule qty/units for scheduling tools. 
            The number of tools available for scheduling.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolMstCurySettings">
            <summary>
            Multiple base currency table that is also used for all standard currencies when the <see cref="P:PX.Objects.CS.FeaturesSet.Multicurrency"/> feature is not enabled, to store the currency-specific costs.
            The table supports the costs for the Tools <see cref="T:PX.Objects.AM.AMToolMst"/> class.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolSchdDetail">
            <summary>
            The table that stores the schedule details for a tool on a production order.
            Parent: <see cref="T:PX.Objects.AM.AMToolMst"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolSchdDetail.startTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMToolSchdDetail.StartTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolSchdDetail.endTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMToolSchdDetail.EndTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMToolSchdDetail.prodToolNoteID">
            <summary>
            Link to <see cref="T:PX.Objects.AM.AMProdTool"/> via to <see cref="T:PX.Objects.AM.AMProdTool.noteID"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMToolSchdDetail.ProdToolNoteID">
            <summary>
            Link to <see cref="T:PX.Objects.AM.AMProdTool"/> via to <see cref="T:PX.Objects.AM.AMProdTool.noteID"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMToolSchdDetail.Copy(PX.Objects.AM.AMToolSchdDetail)">
            <summary>
            Makes a copy of the object excluding the recordID, created by, last mod by, and timestamps fields
            </summary>
            <param name="schdDetail">Schd Detail record to copy</param>
            <returns>new object with copied values</returns>
        </member>
        <member name="M:PX.Objects.AM.AMToolSchdDetail.Copy">
            <summary>
            Makes a copy of the object excluding the recordID, created by, last mod by, and timestamps fields
            </summary>
            <returns>new object with copied values</returns>
        </member>
        <member name="T:PX.Objects.AM.AMVendorShipLine">
            <summary>
            Transaction table for a vendor shipment created on the Vendor Shipments (AM310000) form (corresponding to the <see cref="T:PX.Objects.AM.VendorShipmentEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMVendorShipment"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMVendorShipLineSplit">
            <summary>
            The Line Details table for a vendor shipment transaction created on the Vendor Shipments (AM310000) form (corresponding to the <see cref="T:PX.Objects.AM.VendorShipmentEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMVendorShipment"/>, <see cref="T:PX.Objects.AM.AMVendorShipLine"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMVendorShipment">
            <summary>
            Master table for a vendor shipment created on the Vendor Shipments (AM310000) form (corresponding to the <see cref="T:PX.Objects.AM.VendorShipmentEntry"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMVendorShipmentAddress">
            <summary>
            Address information for a vendor shipment created on the Vendor Shipments (AM310000) form (corresponding to the <see cref="T:PX.Objects.AM.VendorShipmentEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMVendorShipment"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMVendorShipmentContact">
            <summary>
            Contact information for a vendor shipment created on the Vendor Shipments (AM310000) form (corresponding to the <see cref="T:PX.Objects.AM.VendorShipmentEntry"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMVendorShipment"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWC">
            <summary>
            Maintenance table for work centers on the Work Centers (AM205500) form (corresponding to the <see cref="T:PX.Objects.AM.WCMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCCury">
            <summary>
            Projection of the AMWCCurySettings table that contains cost information for a work center.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCCurySettings">
            <summary>
            Multiple base currency table that is also used for all standard currencies when the <see cref="P:PX.Objects.CS.FeaturesSet.Multicurrency"/> feature is not enabled, to store the currency-specific costs.
            The table supports the costs for work centers <see cref="T:PX.Objects.AM.AMWCCury"/> and machines on the Work Centers (AM207000) form <see cref="T:PX.Objects.AM.AMWCMachCury"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCMach">
            <summary>
            Maintenance table for machines tied to a work center on the Work Centers (AM207000) form (corresponding to the <see cref="T:PX.Objects.AM.WCMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMWC"/>, <see cref="T:PX.Objects.AM.AMMach"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCMach.machineOverride">
            <summary>
            Indicates if the machine record will be used (false value) or should the workcenter machine record be used as overriding values (true value)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWCMach.MachineOverride">
            <summary>
            Indicates if the machine record will be used (false value) or should the workcenter machine record be used as overriding values (true value)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCMachCury">
            <summary>
            Projection of the AMWCCurySettings table that contains cost information for a machine on a work center.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCOvhd">
            <summary>
            Maintenance table for overheads tied to a work center on the Work Centers (AM205500) form (corresponding to the <see cref="T:PX.Objects.AM.WCMaint"/> graph).
            Parent: <see cref="T:PX.Objects.AM.AMWC"/>, <see cref="T:PX.Objects.AM.AMOverhead"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchd">
            <summary>
            The table that stores the schedule for a shift on a work center.
            Parent: <see cref="T:PX.Objects.AM.AMShift"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWCSchd.SchdTime">
            <summary>
            Indicates total schedule time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetail">
            <summary>
            The table that stores the schedule details for a shift on a work center.
            Parent: <see cref="T:PX.Objects.AM.AMWCSchd"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetail.resourceSize">
            <summary>
            During scheduling this is the size of the resources used to calculate the total time. 
            Example: Crew size or machine size
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWCSchdDetail.ResourceSize">
            <summary>
            During scheduling this is the size of the resources used to calculate the total time. 
            Example: Crew size or machine size
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetail.startTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWCSchdDetail.StartTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetail.endTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWCSchdDetail.EndTimeString">
            <summary>
            Work around for GI not being able to display time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetail.schdTime">
            <summary>
            Total schedule time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWCSchdDetail.SchdTime">
            <summary>
            Total schedule time
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMWCSchdDetail.Copy(PX.Objects.AM.AMWCSchdDetail)">
            <summary>
            Makes a copy of the object excluding the recordID, created by, last mod by, and timestamps fields
            </summary>
            <param name="schdDetail">Schd Detail record to copy</param>
            <returns>new object with copied values</returns>
        </member>
        <member name="M:PX.Objects.AM.AMWCSchdDetail.Copy">
            <summary>
            Makes a copy of the object excluding the recordID, created by, last mod by, and timestamps fields
            </summary>
            <returns>new object with copied values</returns>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetailGroupByWcSchiftDate">
            <summary>
            Group by Work Center, Shift, Schd Date for AMWCSchdDetail records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSchdDetailSchdOper">
            <summary>
            <see cref="T:PX.Data.PXProjectionAttribute"/> of <see cref="T:PX.Objects.AM.AMWCSchdDetail"/> and <see cref="T:PX.Objects.AM.AMSchdOperDetail"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWCSubstitute">
            <summary>
            Manufacturing Work Center Substitute Record
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.MatlQty">
            <summary>
            Material batch release qty to be processed in a material batch.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.BaseMatlQty">
            <summary>
            Material batch release BASE qty to be processed in a material batch.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.QtyReq">
            <summary>
            Total required quantity for the material line
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.BaseQtyReq">
            <summary>
            Total required BASE quantity for the material line
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.UnreleasedBatchQty">
            <summary>
            Total Unreleased Batch quantity for the material line
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.BaseUnreleasedBatchQty">
            <summary>
            Total Unreleased Batch BASE quantity for the material line
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMWrkMatl.overIssueMaterial">
            <summary>
            Check for over issued material
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMWrkMatl.OverIssueMaterial">
            <summary>
            Check for over issued material 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CopyBomFilter">
            <summary>
            Copy bom filter DAC (Non-table)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CopyBomFilter.toSubItemCD">
            <summary>
            User entered CD value used to lookup the ToSubItemID int value
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CopyBomFilter.ToSubItemCD">
            <summary>
            User entered CD value used to lookup the ToSubItemID int value.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMBomMatlDrillDown">
            <summary>
            Projection of <see cref="T:PX.Objects.AM.AMBomMatl"/> inner joined with <see cref="T:PX.Objects.AM.AMBomOper"/> including required fields for drill down process and sort order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.orderType">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.OrderType"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.OrderType">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.OrderType"/>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.prodOrdID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.ProdOrdID"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.ProdOrdID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.ProdOrdID"/>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.inventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.InventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.InventoryID"/>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.subItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.SubItemID"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.SubItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.SubItemID"/>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.siteID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.SiteID"/>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.endDate">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.EndDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.EndDate">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.EndDate"/>
        </member>
        <member name="T:PX.Objects.AM.AMProdItemBaseQtyByEndDate.baseQtytoProd">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.BaseQtytoProd"/>
        </member>
        <member name="P:PX.Objects.AM.AMProdItemBaseQtyByEndDate.BaseQtytoProd">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.BaseQtytoProd"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPOpenSupply">
            <summary>
            PXProjection of <see cref="T:PX.Objects.AM.AMRPDetailFP"/> for supply with supplied quantity remaining.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPOpenSupply.inventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFPOpenSupply.InventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.InventoryID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPOpenSupply.subItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SubItemID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFPOpenSupply.SubItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SubItemID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPOpenSupply.siteID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFPOpenSupply.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SiteID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPOpenSupply.suppliedQty">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SuppliedQty"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFPOpenSupply.SuppliedQty">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.SuppliedQty"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailFPOpenSupply.planDate">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.PlanDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailFPOpenSupply.PlanDate">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetailFP.PlanDate"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite">
            <summary>
            PXProjection of <see cref="T:PX.Objects.AM.AMRPDetail"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.inventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.InventoryID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.InventoryID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.subItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.SubItemID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.SubItemID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.SubItemID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.siteID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.SiteID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.SiteID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.SiteID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.baseQty">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.BaseQty"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.BaseQty">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.BaseQty"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.promiseDate">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.PromiseDate"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.PromiseDate">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.PromiseDate"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.branchID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.BranchID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.BranchID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.BranchID"/>
        </member>
        <member name="T:PX.Objects.AM.AMRPDetailItemSite.itemClassID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.ItemClassID"/>
        </member>
        <member name="P:PX.Objects.AM.AMRPDetailItemSite.ItemClassID">
            <inheritdoc cref="P:PX.Objects.AM.AMRPDetail.ItemClassID"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMfgOnly">
            <summary>
            PXProjection for <see cref="T:PX.Objects.IN.InventoryItem"/> only including the Manufacturing related fields
            Replacement for old InventoryItemExt standalone table updates.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.InventoryID">
            <summary>
            Database identity.
            The unique identifier of the Inventory Item.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMfgOnly.aMBOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.AMBOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMfgOnly.aMPlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.AMPlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.AMLowLevel">
            <summary>
            Non UI field - keeps items lowest bom level value used in calculations
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMfgOnly.planningMethod">
            <summary>
            InventoryItem.planningMethod
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.PlanningMethod">
            <summary>
            InventoryItem.PlanningMethod
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.AMConfigurationID">
            <summary>
            Item configuration ID. If null, this item isn't configurable.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMfgOnly.aMCheckSchdMatlAvailability">
            <summary>
            APS Schedule option - Check for Material Availability.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMfgOnly.AMCheckSchdMatlAvailability">
            <summary>
            APS Schedule option - Check for Material Availability.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP">
            <summary>
            Projection of <see cref="T:PX.Objects.IN.InventoryItem"/> for MRP only data required during the <see cref="T:PX.Objects.AM.MRPEngine"/> process.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.inventoryID">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.InventoryID">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.InventoryID"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.baseUnit">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.BaseUnit"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.BaseUnit">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.BaseUnit"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.itemClassID">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.ItemClassID"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.ItemClassID">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.ItemClassID"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.defaultSubItemID">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.DefaultSubItemID"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.DefaultSubItemID">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.DefaultSubItemID"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.stkItem">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.StkItem"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.StkItem">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.StkItem"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.itemStatus">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.ItemStatus"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.ItemStatus">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.ItemStatus"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.PlanningMethod">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.PlanningMethod"/>
        </member>
        <member name="T:PX.Objects.AM.InventoryItemMRP.aMLowLevel">
            <inheritdoc cref="P:PX.Objects.AM.InventoryItemMRP.AMLowLevel"/>
        </member>
        <member name="P:PX.Objects.AM.InventoryItemMRP.AMLowLevel">
            <inheritdoc cref="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMLowLevel"/>
        </member>
        <member name="T:PX.Objects.AM.ParentInventoryItemSimple">
            <summary>
            Parent item inventory only with small set of columns
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ParentInventoryItemSimple.inventoryID">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.InventoryID"/>
        </member>
        <member name="P:PX.Objects.AM.ParentInventoryItemSimple.InventoryCD">
            <inheritdoc cref="P:PX.Objects.IN.InventoryItem.InventoryCD"/>
        </member>
        <member name="T:PX.Objects.AM.SOLineMfgOnly">
            <summary>
            PXProjection for <see cref="T:PX.Objects.SO.SOLine"/> only including the Manufacturing related fields
            Replacement for old SOLineAMExtension standalone table updates.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SOLineSplitMfgOnly">
            <summary>
            PXProjection for <see cref="T:PX.Objects.SO.SOLineSplit"/> only including the Manufacturing related fields
            Replacement for old SOLineAMExtension standalone table updates.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AddTreeNodeParams.ID">
            <summary>
            Key to the node in the tree
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AddTreeNodeParams.Actions">
            <summary>
            Defines the actions available on this node in the tree.
            Set value based on in JSON-stringify-friendly format.
            Example: "{\"rename\": true, \"createChild\": true, \"createSibling\": true, \"delete\": true}"
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AddTreeNodeParams.ExtraColumns">
            <summary>
            A single field is used to return all extra column values for the given tree node.
            Set value based on in JSON-stringify-friendly format.
            Example: if returning 2 extra fields of string and bool we would return as such:
            	$"[\"1.00\", \"EA\"]"
            In the page we have the ExtraColumnField identified by setting ExtraColumnField="ExtraColumns"
            and then also the type definition on the PXTree as the following:
            	ExtraColumns='[{"tagname": "qp-text-editor", "title": "Nums", "width": 50}, {"tagname": "qp-check-box", "title": "Chs", "width": 50}]' 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.DiagramParameters">
            <summary>
            The parameters to filter data in <see cref="T:PX.Objects.AM.ManufacturingDiagram"/> through web services.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.DiagramParameters.BlockSizeInMinutes">
            <summary>
            Value from <see cref="T:PX.Objects.AM.AMPSetup.schdBlockSize"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.DiagramParameters.WorkCentreCalendarType">
            <summary>
            Defines how the Histogram data is displayed
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionOrderResource">
            <summary>
            A DAC that is used to populate the production order cache in <see cref="T:PX.Objects.AM.ManufacturingDiagram"/>.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderResource.ReadOnly">
            <summary>
            Flag to control if the row should be enabled
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterResource">
            <summary>
            Is used to populate the work center cache in <see cref="T:PX.Objects.AM.ManufacturingDiagram"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachineResource">
            <summary>
            Is used to populate the machine cache in <see cref="T:PX.Objects.AM.ManufacturingDiagram"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterShiftCalendarResource">
            <summary>
            Is used to populate the cache of the work center shift calendar in <see cref="T:PX.Objects.AM.ManufacturingDiagram"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkbenchTreeNode">
            <summary>
            Transfer object between graph and tree in <see cref="T:PX.Objects.AM.EngineeringWorkbenchMaint"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkbenchTreeNode.IDName">
            <summary>
            Key to the node in the tree
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkbenchTreeNode.IDParent">
            <summary>
            Key to the parents "IDName" field
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkbenchTreeNode.Description">
            <summary>
            Displayed value in the tree to the user
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkbenchTreeNode.Actions">
            <summary>
            Defines the actions available on this node in the tree.
            Set value based on in JSON-stringify-friendly format.
            Example: "{\"rename\": true, \"createChild\": true, \"createSibling\": true, \"delete\": true}"
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkbenchTreeNode.ExtraColumns">
            <summary>
            A single field is used to return all extra column values for the given tree node.
            Set value based on in JSON-stringify-friendly format.
            Example: if returning 2 extra fields of string and bool we would return as such:
            	$"[\"1.00\", \"EA\"]"
            In the page we have the ExtraColumnField identified by setting ExtraColumnField="ExtraColumns"
            and then also the type definition on the PXTree as the following:
            	ExtraColumns='[{"tagname": "qp-text-editor", "title": "Nums", "width": 50}, {"tagname": "qp-check-box", "title": "Chs", "width": 50}]' 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Messages">
            <summary>
            Manufacturing Localizable Messages
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Messages.GetLocal(System.String)">
            <summary>
            Localize the message
            </summary>
            <param name="msg">Message to localize</param>
            <returns>Localized message</returns>
        </member>
        <member name="M:PX.Objects.AM.Messages.GetLocal(System.String,System.Object[])">
            <summary>
            Localize the message with provided format arguments
            </summary>
            <param name="msg">Message to localize</param>
            <param name="formatArgs">Arguments for string.Format</param>
            <returns>Localized message</returns>
        </member>
        <member name="M:PX.Objects.AM.Messages.GetLocal(System.String,System.Type)">
            <summary>
            Localize the message
            </summary>
        </member>
        <member name="T:PX.Objects.AM.DetailSupply">
            <summary>
            Tracks excess supply during MRP Regen process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.DetailSupply._supplyDictionary">
            <summary>
            Dictionary taking first key InventoryID, second dictionary key siteid
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DetailSupply.AddSupply(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            Add excess supply
            </summary>
            <param name="inventoryId"></param>
            <param name="siteId"></param>
            <param name="supplyDate"></param>
            <param name="supplyQuantity"></param>
        </member>
        <member name="M:PX.Objects.AM.DetailSupply.UpdateSupply(System.Int32,System.Collections.Generic.List{PX.Objects.AM.DetailSupply.Supply})">
            <summary>
            Update supply per item
            </summary>
            <param name="inventoryID">InventoryID receiving the update</param>
            <param name="supplyUpdates">Supply list needing updated</param>
        </member>
        <member name="M:PX.Objects.AM.DetailSupply.GetSupply(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.Decimal})">
            <summary>
            Get cached supply and consume the supplied quantity if found
            </summary>
            <param name="inventoryId">KEY: InventoryID</param>
            <param name="siteId">KEY: SiteID</param>
            <param name="subItemId">KEY: Sub Item ID</param>
            <param name="gracePeriodDateTime">Grace period date to check supply against the item/site</param>
            <param name="orderQuantity">Original order quantity</param>
            <returns>Adjusted order quantity accounting for excess supply</returns>
        </member>
        <member name="T:PX.Objects.AM.DisassemblyEntry">
            <summary>
            Disassembly entry graph (Page: AM301500)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.ConstructNewDisassemblyEntry(PX.Objects.AM.AMProdItem)">
            <summary>
            Creates a new instances of <see cref="T:PX.Objects.AM.DisassemblyEntry"/> for the given production order
            </summary>
            <param name="prodItem">Production order to disassemble</param>
            <returns>Graph with loaded production order</returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.CheckMoveOnCompletedOperation(PX.Data.PXCache,PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            Checks for Operation is complete and handle exceptions as needed.
            If condition found related to check level. cache received raised exception handling.
            </summary>
            <param name="sender"></param>
            <param name="row"></param>
            <returns>True when raiseexceptionhandling is called on cache AS AN ERROR</returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.CheckOverCompletedOrders(PX.Data.PXCache,PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            Checks for transaction attempt to over complete the order at the last operation
            If condition found related to check level. cache received raised exception handling.
            </summary>
            <param name="sender"></param>
            <param name="row"></param>
            <returns>True when raiseexceptionhandling is called on cache AS AN ERROR</returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.Convert(PX.Objects.AM.AMProdMatl,PX.Objects.AM.AMDisassembleBatch,PX.Objects.AM.AMDisassembleTran)">
            <summary>
            Convert given DACs to AMDisassembleTran
            </summary>
            <param name="prodMatl">Production Material</param>
            <param name="batch">Document batch record</param>
            <param name="tran">base transaction recording used for converting (null acceptable)</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.CheckOverIssueMaterialOnEntry(PX.Data.PXGraph,PX.Data.PXCache,PX.Objects.AM.AMDisassembleTran,System.Nullable{System.Decimal})">
            <summary>
            Checks for Over Issue of Material for a given material entry.
            If over issue found related to check level. cache received raised exception handling.
            </summary>
            <param name="graph"></param>
            <param name="sender"></param>
            <param name="ammTran"></param>
            <param name="newQty"></param>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.GetProductionAttributeDictionary(PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            Query all production attributes related to transaction
            </summary>
            <param name="row">transaction row</param>
            <returns>query results in a dictionary with a key by Label</returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.InsertAMMTranAttribute(PX.Objects.AM.AMProdAttribute,PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            Insert given production attribute into the cache as a tran attribute
            </summary>
            <param name="prodAttribute">Production attribute row</param>
            <param name="row">Related parent transaction row</param>
            <returns>Inserted transaction attribute</returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.DeleteAMMTranAttribute(PX.Data.PXCache,PX.Objects.AM.AMDisassembleBatchAttribute)">
            <summary>
            Delete the given transaction attribute
            </summary>
            <param name="cache">cache of AMMTranAttribute</param>
            <param name="row">AMMTranAttribute to delete</param>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.SyncTransactionAttributes(PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            Sync the given transaction row's production transaction attributes. Add/Update/Delete tran attributes based on changed values
            </summary>
            <param name="row">Parent transaction row</param>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.GetTransactionAttributeDictionary(PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            Get the existing transaction attributes in the form of a dictionary by label key
            </summary>
            <param name="row">Parent transaction row</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.GetTransactionAttributeDictionary(PX.Objects.AM.AMDisassembleBatch,System.Boolean)">
            <summary>
            Get the existing transaction attributes in the form of a dictionary by label key
            </summary>
            <param name="row">Parent transaction row</param>
            <param name="cachedOnly">only return cached rows (no select on AMMTranAttributes)</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.DisassemblyEntry.BurnAttributeLineNbr(PX.Objects.AM.AMDisassembleBatch)">
            <summary>
            When deleting then inserting, the line counters are not getting set correctly on the insert. 
            Use this to increase the line counter so the inserts work correctly
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:PX.Objects.AM.ECOMaint">
            <summary>
            Engineering Change Request graph
            Main graph for managing a Engineering Change Request (ECO)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ECOMaint.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem)">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.ECOMaint.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.Nullable{System.Int32})">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="subItemID">SUbItemID</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.ECOMaint.DuplicateEntryMessage(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.String)">
            <summary>
            Builds and creates the warning/error message related to duplicates items on a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="duplicateAMBomMatl">The found duplicate AMBomMatl row</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="setupCheck">BOM Setup duplicate setup option indicating warning or error</param>
        </member>
        <member name="T:PX.Objects.AM.ECRMaint">
            <summary>
            Engineering Change Request graph
            Main graph for managing a Engineering Change Request (ECR)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ECRMaint.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem)">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.ECRMaint.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.Nullable{System.Int32})">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="subItemID">SUbItemID</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.ECRMaint.DuplicateEntryMessage(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.String)">
            <summary>
            Builds and creates the warning/error message related to duplicates items on a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="duplicateAMBomMatl">The found duplicate AMBomMatl row</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="setupCheck">BOM Setup duplicate setup option indicating warning or error</param>
        </member>
        <member name="T:PX.Objects.AM.EngineeringWorkbenchMaint">
            <summary>
            Engineering Workbench (AM208100)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.EngineeringWorkbenchMaint.IsReadOnly">
            <summary>
            Is access rights for graph set to read only permision
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EngineeringWorkbenchMaint.checkDropAction">
            <summary>
            Linked to PXTree CheckDropCommand
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EngineeringWorkbenchMaint.newSiblingNodeDefault">
            <summary>
            Runs after tree node action from tree "Create Sibling". Provides a way for defaults before node added to the tree.
            Return passes back to tree control.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EngineeringWorkbenchMaint.newChildNodeDefault">
            <summary>
            Runs after tree node action from tree "Create Child". Provides a way for defaults before node added to the tree.
            Return passes back to tree control.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EngineeringWorkbenchMaint.UpdateOperationCD(PX.Objects.AM.AMBomItem,System.Collections.Generic.List{PX.Objects.AM.AMBomOper},System.Collections.Generic.List{PX.Objects.AM.AMBomOper})">
            <summary>
            Updating <see cref="T:PX.Objects.AM.AMBomOper"/> OperationCD values
            </summary>
            <param name="updatingOperations">Rows to update/insert in cache</param>
            <param name="allBomOperations">All existing BOM Operations</param>
            <returns>Inserted AMBomOpers</returns>
        </member>
        <member name="M:PX.Objects.AM.EngineeringWorkbenchMaint.MoveMaterialInsertDelete(PX.Objects.AM.AMBomMatl,PX.Objects.AM.AMBomMatl,PX.Objects.AM.AMBomOper)">
            <summary>
            When moving material to another operation the material moved is deleted and then inserted to the new operation
            </summary>
            <param name="deletingMatl">Material record deleting</param>
            <param name="insertingMatl">Material record copy of deleting now pointing to new operation</param>
            <param name="insertingMatlOper">Operation related to inserting material</param>
            <returns>Result of Inserted material record</returns>
        </member>
        <member name="T:PX.Objects.AM.EstimateBomMap">
            <summary>
            Maps Estimate records to and from BOM records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.EstimateCopy">
            <summary>
            Copying estimates records per revision and/or estimate
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CreateNewEstimate(PX.Objects.AM.AMEstimateItem)">
            <summary>
            Create a new estimate from the source estimate
            </summary>
            <param name="sourceEstimate">Source estimate to copy and create a new estimate</param>
            <returns>new/ estimate item record</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CreateNewEstimate(PX.Objects.AM.AMEstimateItem,System.String)">
            <summary>
            Create a new estimate from the source estimate
            </summary>
            <param name="sourceEstimate">Source estimate to copy and create a new estimate</param>
            <param name="newEstimateID">new Estimate ID defined from the calling program</param>
            <returns>new/estimate item record</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CreateNewEstimate(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Create a new estimate from the source estimate
            </summary>
            <param name="sourceEstimate">Source estimate to copy and create a new estimate</param>
            <param name="newEstimateReference">pre-defined estimate reference record for the new estimate</param>
            <returns>new/estimate item record</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CreateNewEstimate(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateReference,System.String)">
            <summary>
            Create a new estimate from the source estimate
            </summary>
            <param name="sourceEstimate">Source estimate to copy and create a new estimate</param>
            <param name="newEstimateReference">pre-defined estimate reference record for the new estimate</param>
            <param name="newEstimateID">new Estimate ID defined from the calling program</param>
            <returns>new/estimate item record</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CopyAsNewEstimateItem(PX.Objects.AM.AMEstimateItem,System.String,System.String,System.Boolean)">
            <summary>
            Copy the estimate item from the from estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <returns>new to/destination estimate item</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CreateEstimateReferenceCopy(PX.Objects.AM.AMEstimateReference)">
            <summary>
            Create a new instance of <see cref="T:PX.Objects.AM.AMEstimateReference"/> copying some fields from an existing instance of <see cref="T:PX.Objects.AM.AMEstimateReference"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CopyAsNewOperations(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem,System.Boolean)">
            <summary>
            Copy the operations from the from estimate as operations of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <param name="resetNoteID">clear out the noteid field when true</param>
            <returns>List of new/to estimate operations</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CopyAsNewMaterial(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the material from the from estimate as material of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate material</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CopyAsNewTool(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the tools from the from estimate as tools of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate tool</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CopyAsNewStep(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the steps from the estimate operations as steps of the estimate operation
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate operation steps</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateCopy.CopyAsNewOverhead(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the overhead from the from estimate as overhead of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate overhead</returns>
        </member>
        <member name="F:PX.Objects.AM.EstimateReferenceOrderAction.New">
            <summary>
            Estimate is a new estimate
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateReferenceOrderAction.Add">
            <summary>
            Adding an existing estimate to a different estimate source (Ex: Adding an existing estimate to a sales order)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateReferenceOrderAction.Update">
            <summary>
            Simple estimate update
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateReferenceOrderAction.Remove">
            <summary>
            Removing an estimate from an order
            </summary>
        </member>
        <member name="T:PX.Objects.AM.EstimateGraphHelper">
            <summary>
            Manufacturing Estimate Graph shared functions helper class
            </summary>
        </member>
        <member name="P:PX.Objects.AM.EstimateGraphHelper.IsOpportunityQuoteFeatureEnabled">
            <summary>
            Is the Customer Management > Sales Quotes feature enabled
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.GetRemoveUpdatedEstimateReferences">
            <summary>
            Get the cache updated <see cref="T:PX.Objects.AM.AMEstimateReference"/> from the calling graph and removes it from the calling graphs cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.GetUpdatedEstimateReferences">
            <summary>
            Get the cache updated <see cref="T:PX.Objects.AM.AMEstimateReference"/> from the calling graph
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.RemoveEstimatedReferenceFromCache(System.Collections.Generic.List{PX.Objects.AM.AMEstimateReference})">
            <summary>
            Remove the given list of <see cref="T:PX.Objects.AM.AMEstimateReference"/> from the calling graph cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.RemoveEstimatedReferenceFromCache(PX.Objects.AM.AMEstimateReference)">
            <summary>
            Remove the given <see cref="T:PX.Objects.AM.AMEstimateReference"/> object from the calling graph cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.InitEstimateReferenceRecord(PX.Objects.AM.AMEstimateItem)">
            <summary>
            Initialize/insert a new Estimate Reference record if one does not exist
            </summary>
            <param name="estimateItem"></param>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.UpdateExistingOrderEstimateReference(PX.Data.PXCache,System.Collections.Generic.List{PX.Objects.AM.AMEstimateReference},System.Collections.Generic.List{PX.Objects.AM.AMEstimateReference},PX.Objects.AM.AMEstimateReference)">
            <summary>
            Updates order <see cref="T:PX.Objects.AM.AMEstimateReference"/> cache based on existing references and the updating reference.
            </summary>
            <param name="estimateReferenceOrderCache">Cache linked to an order of type <see cref="T:PX.Objects.AM.AMEstimateReference"/></param>
            <param name="currentOrderEstReferences"></param>
            <param name="updatedEstReferences"></param>
            <param name="estimateReference"></param>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.PersistEstimateReference(PX.Data.PXGraph,PX.Objects.AM.EstimateReferenceOrderAction)">
            <summary>
            Persists the graph and the estimate reference to the correct related graph if the source reference is not estimate.
            </summary>
            <param name="graph">calling graph outside of the estimate maint graph (Ex: sales order graph)</param>
            <returns>True when the persists are completed, false when not and the calling program should persist the graph</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.IsSameEstimate(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Do the <see cref="T:PX.Objects.AM.AMEstimateItem"/> and <see cref="T:PX.Objects.AM.AMEstimateReference"/> have the same EstimateIDs
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.IsSameEstimate(PX.Objects.AM.AMEstimateReference,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Do the two <see cref="T:PX.Objects.AM.AMEstimateReference"/> have the same EstimateID
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.IsSameEstimateRevision(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Do the <see cref="T:PX.Objects.AM.AMEstimateItem"/> and <see cref="T:PX.Objects.AM.AMEstimateReference"/> have the same keys (EstimateID and RevisionID)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.IsSameEstimateRevision(PX.Objects.AM.AMEstimateReference,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Do the two <see cref="T:PX.Objects.AM.AMEstimateReference"/> have the same keys (EstimateID and RevisionID)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.IsSameEstimateDifferentRevision(PX.Objects.AM.AMEstimateReference,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Do the two <see cref="T:PX.Objects.AM.AMEstimateReference"/> have the same EstimateID but different RevisionID
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.IsEstimateReferencedToQuote(PX.Data.PXGraph,PX.Objects.AM.AMEstimateItem,System.Boolean)">
            <summary>
            Does the given estimate contain a reference to a quote
            </summary>
            <param name="graph"></param>
            <param name="estimateItem"></param>
            <param name="excludeGivenRevision"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.AddEstimateReference(PX.Objects.AM.AMEstimateReference,PX.Objects.AM.AMEstimateReference)">
            <summary>
            Add the reference fields from the included fromReference parameter to the existing estimate item instance
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.TryFindInList(PX.Objects.AM.AMEstimateReference,System.Collections.Generic.List{PX.Objects.AM.AMEstimateReference},PX.Objects.AM.AMEstimateReference@)">
            <summary>
            Find the given <see cref="T:PX.Objects.AM.AMEstimateReference"/> in the list by keys (EstimateID and RevisionID)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.FindInList(PX.Objects.AM.AMEstimateReference,System.Collections.Generic.List{PX.Objects.AM.AMEstimateReference})">
            <summary>
            Find the given <see cref="T:PX.Objects.AM.AMEstimateReference"/> in the list by keys (EstimateID and RevisionID)
            </summary>
            <returns>The object from the list that matches</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateGraphHelper.TryCorrectHistoryLineCounters(PX.Data.PXCache,PX.Data.PXCache)">
            <summary>
            Provides a way to self correct line counters for estimate history
            </summary>
        </member>
        <member name="T:PX.Objects.AM.EstimateMaint">
            <summary>
            Manufacturing Estimate Item Entry Graph
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.Construct(System.String,System.String)">
            <summary>
            Create an instance of the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph and load it with the given estimate revision
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.Redirect(System.String,System.String)">
            <summary>
            Redirect to this graph for the given estimate/revision
            </summary>
        </member>
        <member name="P:PX.Objects.AM.EstimateMaint.SelectedOpportunity">
            <summary>
            Returns the related opportunity (if linked to an opportunity)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyOperations(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the operations from the from estimate as operations of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate operations</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyOperations(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the operations from the Production Order as operations of the estimate
            </summary>
            <param name="prodItem">to/destination estimate</param>
            <returns>List of new/to estimate operations</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyOperations(PX.Objects.AM.AMBomItem)">
            <summary>
            Copy the operations from the BOM as operations of the estimate
            </summary>
            <param name="bomItem">to/destination estimate</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyMaterials(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the Materials from the from estimate as materials of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyMaterials(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the Materials from the from the Production Order as materials of the estimate
            </summary>
            <param name="prodItem">from/source estimate</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyMaterials(PX.Objects.AM.AMBomItem)">
            <summary>
            Copy the Materials from the from the BOM as materials of the estimate
            </summary>
            <param name="bomItem">Source BOM</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyTools(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the tools from the from estimate as tools of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate operations</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyTools(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the Tools from the from the Production Order as tools of the estimate
            </summary>
            <param name="prodItem">Production Order to copy</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyTools(PX.Objects.AM.AMBomItem)">
            <summary>
            Copy the Tools from the from the BOM as tools of the estimate
            </summary>
            <param name="bomItem">BOM to copy</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyOverheads(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the Overheads from the from estimate as overheads of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyOverheads(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the Overheads from the from the Production Order as Overheads of the estimate
            </summary>
            <param name="prodItem">Production Order to copy</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyOverheads(PX.Objects.AM.AMBomItem)">
            <summary>
            Copy the Overheads from the from the BOM as Overheads of the estimate
            </summary>
            <param name="bomItem">BOM to copy</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopyWCOverheads">
            <summary>
            Copy the Overheads from the from the Work Centers of every BOM operation as Overheads of the estimate
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopySteps(PX.Objects.AM.AMBomItem)">
            <summary>
            Copy the Steps from the from the BOM as steps of the estimate
            </summary>
            <param name="bomItem">BOM to copy</param>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopySteps(PX.Objects.AM.AMEstimateItem,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Copy the steps from the from estimate as steps of the to estimate
            </summary>
            <param name="fromEstimateItem">from/source estimate</param>
            <param name="toEstimateItem">to/destination estimate</param>
            <returns>List of new/to estimate operations</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.CopySteps(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the Steps from the from the Production Order as steps of the estimate
            </summary>
            <param name="prodItem">Production Order to copy</param>
        </member>
        <member name="F:PX.Objects.AM.EstimateMaint.CreateProdOrder">
            <summary>
            Create a production order from the current estimate revision
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateMaint.ViewOperation">
            <summary>
            Hyper-link on Operation CD to open the estimate operation page
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateMaint.ViewQuote">
            <summary>
            Hyper-link for reference Quote nbr
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateMaint.MarkAsPrimary">
            <summary>
            Mark Current Revision as Primary
            </summary>
        </member>
        <member name="F:PX.Objects.AM.EstimateMaint.CreateInventory">
            <summary>
            Hyper-link to Create Inventory
            </summary>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.FindEstimateOper(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Find a given estimate operations in the cache and if not there select from the DB
            </summary>
            <returns>Located estimate operation - otherwise null</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.FindEstimateOper(PX.Objects.AM.AMEstimateOper)">
            <summary>
            Find a given estimate operations in the cache and if not there select from the DB
            </summary>
            <returns>Located estimate operation - otherwise null</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.SetCurrentEstimateOperation(PX.Objects.AM.IEstimateOper)">
            <summary>
            Make sure the current estimate operation is set based on the given operation/child record
            </summary>
            <param name="estimateOper">An estimate operation related row</param>
            <returns>True if current is set</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.InsertEstiamteWorkcenterOverheads(PX.Data.PXCache,PX.Objects.AM.AMEstimateOper)">
            <summary>
            Insert overheads for estimate operation related to the work center
            </summary>
            <returns>True if overheads inserted</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.InsertEstiamteWorkcenterOverheads(PX.Data.PXCache,PX.Objects.AM.AMEstimateOper,System.String)">
            <summary>
            Insert overheads for estimate operation related to the work center
            </summary>
            <returns>True if overheads inserted</returns>
        </member>
        <member name="M:PX.Objects.AM.EstimateMaint.DeleteEstimateWorkcenterOverheads(PX.Objects.AM.AMEstimateOper)">
            <summary>
            Deleted overheads from estimate operation related to the work center
            </summary>
            <returns>True if overheads deleted</returns>
        </member>
        <member name="T:PX.Objects.AM.AddToOrderFilter">
            <summary>
            The settings of the Add to Order dialog box on the Estimate (AM303000) form (which corresponds to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.HistoryFilter">
            <summary>
            The settings of the Add Comment dialog box on the History tab of the Estimate (AM303000) form (which corresponds to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph). 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateProdOrderFilter">
            <summary>
            The settings of the Create Production Order dialog box on the Estimate (AM303000) form (which corresponds to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph). 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CreateBOMFilter">
            <summary>
            The settings of the Create BOM dialog box on the Estimate (AM303000) form (which corresponds to the <see cref="T:PX.Objects.AM.EstimateMaint"/> graph). 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.EstimateOperMaint">
            <summary>
            Manufacturing Estimate Operation Entry Graph
            </summary>
        </member>
        <member name="P:PX.Objects.AM.EstimateOperMaint.CurrentReference">
            <summary>
            Get the current estimates reference record
            </summary>
        </member>
        <member name="P:PX.Objects.AM.EstimateOperMaint.CurrentRelatedEstimateReference">
            <summary>
            Get the current estimates reference only if it relates to the current estimate by revision
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Features">
            <summary>
            Manufacturing features
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Forecast">
            <summary>
            MRP Forecast Graph
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Forecast.IsForecastIdEnabled">
            <summary>
            IS the forecast id field enabled for the user? (Linked to manual numbering for the forecast numbering sequence)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Forecast.SetEndDate(PX.Data.PXCache,PX.Objects.AM.AMForecast)">
            <summary>
            Send the end date based on the current interval/begin date
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Forecast.GetEndDate(PX.Data.PXCache,PX.Objects.AM.AMForecast)">
            <summary>
            Get the calculated forecast end date
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Forecast.GetForecastIntervals(PX.Objects.AM.AMForecast)">
            <summary>
            Converts a forecast record into the intervals that would be used for MRP Planning
            </summary>
            <param name="forecast">Valid forecast row</param>
            <returns>List of paired start/end dates</returns>
        </member>
        <member name="T:PX.Objects.AM.Fullregen">
            <summary>
            Manufacturing - Regenerate MRP process page
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MrpProcessingSetup">
            <summary>
            Regenerate MRP processing setup record.
            (AMRPSetup Projection)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GenerateForecastProcess">
            <summary>
            Generate forecast/wizard process graph
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GenerateForecastProcess.ContainsForecastStaging">
            <summary>
            Indicates there are records in the processing grid
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ForecastSettings">
            <summary>
            The filter for the Generate Forecast (AM502000) form (which corresponds to the <see cref="T:PX.Objects.AM.GenerateForecastProcess"/> graph).
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GenerateForecastType.Regular">
            <summary>
            Regular Forecast
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GenerateForecastType.Seasonality">
            <summary>
            Seasonality based forecast
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GenerateForecastType.Desc">
            <summary>
            Descriptions for Forecast type string identifiers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMGenericInquiry">
            <summary>
            Assists in building calls to generic inquiries
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.BASEURL">
            <summary>
            Base Acumatica generic inquriy URL
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.GiGraphResultViewName">
            <summary>
            Data view name for Generic Inquiry graph
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.ID">
            <summary>
            The Key ID value that represents the Generic Inquiry
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.ParameterDictionary">
            <summary>
            Contains the set list of parameters for use in building the URL to call the GI
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.Filters">
            <summary>
            Used to filter GI data by non parameter fields
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.URLPARAMFORMAT">
            <summary>
            Format used for adding parameters to the URL
            </summary>
        </member>
        <member name="F:PX.Objects.AM.AMGenericInquiry.NullValue">
            <summary>
            Used for force set a value to null when there might be an auto populated/default value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.SetParameterNull(System.String)">
            <summary>
            Sets a GI parameter to pass when opening the generic inquiry to a null value
            </summary>
            <param name="key">parameter key</param>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.SetParameter(System.String,System.String)">
            <summary>
            Sets a GI parameter to pass when opening the generic inquiry
            </summary>
            <param name="key">parameter key</param>
            <param name="value">parameter value</param>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.SetParameter(System.String,System.Nullable{System.DateTime},PX.Data.PXGraph)">
            <summary>
            Sets a GI date parameter to pass when opening the generic inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.SetParameter(System.String,System.DateTime,PX.Data.PXGraph)">
            <summary>
            Sets a GI date parameter to pass when opening the generic inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.SetParameter(System.String,System.Nullable{System.DateTime},System.IFormatProvider)">
            <summary>
            Sets a GI date parameter with formating to pass when opening the generic inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.Encode(System.String)">
            <summary>
            special characters need encoded to use in the URL such as dates
            </summary>
            <param name="value"></param>
            <returns>Url Encoded Value</returns>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.CallGenericInquiry">
            <summary>
            Open the Generic Inquiry in a new window
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.CallGenericInquiry(PX.Data.PXBaseRedirectException.WindowMode)">
            <summary>
            Open the Generic Inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.AMGenericInquiry.BuildURL">
            <summary>
            Create the generic inquiry URL including the parameter values
            </summary>
            <returns></returns>
        </member>
        <member name="F:PX.Objects.AM.GIMRPHistory.GIID">
            <summary>
            ID of MRPHistory GI AM000016
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GIProductionSummary">
            <summary>
            Production summary generic inquiry helper class
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GIProductionSummary.GIID">
            <summary>
            ID of Production Summary GI in the MFG project.xml
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GIProductionSummary.Parameters">
            <summary>
            Available parameters for use with this generic inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GIProductionSummary.SetProjectFilter(System.Nullable{System.Int32})">
            <summary>
            Set the GI call to filter for a specific project
            </summary>
            <param name="projectId"></param>
        </member>
        <member name="M:PX.Objects.AM.GIProductionSummary.SetNoStatus">
            <summary>
            Set no status for the GI parameter (show all status)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GITransactionsByProductionOrder.SetFilterByProductionOrder(System.String,System.String)">
            <summary>
            Set the GI call to filter for a specific production order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GITransactionsByProductionOrder.SetFilterByProductionStatus(System.String)">
            <summary>
            Set the GI call to filter for a specific production order status
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GITransactionsByProductionOrder.SetFilterByUnreleasedBatches">
            <summary>
            Set the GI call to filter for showing only unreleased batches
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GIWorkCenterDispatch.Parameters">
            <summary>
            Available parameters for use with this generic inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GIWorkCenterSchedule">
            <summary>
            Manufacturing Work Center Schedule Generic Inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GIWorkCenterSchedule.Parameters">
            <summary>
            Available parameters for use with this generic inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GLAccountHelper">
            <summary>
            Manufacturing GL Account Helper
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GLAccountHelper.ConvertFieldToSetup``1(PX.Data.PXGraph,PX.Objects.AM.AMOrderType)">
            <summary>
            Convert the given field to its related production setup default account value.
            Used to get a default value when the posting class account location is not available or null
            </summary>
            <typeparam name="Field"></typeparam>
            <param name="graph">Calling graph</param>
            <param name="amOrderType">current production setup based on Order Type</param>
            <returns>Account/subaccount ID</returns>
        </member>
        <member name="M:PX.Objects.AM.GLAccountHelper.GetReasonCodeSubIDString(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Gets the formated sub account based on the reason code configuration using the account wildcards
            </summary>
            <param name="cache">cache related to AMMTran</param>
            <param name="row">row object related to cache</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.GLAccountHelper.GetReasonCodeSubIDString(PX.Data.PXCache,System.Object,PX.Objects.CS.ReasonCode,PX.Objects.IN.InventoryItem,PX.Objects.IN.INSite,PX.Objects.IN.INPostClass)">
            <summary>
            Gets the formated sub account based on the reason code configuration using the account wildcards
            </summary>
            <param name="cache">cache related to AMMTran</param>
            <param name="row">row object related to cache</param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.BomOperCurySettingsBomExtensionBase`1">
            <summary>
            Shared changes for extensions which use BOMBaseGraph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.AMProdItemSplitPlan`1">
            <summary>
            Handles the Allocation of Production orders - The manufactured item
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.AMProdMatlSplitPlan`1">
            <summary>
            Handles the Allocation of Material for Production orders
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.AMProdMatlSplitPlan`1.GetMaterialPlanType(PX.Objects.AM.AMProdMatl,PX.Objects.AM.AMProdMatlSplit,PX.Objects.AM.AMProdItem)">
            <summary>
            Determine the correct material <c>INPlanConstants</c> plan type
            </summary>
            <param name="prodMatl">Production Material Row</param>
            <param name="prodMatlSplit">Production Material Allocation Row</param>
            <param name="prodItem">Parent Production Item Row</param>
            <returns>A <c>INPlanConstants</c> otherwise null if not applicable</returns>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.ARSalesPriceMaintAMExtension">
            <summary>
            Manufacturing extension for sales price calculations
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.ARSalesPriceMaintAMExtension.UseBaseCall">
            <summary>
            Control if the base call to CalculateSalesPrice should be used
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.ARSalesPriceMaintAMExtension.BaseCalculateSalesPrice(PX.Data.PXCache,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},PX.Objects.CM.CurrencyInfo,System.String,System.Nullable{System.Decimal},System.DateTime,System.Nullable{System.Decimal})">
            <summary>
            Force call to use base ARSalesPriceMaint.CalculateSalesPriceInt
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.ARSalesPriceMaintAMExtension.BaseCalculateSalesPrice(PX.Data.PXCache,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},PX.Objects.CM.CurrencyInfo,System.String,System.Nullable{System.Decimal},System.DateTime,System.Nullable{System.Decimal})">
            <summary>
            Force call to use base ARSalesPriceMaint.CalculateSalesPriceInt using this same signature
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.CSCalendarMaintAMExtension">
            <summary>
            Manufacturing extension on standard Acumatica Work Calendars
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.INClosingProcessAMExtension">
            <summary>
            Manufacturing extension for Inventory Close Financial Periods (IN509000)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.INItemSiteMaintAMExtension.BasicReplenishmentsEnabled">
            <summary>
            MYOB - "Basic Inventory Replenishments" feature.
            Indicates is this feature is enabled/turned on
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.INItemSiteMaintAMExtension.FullReplenishmentsEnabled">
            <summary>
            Indicates if the full replenishment feature is enabled/turned on
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.INReleaseProcessAMExtension.UpdateSalesOrderLines(System.Collections.Generic.List{PX.Data.PXResult{PX.Objects.IN.INItemPlan,PX.Objects.IN.INTranSplit,PX.Objects.IN.INTran,PX.Objects.IN.INPlanType,PX.Objects.IN.INItemPlanDemand}})">
            <summary>
            After base ProcessLinkedAllocation we need to update the sales orders further for production
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.InventoryAllocDetEnqAMExtension">
            <summary>
            Manufacturing Inventory Allocation Details graph extension
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.InventoryAllocDetEnqAMExtension.IsActive">
            <summary>
            Determines if extension is active
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.InventoryAllocDetEnqAMExtension.resultRecords">
            <summary>
            Extending ResultsRecords view results
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.InventoryAllocDetEnqAMExtension.IsAMModuleAllocationType(System.String)">
            <summary>
            All related MFG allocation entries
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.InventoryItemMaintAMExtension.BasicReplenishmentsEnabled">
            <summary>
            MYOB - "Basic Inventory Replenishments" feature.
            Indicates is this feature is enabled/turned on
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.InventoryItemMaintAMExtension.FullReplenishmentsEnabled">
            <summary>
            Indicates if the full replenishment feature is enabled/turned on
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.InventoryItemMaintAMExtension.SetAMReplenishmentDefaultValues">
            <summary>
            Reset Manufacturing replenishment settings on stock items to default values
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.JournalEntryAMExtension.IsInternalCall">
            <summary>
            Is the journal entry running as an internal manufacturing call/process
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.JournalEntryAMExtension.SetIsInternalCall(PX.Objects.GL.JournalEntry,System.Boolean)">
            <summary>
            Mark the journal entry as an internal Manufacturing call when true
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.ManageSalesAllocationsAMExtension.CreateBaseQuery(PX.Objects.SO.SalesAllocationsFilter,System.Collections.Generic.List{System.Object},System.Func{PX.Objects.SO.SalesAllocationsFilter,System.Collections.Generic.List{System.Object},PX.Data.PXSelectBase{PX.Objects.SO.SalesAllocation}})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.ManageSalesAllocations.CreateBaseQuery(PX.Objects.SO.SalesAllocationsFilter,System.Collections.Generic.List{System.Object})"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SalesAllocationExt">
            <exclude/>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2">
            <summary>
            Reusable business object for MFG and Opportunities
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.OpportunityDocumentMapping">
            <summary>
            Defines the default mapping of the <see cref="T:PX.Objects.AM.CacheExtensions.OpportunityDocument" /> mapped cache extension to a DAC.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.OpportunityDocumentMapping.#ctor(System.Type)">
            <summary>Creates the default mapping of the <see cref="T:PX.Objects.AM.CacheExtensions.OpportunityDocument" /> mapped cache extension to the specified table.</summary>
            <param name="table">A DAC. to MAP</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.GetOpportunityDocumentMapping">
            <summary>Returns the mapping of the <see cref="T:PX.Objects.AM.CacheExtensions.OpportunityDocument" /> mapped cache extension to a DAC. This method must be overridden in the implementation class of the base graph.</summary>
            <remarks>In the implementation graph for a particular graph, you  can either return the default mapping or override the default
            mapping in this method.</remarks>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.OpportunityEstimateRecords">
            <summary>
            Linked to estimates tab --> grid
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.ProductsViewName">
            <summary>
            Base opportunity related graph view name for the opportunity products
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.ContainsEstimates">
            <summary>
            Does the current opportunity contain estimates?
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2._(PX.Data.Events.RowSelected{PX.Objects.AM.CacheExtensions.OpportunityDocument})">
            <summary>
            Similar implementation to "DAC_RowSelected" event naming but as a single parameter with the row already of the correct type (no need to cast). Method name must be "_".
            Is strong typed so it allow to avoid additional casting for row and detect renames of DAC fields and classes when events declared.
            Unable to determine if we can receive the base delegate for chained extensions (Ex: PXRowSelected del). Internal Acumatica ticket AC-101189 asks the same unanswered question --> Allowed starting 2019R2
            </summary>
            <param name="e">contains both the row already as type OpportunityDocument and includes the cache</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.UpdateConfigurationResult(PX.Objects.CR.CROpportunityProducts,PX.Objects.AM.CacheExtensions.CROpportunityProductsExt,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Update a given configuration to match the given product line information.
            </summary>
            <param name="row"></param>
            <param name="rowExt"></param>s
            <param name="configuration"></param>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.AllowEstimates">
            <summary>
            Indicates if order allows for estimates
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.AllowConfigurations">
            <summary>
            Indicates if configurations are allowed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.ViewEstimate">
            <summary>
            Hyper-link on EstimateID to open the estimate page
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.CurrentEstimatesValidForSalesDetails(PX.Data.PXException@)">
            <summary>
            Pre-check for existing estimates if allowed to be converted to sales details
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.EstimateContainsNonInventoryMaterial(PX.Objects.AM.AMEstimateItem)">
            <summary>
            Determines if the given estimate contains material indicated as non inventory
            </summary>
            <param name="estimateItem"></param>
            <returns>True if non inventory material exists</returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.ChangeEstimatePrimary``1(PX.Data.PXCache)">
            <summary>
            Set the given opportunity/quote related estimates to be the primary estimates. Remove non primary estimates in case they do not exist on the new primary quote
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityBaseAMExtension`2.ChangeEstimateStatus``2(PX.Data.PXCache)">
            <summary>
            Sync quote status to estimate status
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityBaseCreateSalesOrderAMExtensionBase`4.CreateSalesOrderTypeAllowsEstimates">
            <summary>
            Indicates if estimates are allowed for Order type from the create order process
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityBaseCreateSalesOrderAMExtensionBase`4.CreateSalesOrderFilterAllowsConfigurations">
            <summary>
            Indicates if configurations are allowed for Order type from the create order process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension">
            <summary>
            Graph extension for Opportunities page
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.Products">
            <summary>
            Overriding order by to maintain grouping for configured items and supplemental items
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.createInvoice">
            <summary>
            Overriding standard Opportunity graph create invoice to prevent creation when estimates exist for the current opportunity
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.RemoveEstimateReferences">
            <summary>
            If an Opportunity or Quote is being deleted and contains estimate detail 
            we need to make sure the estimate has no reference to the Opportunity or Quote
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.AMEstimateReferenceOpportunity">
            <summary>
            Update to estimate reference record for document detail estimates. 
            Do not update for estimate tab estimate references.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.AMEstimateReferenceOpportunity.pEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.AMEstimateReferenceOpportunity.PEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.AMEstimateReferenceOpportunity.isLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityMaintAMExtension.AMEstimateReferenceOpportunity.IsLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.CurrentDocument">
            <summary>The current document.</summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.IsTaxCalcModeEnabled">
            <summary>If the value is <tt>true</tt>, indicates that tax calculation is enabled for the document.</summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension._NoSumTaxable">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.AddOneTax(PX.Objects.AM.AMEstimateReference,PX.Objects.TX.ITaxDetail)">
            <summary>Adds a tax to the specified detail line.</summary>
            <param name="detrow">The detail line.</param>
            <param name="taxitem">The tax item.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.DefaultTaxes(PX.Objects.AM.AMEstimateReference,System.Boolean)">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.DefaultTaxes(PX.Objects.AM.AMEstimateReference)">
            <summary>Assigns default taxes for the specified row.</summary>
            <param name="row">The detail line.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.AddTaxTotals(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.CROpportunity_TaxZoneID_FieldUpdated(PX.Data.PXCache,PX.Data.PXFieldUpdatedEventArgs,PX.Data.PXFieldUpdated)">
            <summary>The FieldUpdated event handler for the <see cref="P:PX.Objects.Extensions.SalesTax.Document.TaxZoneID" /> field of the <see cref="T:PX.Objects.Extensions.SalesTax.Document" /> mapped cache extension.</summary>
            <param name="sender">The cache object that raised the event.</param>
            <param name="e">Parameters of the event.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.CROpportunity_DocumentDate_FieldUpdated(PX.Data.PXCache,PX.Data.PXFieldUpdatedEventArgs,PX.Data.PXFieldUpdated)">
            <summary>The FieldUpdated event handler for the <see cref="P:PX.Objects.Extensions.SalesTax.Document.DocumentDate" /> field of the <see cref="T:PX.Objects.Extensions.SalesTax.Document" /> mapped cache extension.</summary>
            <param name="sender">The cache object that raised the event.</param>
            <param name="e">Parameters of the event.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.CROpportunity_TaxCalcMode_FieldUpdated(PX.Data.PXCache,PX.Data.PXFieldUpdatedEventArgs,PX.Data.PXFieldUpdated)">
            <summary>The FieldUpdated event handler for the <see cref="P:PX.Objects.Extensions.SalesTax.Document.TaxCalcMode" /> field of the <see cref="T:PX.Objects.Extensions.SalesTax.Document" /> mapped cache extension.</summary>
            <param name="sender">The cache object that raised the event.</param>
            <param name="e">Parameters of the event.</param>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.SummType">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.Initialize">
            <summary>Overrides the <tt>Initialize</tt> method of the base graph.</summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.inserted">
            <summary>The dictionary of inserted records.</summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.OpportunityMaintSalesTaxAMExtension.updated">
            <summary>The dictionary of updated records.</summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.POCreateAMExtension">
            <summary>
            MFG Extension to Create Purchase Orders screen
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.POCreateAMExtension.GetFixedDemandFieldScope(System.Func{System.Collections.Generic.IEnumerable{System.Type}})">
            <summary>
            Overrides <see cref="M:PX.Objects.PO.POCreate.GetFixedDemandFieldScope"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.POCreateAMExtension.EnumerateAndPrepareFixedDemands(PX.Data.PXResultset{PX.Objects.PO.POFixedDemand},System.Func{PX.Data.PXResultset{PX.Objects.PO.POFixedDemand},System.Collections.IEnumerable})">
            <summary>
            Overrides <see cref="M:PX.Objects.PO.POCreate.EnumerateAndPrepareFixedDemands(PX.Data.PXResultset{PX.Objects.PO.POFixedDemand})"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.POCreateAMExtension.POCreatePOOrders(PX.Objects.PO.POCreate,System.Collections.Generic.List{PX.Objects.PO.POFixedDemand},System.Nullable{System.DateTime},System.String)">
            <summary>
            Create a PO using manual numbering
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.POOrderEntryAMExtension">
            <summary>
            Manufacturing extension for purchase order entry
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.POOrderEntryAMExtension.FillLineDemandLastSplit">
            <summary>
            Saving the Last fixed demand entry for row inserted. This is used from the POCreate process.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension">
            <summary>
            Graph extension for CR Quotes page (new in 2018R1)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.Products">
            <summary>
            Overriding order by to maintain grouping for configured items and supplemental items
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.SuppressCascadeConfigurationDeletion(PX.Objects.CR.CRQuote)">
            <summary>
            Stop the cascade delete of configurations. This occurs when the last quote (IsPrimary) is deleted and only the Opportunity is remaining. We need to keep the configurations.
            </summary>
            <param name="quote">The quote being deleted</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.SuppressCascadeDeletion(PX.Data.PXView,System.Object)">
            <summary>
            Same as QuoteMaint.SuppressCascadeDeletion however that call is protected so this is a copy paste
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.AMEstimateReferenceQuote">
            <summary>
            Update to estimate reference record for document detail estimates. 
            Do not update for estimate tab estimate references.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.AMEstimateReferenceQuote.pEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.AMEstimateReferenceQuote.PEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.AMEstimateReferenceQuote.isLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.QuoteMaintAMExtension.AMEstimateReferenceQuote.IsLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.CurrentDocument">
            <summary>The current document.</summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.IsTaxCalcModeEnabled">
            <summary>If the value is <tt>true</tt>, indicates that tax calculation is enabled for the document.</summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension._NoSumTaxable">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.AddOneTax(PX.Objects.AM.AMEstimateReference,PX.Objects.TX.ITaxDetail)">
            <summary>Adds a tax to the specified detail line.</summary>
            <param name="detrow">The detail line.</param>
            <param name="taxitem">The tax item.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.DefaultTaxes(PX.Objects.AM.AMEstimateReference,System.Boolean)">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.DefaultTaxes(PX.Objects.AM.AMEstimateReference)">
            <summary>Assigns default taxes for the specified row.</summary>
            <param name="row">The detail line.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.AddTaxTotals(System.String,System.Object)">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.CRQuote_TaxZoneID_FieldUpdated(PX.Data.PXCache,PX.Data.PXFieldUpdatedEventArgs,PX.Data.PXFieldUpdated)">
            <summary>The FieldUpdated event handler for the <see cref="P:PX.Objects.Extensions.SalesTax.Document.TaxZoneID" /> field of the <see cref="T:PX.Objects.Extensions.SalesTax.Document" /> mapped cache extension.</summary>
            <param name="sender">The cache object that raised the event.</param>
            <param name="e">Parameters of the event.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.CRQuote_DocumentDate_FieldUpdated(PX.Data.PXCache,PX.Data.PXFieldUpdatedEventArgs,PX.Data.PXFieldUpdated)">
            <summary>The FieldUpdated event handler for the <see cref="P:PX.Objects.Extensions.SalesTax.Document.DocumentDate" /> field of the <see cref="T:PX.Objects.Extensions.SalesTax.Document" /> mapped cache extension.</summary>
            <param name="sender">The cache object that raised the event.</param>
            <param name="e">Parameters of the event.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.CRQuote_TaxCalcMode_FieldUpdated(PX.Data.PXCache,PX.Data.PXFieldUpdatedEventArgs,PX.Data.PXFieldUpdated)">
            <summary>The FieldUpdated event handler for the <see cref="P:PX.Objects.Extensions.SalesTax.Document.TaxCalcMode" /> field of the <see cref="T:PX.Objects.Extensions.SalesTax.Document" /> mapped cache extension.</summary>
            <param name="sender">The cache object that raised the event.</param>
            <param name="e">Parameters of the event.</param>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.SummType">
            <exclude />
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.Initialize">
            <summary>Overrides the <tt>Initialize</tt> method of the base graph.</summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.inserted">
            <summary>The dictionary of inserted records.</summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.QuoteMaintSalesTaxAMExtension.updated">
            <summary>The dictionary of updated records.</summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3">
            <summary>
            Reusable business object for MFG and Sales Orders
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.SelectedEstimateRecord">
            <summary>
            Linked to quick estimate
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.OrderEstimateItemFilter">
            <summary>
            Used for Add estimate panel
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.AllowEstimatesInt">
            <summary>
            Indicates if estimates allowed allows for orders (Internal usage)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.AllowConfigurationsInt">
            <summary>
            Indicates if configurations are allowed for orders (Internal usage)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.SyncEstimateReference(PX.Objects.AM.AMEstimateReference,PX.Objects.AM.AMEstimateItem)">
            <summary>
            Update the reference dac values with the estimate item values and return the updated reference (if update able)
            </summary>
            <param name="estimateReference">estimate reference row to sync</param>
            <param name="estimateItem">Estimate item related to the revision on the reference</param>
            <returns>Updated reference row if able to update/sync from estimate item values</returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.AddEstimateToQuote(PX.Objects.AM.AMOrderEstimateItemFilter,`1)">
            <summary>
            Add (link) estimate to a quote order. This could be a new or existing estimate.
            </summary>
            <param name="estimateItemFilter"></param>
            <param name="primaryRow">Primary order row</param>
            <returns>Estimate graph with cached changes</returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.ConfigurationChangeRequired(System.Nullable{System.Int32},System.Nullable{System.Int32},PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Does the given parameters require the configuration to be rebuild/changed?
            </summary>
            <param name="inventoryID">Inventory ID to verify</param>
            <param name="siteID">Warehouse ID to verify</param>
            <param name="configuration">current related configuration</param>
            <returns>True if a change of configuration is required</returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SalesOrderBaseAMExtension`3.ConfigurationChangeRequired(System.String,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Does the given parameters require the configuration to be rebuild/changed?
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.AMShiftedPeriodsExt`5">
            <summary>
            MFG implementation to Support of Different Financial Calendars (2019R1)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SOLineSplitPlanAM">
            <summary>
            Manufacturing extension to SOLineSplitPlanIDAttribute.
            Implements "SO to Production" allocation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOLineSplitPlanAM.InitPlanRequired(PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOLineSplit,System.Func{PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOLineSplit,System.Boolean})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOLineSplitPlan.InitPlanRequired(PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOLineSplit)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOLineSplitPlanAM.IsLineLinked(PX.Objects.SO.SOLineSplit,System.Func{PX.Objects.SO.SOLineSplit,System.Boolean})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOLineSplitPlan.IsLineLinked(PX.Objects.SO.SOLineSplit)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOLineSplitPlanAM.CalcPlanType(PX.Objects.IN.INItemPlan,PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOOrderType,System.Boolean,System.Func{PX.Objects.IN.INItemPlan,PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOOrderType,System.Boolean,System.String})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOLineSplitPlan.CalcPlanType(PX.Objects.IN.INItemPlan,PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOOrderType,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOLineSplitPlanAM.DefaultValues(PX.Objects.IN.INItemPlan,PX.Objects.SO.SOLineSplit,System.Func{PX.Objects.IN.INItemPlan,PX.Objects.SO.SOLineSplit,PX.Objects.IN.INItemPlan})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOLineSplitPlan.DefaultValues(PX.Objects.IN.INItemPlan,PX.Objects.SO.SOLineSplit)"/>
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.OrderEstimateRecords">
            <summary>
            Linked to estimates tab --> grid
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AMSOLineRecords">
            <summary>
            Tied to the production order action for listing and creating production orders related to sales order lines
            </summary>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AMSOLineLinkRecords">
            <summary>
            Prod. Order Link grid
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.IsActive">
            <summary>
            Determines if extension is active
            </summary>
            <returns></returns>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.IsCopyConfig">
            <summary>
            Are we running the Copy order copy config logic
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.RemoveEstimateReferences">
            <summary>
            If a sales order (or sales lines) are being deleted and contains estimate detail 
            we need to make sure the estimate has no reference to the order
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AllowProductionOrders">
            <summary>
            Indicates if the order allows the production order button
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AllowEstimates">
            <summary>
            Indicates if order allows for estimates
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AllowConfigurations">
            <summary>
            Indicates if order allows for configurations
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.UpdateEstimateReferenceStatus(PX.Objects.SO.SOOrder,System.Boolean)">
            <summary>
            Update the estimate reference based on the sales order status. Provides the necessary reference status changes to 
            keep in sync with the referenced SO Order.
            </summary>
            <param name="row">Sales order row of estimates to update</param>
            <param name="persist">If true then persist the update call to the DB, otherwise false is just a cache update only</param>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.ContainsEstimates">
            <summary>
            Does the current estimate contain estimates?
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.CheckPOLinked(PX.Objects.SO.SOLineSplit,PX.Data.PXCache,System.Func{PX.Objects.SO.SOLineSplit,PX.Data.PXCache,System.Boolean})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.SOOrderEntry.CheckPOLinked(PX.Objects.SO.SOLineSplit,PX.Data.PXCache)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.ProductionOrderCreationEnabled(PX.Objects.SO.SOOrderType,PX.Objects.SO.SOOrder,PX.Objects.SO.SOLine)">
            <summary>
            Indicates if the given order and sales line allows for production order creation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.GetPlanDate(PX.Objects.SO.SOLine)">
            <summary>
            Get/calculate the sales lines plan date for production
            </summary>
            <param name="soLine">sales line</param>
            <returns>production plan date</returns>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.CreateProductionOrders(System.Collections.Generic.List{PX.Objects.SO.SOLine})">
            <summary>
            Create production orders based on a set list of sales lines
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.CopyOrderProc(PX.Objects.SO.SOOrder,PX.Objects.SO.CopyParamFilter,System.Action{PX.Objects.SO.SOOrder,PX.Objects.SO.CopyParamFilter})">
            <summary>
            Extending the order copy process
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.RefreshConfiguredSalesLine(PX.Objects.SO.SOOrderEntry,PX.Objects.SO.SOLine,PX.Objects.AM.AMConfigurationResults,System.Boolean)">
            <summary>
            Update related configured sales line from configuration data.
            Ex: unit price, transaction description, etc.
            </summary>
            <param name="graph">Sales Order Graph</param>
            <param name="line">sales line to update</param>
            <param name="configResults">configuration result</param>
            <param name="calledFromSalesOrder">Set true when call originated from Sales Order Entry graph/UI</param>
        </member>
        <member name="F:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.ViewEstimate">
            <summary>
            Hyper-link on EstimateID to open the estimate page
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.CopyConfiguration(PX.Objects.SO.SOLine,PX.Objects.SO.SOLine)">
            <summary>
            Copy configuration results from one sales line to another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.CopyConfiguration(PX.Objects.SO.SOLine,PX.Objects.AM.AMConfigurationResults,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Copy configuration results from one sales line to another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.UpdateConfigurationResult(PX.Objects.SO.SOLine)">
            <summary>
            Update a given configuration to match the given sales line information.
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.UpdateConfigurationResult(PX.Objects.SO.SOLine,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Update a given configuration to match the given sales line information.
            </summary>
            <param name="row"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.UpdateConfigurationResult(PX.Objects.SO.SOLine,PX.Objects.AM.CacheExtensions.SOLineExt,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Update a given configuration to match the given sales line information.
            </summary>
            <param name="row"></param>
            <param name="rowExt"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AMEstimateReferenceSO">
            <summary>
            Update to estimate reference record for document detail estimates. 
            Do not update for estimate tab estimate references.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AMEstimateReferenceSO.pEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="P:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.AMEstimateReferenceSO.PEstimateID">
            <summary>
            EstimateID for AMEstimatePrimary
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SOOrderEntryAMExtension.LinkProdOrderSelectFilter">
            <summary>
            The filter for the production order links on the Sales Order (SO301000) form,
            which corresponds to the <see cref="T:PX.Objects.SO.SOOrderEntry"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.GraphExtensions.SOOrderLineSplittingAllocatedExtensionAMExtension">
            <summary>
            Manufacturing extension to <see cref="T:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOOrderLineSplittingAllocatedExtension"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderLineSplittingAllocatedExtensionAMExtension.SchedulesEqual(PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOLineSplit,PX.Data.PXDBOperation,System.Func{PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOLineSplit,PX.Data.PXDBOperation,System.Boolean})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOOrderLineSplittingAllocatedExtension.SchedulesEqual(PX.Objects.SO.SOLineSplit,PX.Objects.SO.SOLineSplit,PX.Data.PXDBOperation)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderLineSplittingAllocatedExtensionAMExtension.EventHandlerInternal(PX.Objects.Common.ManualEvent.Row{PX.Objects.SO.SOLine}.Updated.Args,System.Action{PX.Objects.Common.ManualEvent.Row{PX.Objects.SO.SOLine}.Updated.Args})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOOrderLineSplittingExtension.EventHandler(PX.Objects.Common.ManualEvent.Row{PX.Objects.SO.SOLine}.Updated.Args)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderLineSplittingAllocatedExtensionAMExtension.SelectFirstSplit(PX.Objects.SO.SOLine)">
            <summary>
            Selection of Mark for Production <see cref="T:PX.Objects.SO.SOLineSplit"/> first. If one doesn't exist then select first available open <see cref="T:PX.Objects.SO.SOLineSplit"/>.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderLineSplittingAllocatedExtensionAMExtension.SelectFirstSplit(System.Collections.Generic.IEnumerable{PX.Objects.SO.SOLineSplit},System.Boolean)">
            <summary>
            Selection of expected first <see cref="T:PX.Objects.SO.SOLineSplit"/>.
            </summary>
            <param name="splits">Collection of <see cref="T:PX.Objects.SO.SOLineSplit"/> to select from.</param>
            <param name="selectFirstProdCreate">when true, find the first mark for production <see cref="T:PX.Objects.SO.SOLineSplit"/>, else will find the first non mark for production <see cref="T:PX.Objects.SO.SOLineSplit"/>.</param>
        </member>
        <member name="M:PX.Objects.AM.GraphExtensions.SOOrderLineSplittingAllocatedExtensionAMExtension.EventHandler(PX.Objects.Common.ManualEvent.Row{PX.Objects.SO.SOLineSplit}.Inserting.Args,System.Action{PX.Objects.Common.ManualEvent.Row{PX.Objects.SO.SOLineSplit}.Inserting.Args})">
            <summary>
            Overrides <see cref="M:PX.Objects.SO.GraphExtensions.SOOrderEntryExt.SOOrderLineSplittingExtension.EventHandler(PX.Objects.Common.ManualEvent.Row{PX.Objects.SO.SOLineSplit}.Inserting.Args)"/>
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ECCBaseGraph`2.DefaultItemSite(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an INItemSite record if one doesn't exist for the bom item/site
            </summary>
        </member>
        <member name="T:PX.Objects.AM.EngineeringWorkbenchMultiLevelExtension">
            <summary>
            Multi level process extension for Engineering Workbench (AM208100)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MultiLevelBomProcessBase`2">
            <summary>
            Reusable business object for processing multi-level bom logic
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MultiLevelBomResult">
            <summary>
            Result of reusable multi level bom process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MultiLevelBomProcessFilter">
            <summary>
            Options used for running multi level bom process
            </summary>
        </member>
        <member name="M:PX.Objects.AM.IDManagerBase.FindRow``1(``0)">
            <summary>
            Found the given row in the cache
            </summary>
        </member>
        <member name="T:PX.Objects.AM.IConfigOption">
            <summary>
            Manufacturing configuration option
            </summary>
        </member>
        <member name="T:PX.Objects.AM.IProdOper">
            <summary>
            Manufacturing - Production operation DAC interface
            </summary>
        </member>
        <member name="T:PX.Objects.AM.IProdOrder">
            <summary>
            Manufacturing - Production order DAC interface
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ISchdDetail">
            <summary>
            Schedule Detail Interface
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ISchdDetail.OrderByDate">
            <summary>
            Required due to overnight times. We need to know what is morning of or still apart of an overnight shift (next day but still apart of the previous date)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ISchdDetail`1">
            <summary>
            Schedule Detail Interface
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryHelper">
            <summary>
            Manufacturing Inventory helper class
            Shared method such as get lot size, default bin location, etc.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetFixMfgLeadTime(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Retrieves the fixed manufacturing lead time value for an item [and site]
            </summary>
            <param name="graph">calling graph</param>
            <param name="inventoryID">Inventory ID</param>
            <param name="siteID">Warehouse ID</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetQtyAvail(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get the qty avail for an item/subitem/bin combo. 
            </summary>
            <param name="graph">Calling PXGraph</param>
            <param name="inventoryId">Inventory Item ID</param>
            <param name="subItemId">Sub Item</param>
            <param name="locationID">Bin Location ID</param>
            <returns>Current quantity available</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetQtyAvail(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get the qty avail for an item/subitem/bin combo. 
            </summary>
            <param name="graph">Calling PXGraph</param>
            <param name="inventoryId">Inventory Item ID</param>
            <param name="subItemId">Sub Item</param>
            <param name="locationID">Bin Location ID</param>
            <param name="lotSerialNbr">Lot/Serial Number (leave null/empty to skip check on lot/serial)</param>
            <returns>Current quantity available</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetQtyAvail(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Get the qty avail for an item/subitem/bin combo. 
            </summary>
            <param name="graph">Calling PXGraph</param>
            <param name="inventoryId">Inventory Item ID</param>
            <param name="subItemId">Sub Item</param>
            <param name="locationID">Bin Location ID</param>
            <param name="lotSerialNbr">Lot/Serial Number (leave null/empty to skip check on lot/serial)</param>
            <param name="receiptsAllowed">find bin locations with receipts valid matching value (null = any value)</param>
            <param name="salesAllowed">find bin locations with sales valid matching value (null = any value)</param>
            <param name="productionAllowed">find bin locations with production valid matching value (null = any value)</param>
            <returns>Current quantity available</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetQtyHardAvail(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Get the qty hard avail for an item/subitem/bin combo. 
            </summary>
            <param name="graph">Calling PXGraph</param>
            <param name="inventoryId">Inventory Item ID</param>
            <param name="subItemId">Sub Item</param>
            <param name="locationID">Bin Location ID</param>
            <param name="lotSerialNbr">Lot/Serial Number (leave null/empty to skip check on lot/serial)</param>
            <param name="receiptsAllowed">find bin locations with receipts valid matching value (null = any value)</param>
            <param name="salesAllowed">find bin locations with sales valid matching value (null = any value)</param>
            <param name="productionAllowed">find bin locations with production valid matching value (null = any value)</param>
            <returns>Current quantity available</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLocationStatus(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Query INLocationStatusByCostCenter and return the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLocationStatus(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLocationStatusByCostCenter and return the results based on shipping availabe
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLocationStatusProductionAllocatedQty(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLocationStatusByCostCenter and return the results based on quantity on hand
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLocationStatusSum(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLocationStatusByCostCenter and return the sum of the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.BuildLocationStatusCommand(PX.Data.PXSelectBase{PX.Objects.IN.INLocationStatusByCostCenter}@,System.Collections.Generic.List{System.Object}@,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Builds the where statement for the base select for location status records
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatus(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Query INLotSerialStatusByCostCenter and return the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatus(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLotSerialStatusByCostCenter and return the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatus(PX.Data.PXGraph,PX.Objects.IN.INLotSerClass,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Query INLotSerialStatusByCostCenter and return the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatus(PX.Data.PXGraph,PX.Objects.IN.INLotSerClass,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Query INLotSerialStatus and return the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatus(PX.Data.PXGraph,PX.Objects.IN.INLotSerClass,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLotSerialStatusByCostCenter and return the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatusList(PX.Data.PXGraph,PX.Objects.IN.INLotSerClass,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLotSerialStatus and return the results as a list
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatusSum(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLotSerialStatusByCostCenter and return the sum of the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetLotSerialStatusSum(PX.Data.PXGraph,PX.Objects.IN.INLotSerClass,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Query INLotSerialStatusByCostCenter and return the sum of the results
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.BuildLotSerialStatusCommand(PX.Data.PXSelectBase{PX.Objects.IN.INLotSerialStatusByCostCenter}@,System.Collections.Generic.List{System.Object}@,PX.Objects.IN.INLotSerClass,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Builds the where statement for the base select for lotserial status records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryHelper.DfltLocation">
            <summary>
            Class containing Manufacturing calls for getting an items default bin location information
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InventoryHelper.DfltLocation.BinType">
            <summary>
            Bin Default Type
            </summary>
        </member>
        <member name="F:PX.Objects.AM.InventoryHelper.DfltLocation.BinType.Receipt">
            <summary>
            Put Away or Receipt Default Bin Location
            </summary>
        </member>
        <member name="F:PX.Objects.AM.InventoryHelper.DfltLocation.BinType.Ship">
            <summary>
            Pick or Ship Default Bin Location
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetInventoryDefault(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get the inventory item default location (no match to items default warehouse).
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="inventoryID">inventory item ID</param>
            <param name="checkProductionValid">Restrict the bin location with production allowed option checked</param>
            <returns>default bin location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetInventoryDefault(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get the inventory item default location.
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="inventoryID">inventory item ID</param>
            <param name="siteID">(optional) warehouse ID. When entered - the default is returned only when item has a default warehouse entered</param>
            <param name="checkProductionValid">Restrict the bin location with production allowed option checked</param>
            <returns>default bin location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetItemWarehouseDefault(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get the item warehouse default location
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="inventoryID">inventory item ID</param>
            <param name="siteID">warehouse ID</param>
            <param name="checkProductionValid">Restrict the bin location with production allowed option checked</param>
            <returns>default bin location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetWarehouseDefault(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get a warehouse's default location.
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="siteID">warehouse ID</param>
            <param name="checkProductionValid">Restrict the bin location with production allowed option checked</param>
            <returns>default bin location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetFirstWarehouseLocation(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get the first location allowed for a given warehouse.
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="siteID">warehouse ID</param>
            <param name="checkProductionValid">Restrict the bin location with production allowed option checked</param>
            <returns>default bin location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetDefaults(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get a set of default locations for an item and warehouse.
            Defaults searched: item warehouse default, item default (matching default warehouse), warehouse default
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="inventoryID">inventory item ID</param>
            <param name="siteID">warehouse ID</param>
            <param name="checkProductionValid">Restrict the bin locations with production allowed option checked</param>
            <returns>a set of unique bin location ids</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetDefaults(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get a set of default locations for an item and warehouse.
            Defaults searched: item warehouse default, item default (matching default warehouse), warehouse default
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">bin location Type to retrieve</param>
            <param name="inventoryID">inventory item ID</param>
            <param name="siteID">warehouse ID</param>
            <param name="returnAnyLocation">when true, find at least 1 location regardless of found default locations</param>
            <param name="returnFirst">when true, return the first found location (only 1 location needed)</param>
            <param name="checkProductionValid">Restrict the bin locations with production allowed option checked</param>
            <returns>a set of unique bin location ids</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetDefault(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Find an items first default location.
            Checks [1] item warehouse [2] inventory item (matching default site) [3] warehouse default
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">Bin type - Ship or Receipt</param>
            <param name="inventoryID">Inventory ID</param>
            <param name="siteID">Warehouse ID</param>
            <param name="returnAnyLocation">True: A bin location must be returned. First valid bin found is used after all defaults are checked. This helps to prevent a null return providing some type of overall default.
            False: Only defaults or null are returned.</param>
            <returns>A location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DfltLocation.GetDefault(PX.Data.PXGraph,PX.Objects.AM.InventoryHelper.DfltLocation.BinType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Find an items first default location.
            Checks [1] item warehouse [2] inventory item (matching default site) [3] warehouse default
            </summary>
            <param name="graph">calling graph</param>
            <param name="binLocationType">Bin type - Ship or Receipt</param>
            <param name="inventoryID">Inventory ID</param>
            <param name="siteID">Warehouse ID</param>
            <param name="returnAnyLocation">True: A bin location must be returned. First valid bin found is used after all defaults are checked. This helps to prevent a null return providing some type of overall default.
            False: Only defaults or null are returned.</param>
            <param name="checkProductionValid">Check locations only marked as production allowed</param>
            <returns>A location ID</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetReplenishmentSource(PX.Data.PXGraph,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Determines the replenishment source for a specific inventory item using the InventoryID and SiteID
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.DefaultItemSiteManufacturing(PX.Data.PXGraph,PX.Objects.IN.InventoryItem,PX.Objects.IN.INItemSite)">
            <summary>
            Default Manufacturing values from InventoryItem to INItemSite
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.GetSubItem(PX.Data.PXGraph,System.String,System.Boolean)">
            <summary>
            Get the INSubItem row for a given sub item segment CD value
            </summary>
            <param name="graph">calling graph</param>
            <param name="subitemCD">Sub item CD Segment value</param>
            <param name="createIfNotFound">Should the call create an INSubItem record on the fly if not found</param>
            <returns>Found (or Created) INSubItem row</returns>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.LotSerialTrackingFeatureEnabled">
            <summary>
            Indicates if the Lot Serial Tracking feature is enabled
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.MultiWarehousesFeatureEnabled">
            <summary>
            Indicates if the Multiple Warehouse feature is enabled
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.MultiWarehouseLocationFeatureEnabled">
            <summary>
            Indicates if the Multiple Warehouse Locations feature is enabled
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.SubItemFeatureEnabled">
            <summary>
            Indicates if the sub item feature is turned on (return = True)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.BasicReplenishmentsEnabled">
            <summary>
            MYOB - "Basic Inventory Replenishments" feature.
            Indicates is this feature is enabled/turned on
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.FullReplenishmentsEnabled">
            <summary>
            Indicates if the full replenishment feature is enabled/turned on
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryHelper.KitAssembliesFeatureEnabled">
            <summary>
            Indicates if the Kit Assemblies feature is enabled/turned on
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.TryCreateSubItem(PX.Data.PXGraph,System.String,PX.Objects.IN.INSubItem@)">
            <summary>
            Try to create a sub item record if one does not exist for the entered sub item CD value
            </summary>
            <param name="subitemCD">Sub item CD Segment value</param>
            <param name="inSubItem">if created the new INSubItem row</param>
            <returns>True if a row was created, otherwise false</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.IsLotSerialTempAssigned(PX.Objects.AM.AMProdItemSplit)">
            <summary>
            Determine if the LotSerialNbr for the split record is a dummy place holder
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.IsLotSerialTempAssigned(System.String,System.String)">
            <summary>
            Determine if the LotSerialNbr for the split record is a dummy place holder
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.IsLotSerialPreassigned(PX.Data.PXGraph,PX.Objects.AM.AMProdItemSplit,PX.Objects.AM.IProdOrder,System.String@,System.String@)">
            <summary>
            Has the lot/serial nbr been assigned to another production order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.IsLotSerialPreassigned(PX.Data.PXGraph,System.Nullable{System.Int32},System.String,PX.Objects.AM.IProdOrder,System.String@,System.String@)">
            <summary>
            Has the lot/serial nbr been assigned to another production order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryHelper.IsItemLotSerialTracked(PX.Data.PXGraph,System.Nullable{System.Int32})">
            <summary>
            Checks if an Inventory item is lot/serial tracked
            </summary>
            <returns>True if record is lot/serial tracked</returns>
        </member>
        <member name="T:PX.Objects.AM.InventoryTranBuilder">
            <summary>
            Manufacturing builder of inventory transactions for both stock and non stock items
            </summary>
        </member>
        <member name="F:PX.Objects.AM.InventoryTranBuilder.RefDocNoteId">
            <summary>
            Reference back to the source document
            </summary>
        </member>
        <member name="F:PX.Objects.AM.InventoryTranBuilder.RefDocEntityType">
            <summary>
            Reference back to the source type
            </summary>
        </member>
        <member name="F:PX.Objects.AM.InventoryTranBuilder.RefDocNoteRecordRequired">
            <summary>
            To use as a reference doc (hyper link) a note record must exist.
            This indicates if in the process of creating inventory transaction the RefDocNoteId referenced was used and indicates (true) a note record is needed
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InventoryTranBuilder.GlGraphLoaded">
            <summary>
            Graph contains a journal entry batch
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.ConstructGlGraph">
            <summary>
            Creates the instance for GlGraph
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.RemoveINReference(PX.Objects.AM.AMMTran@)">
            <summary>
            Delete/remove Inventory related reference for current AMMTran
            </summary>
            <param name="ammTran"></param>
            <returns>True if IN Record marked for deletion</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.DeleteINReferencesLegacy(PX.Objects.AM.AMMTran)">
            <summary>
            Delete the INTran records related to the passed AMMTran record.
            This uses the non AEF method for finding the records to delete (Match per INTran values)
            </summary>
            <param name="ammTran"></param>
            <returns>True when INTran rows marked for delete</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.DeleteINReferences(PX.Objects.AM.AMMTran)">
            <summary>
            Delete the INTran records related to the passed AMMTran record.
            This uses the AEF references which is a better lookup as this will find multiple INTrans per single AMMTran which could 
             occur in adjustment or similar transactions (many INTran to single AMMTran).
            </summary>
            <param name="ammTran"></param>
            <returns>True when INTran rows marked for delete</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.ContainsReleasedGlTrans">
            <summary>
            Does the current journal entry contain released transactions
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.DeleteAllGlTrans">
            <summary>
            Delete all GLTran records from the current transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.CreateScrapWriteOffLine(PX.Objects.AM.AMMTran,System.Boolean)">
            <summary>
            Process non inventory transaction as a GL entry representing a scrapping of the item.
            </summary>
            <param name="ammTran">material transaction being scrapped</param>
            <param name="wipIsDebit">Is the WIP a debit transaction (true) or credit (false)</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.CreateGLInventoryTranLine(PX.Objects.AM.AMMTran,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Decimal,System.Boolean,System.String)">
            <summary>
            Create a GL transaction for the given inventory information
            </summary>
            <param name="ammTran"></param>
            <param name="accountId">GL Account to go against the WIP account</param>
            <param name="subAccountId">GL Sub-account to go against the WIP account</param>
            <param name="tranAmount">transaction amount</param>
            <param name="wipIsDebit">Is the WIP a debit transaction (true) or credit (false)</param>
            <param name="tranDesc">GL transaction description</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.CreateStockItemINAdjustmentLines(PX.Objects.AM.AMMTran,System.Collections.Generic.List{PX.Objects.AM.AMMTranSplit})">
            <summary>
            Creates IN Adjustment lines based on the AMTran line.
            Most likely negative move transactions
            </summary>
            <param name="ammTran">Manufacturing transaction line as the source of the IN Adjustment line(s) to create</param>
            <param name="splits">split lines for ammTran record</param>
            <returns>passed in ammtran record updated as it relates to the INAdjustment lines</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.CurrentCachedDemandPlanQty(PX.Objects.IN.INItemPlan)">
            <summary>
            How much plan qty is already linked/cached in the given INtransaction?
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.GetDemandPlans(PX.Objects.AM.AMMTran,PX.Objects.AM.AMProdItemSplit)">
            <summary>
            Get the demand items linked to the production split
            </summary>
            <param name="line"></param>
            <param name="prodItemSplit"></param>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.DeleteINTranSplits(PX.Objects.IN.INTran)">
            <summary>
            Deletes the related transaction split records to the IN transaction if found
            </summary>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.HasINTranSplits(PX.Objects.IN.INTran)">
            <summary>
            Does the given IN Transaction line currently contain any split records in the cache/graph?
            </summary>
            <returns>True if records found</returns>
        </member>
        <member name="M:PX.Objects.AM.InventoryTranBuilder.GetINTranSplits(PX.Objects.IN.INTran)">
            <summary>
            Gets the related transaction split records to the IN transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.LaborEntry.GetStartEndLaborTime(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Calculate the time between the user entered start/end times
            </summary>
            <param name="cache">cache object</param>
            <param name="ammTran">ammtran row</param>
            <returns>decimal of hours</returns>
        </member>
        <member name="M:PX.Objects.AM.LaborEntry.CalcLaborTime(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Sets the Labor Hours field with the calculated start/end labor hours value
            </summary>
            <param name="cache"></param>
            <param name="ammTran"></param>
        </member>
        <member name="M:PX.Objects.AM.LaborEntry.SetLaborAmount(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Sets the transaction related labor amount fields
            </summary>
        </member>
        <member name="M:PX.Objects.AM.LaborEntry.GetLaborRate(PX.Objects.AM.AMMTran)">
            <summary>
            Determine the correct labor rate for the transactions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.LockOrderProcess">
            <summary>
            Lock production orders (AM517000) process graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.LockProductionProcessFilter">
            <summary>
            Processing filter for Lock Production Orders (AM517000) processing screen.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.LockProductionProcessFilter.ProcessAction">
            <summary>
            Production Order Lock Process Action
            </summary>
        </member>
        <member name="T:PX.Objects.AM.LockProcessActions">
            <summary>
            Processing actions for Lock Production Orders (AM517000) processing screen.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.LockProcessActions.LockAction">
            <summary>
            Action to lock production orders during processing.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.LockProcessActions.UnlockAction">
            <summary>
            Action to unlock previously locked production orders during processing.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.LowLevel.CurrentMaxLowLevel">
            <summary>
            Number of levels found
            </summary>
        </member>
        <member name="F:PX.Objects.AM.LowLevel.ProcessLevelsSkipped">
            <summary>
            Was the process skipped (no boms changed from last run)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.LowLevel._lowLevelDictionary">
            <summary>
            Keeps track of all item low levels to call one DB update at the end of set all
            </summary>
        </member>
        <member name="M:PX.Objects.AM.LowLevel.BomDataChanged(PX.Data.PXGraph,System.Nullable{System.DateTime})">
            <summary>
            Determine if BOM data has changed. If not then no need to recalc low levels
            </summary>
            <param name="graph">calling graph</param>
            <param name="fromDateTime">Date and time to check from for bom changes</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.LowLevel.PersistDictionaryWithRetry">
            <summary>
            Persist with a retry for each row vs first attempt at mass update.
            This exists due to various customer item table error that exist before this process runs preventing the update from occurring.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.LowLevel.SetAll">
            <summary>
            Sets Low Level for all Inventory Id's
            </summary>
        </member>
        <member name="T:PX.Objects.AM.LowLevel.LowLevelInventoryItem">
            <summary>
            PXProjection for <see cref="T:PX.Objects.IN.InventoryItem"/> only including the low level field to update
            </summary>
        </member>
        <member name="T:PX.Objects.AM.LowLevel.INKitSpecHdrLastRevisionDate">
            <summary>
            Group by Work kitInventoryID and get INKitSpecHdr records with max createdDateTime
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachineCapacityInq">
            <summary>
            Machine Capacity Inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachineCapacityInq.MachineCapacityFilter">
            <summary>
            The filter of the Machine Capacity (AM406000) form (which corresponds to the <see cref="T:PX.Objects.AM.MachineCapacityInq"/> graph).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachineCapacityInq.MachineCapacityDetail">
            <summary>
            A DAC that contains the machine capacity details. These records are generated by the <see cref="T:PX.Objects.AM.MachineCapacityInq"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachineCapacityInq.MachineCapacityDetail.fromDate">
            <summary>
            Starting date range
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MachineCapacityInq.MachineCapacityDetail.FromDate">
            <summary>
            Starting date range
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachineCapacityInq.MachineCapacityDetail.toDate">
            <summary>
            Ending date range
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MachineCapacityInq.MachineCapacityDetail.ToDate">
            <summary>
            Ending date range
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MachineScheduleHelper.HasSameSchdTime(System.Collections.Generic.List{PX.Objects.AM.AMMachSchdDetail})">
            <summary>
            Does the list of machine schedule detail all contain the same <see cref="P:PX.Objects.AM.AMMachSchdDetail.RunTimeBase"/> value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MachMaint">
            <summary>
            Manufacturing Machine Maintenance
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ManufacturingDiagram.ManufacturingDiagramFilter.WorkCenterCalendarType">
            <summary>
            Defines how the Histogram data is displayed
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialEntry.SkipReferenceDelete">
            <summary>
            During line or batch delete, do we skip deleting the any unreleased related documents.
            Default is false as in most cases we will delete related documents. (Only exist on re-release)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialEntry.CheckOverIssueMaterialOnEntry(PX.Data.PXCache,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal})">
            <summary>
            Checks for Over Issue of Material for a given material entry.
            If over issue found related to check level. (given cache to call RaiseExceptionHandling when condition is met).
            </summary>
            <returns>True when the condition is an error</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialEntry.CheckOverIssueMaterialOnEntry(PX.Data.PXCache,PX.Objects.AM.AMMTranSplit,System.Nullable{System.Decimal})">
            <summary>
            Checks for Over Issue of Material for a given material entry.
            If over issue found related to check level. (given cache to call RaiseExceptionHandling when condition is met).
            </summary>
            <returns>True when the condition is an error</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialEntry.InsertNewTransaction(PX.Objects.AM.AMMTran,System.Collections.Generic.List{PX.Objects.AM.AMMTranSplit},PX.Objects.AM.AMMTran)">
            <summary>
            Insert Release Material Transaction lines
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MaterialTranBuilder">
            <summary>
            Build Manufacturing material rows for use in material transactions such as material wizard and backflush of material based on qty on hand
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialTranBuilder._graph">
            <summary>
            Calling graph
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialTranBuilder._AllBuiltTranLines">
            <summary>
            Storage of previously processed transaction lines.
            Could be from within this class process or added from external sources.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialTranBuilder._StatusByLotSerial">
            <summary>
            Are the transactions built for lot/serial status qty? (when true - and given item is L/S tracked).
            Or only at the location level (when false).
            Default = false
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialTranBuilder._lotSerialTracking">
            <summary>
            Indicates if lot/serial tracking feature is enabled
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MaterialTranBuilder.ExcludePreviousTransactions">
            <summary>
            Should previous build AMMTran transaction lines be excluded from available qty for matching item/site/location/lot serial?
            Default = true
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MaterialTranBuilder.StatusByLotSerial">
            <summary>
            Are the transactions built for lot/serial status qty? (when true - and given item is L/S tracked).
            Or only at the location level (when false).
            Default = false
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.AddBuiltTranLine(PX.Objects.AM.AMMTran)">
            <summary>
            Store transaction line to list of built tran lines for excluding qty later.
            </summary>
            <param name="ammTran">new transaction to add</param>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.AddBuiltTranLines(System.Collections.Generic.List{PX.Objects.AM.AMMTran})">
            <summary>
            Store transaction lines to list of built tran lines for excluding qty later.
            </summary>
            <param name="ammTrans">new transactions to add</param>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.ClearBuiltTranLines">
            <summary>
            Clear built list of transaction lines
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.BuildTransactions(PX.Objects.AM.AMProdMatl,System.Decimal,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String@)">
            <summary>
            Build a set of transaction lines based on item and available locations
            </summary>
            <param name="prodMatl">Production material record</param>
            <param name="totalIssueQty">Transaction qty to issue for given item/warehouse</param>
            <param name="issueUom">Transaction unit of measure</param>
            <param name="siteID">warehouse</param>
            <param name="locationID">optional bin location. If no location specified the defaults then pick priory bins</param>
            <returns>new built transaction lines</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.BuildTransactions(PX.Objects.AM.AMProdMatl,PX.Objects.IN.InventoryItem,PX.Objects.IN.INLotSerClass,System.Decimal,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String@)">
            <summary>
            Build a set of transaction lines based on item and available locations
            </summary>
            <param name="prodMatl">Production material record</param>
            <param name="inventoryItem">Inventory item record related to prodMatl record</param>
            <param name="lotSerClass">Item lot serial class record related to inventoryItem record</param>
            <param name="totalIssueQty">Transaction qty to issue for given item/warehouse</param>
            <param name="issueUom">Transaction unit of measure</param>
            <param name="siteID">warehouse</param>
            <param name="locationID">optional bin location. If no location specified the defaults then pick priory bins</param>
            <returns>new built transaction lines</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.BuildMaterialByProductTransactions(PX.Objects.AM.AMProdMatl,System.Decimal,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Build a set of transaction lines for by product transaction
            </summary>
            <param name="prodMatl">Production material record</param>
            <param name="totalIssueQty">Transaction qty to issue for given item/warehouse</param>
            <param name="issueUom">Transaction unit of measure</param>
            <param name="siteID">warehouse</param>
            <param name="locationID">optional bin location. If no location specified the defaults then pick priory bins</param>
            <returns>new built transaction lines</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.BuildMaterialIssueTransactions(PX.Objects.AM.AMProdMatl,System.Decimal,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String@)">
            <summary>
            Build a set of transaction lines based on item and available locations
            </summary>
            <param name="prodMatl">Production material record</param>
            <param name="totalIssueQty">Transaction qty to issue for given item/warehouse</param>
            <param name="issueUom">Transaction unit of measure</param>
            <param name="siteID">warehouse</param>
            <param name="locationID">optional bin location. If no location specified the defaults then pick priory bins</param>
            <returns>new built transaction lines</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.BuildMaterialIssueTransactions(PX.Objects.AM.AMProdMatl,PX.Objects.IN.InventoryItem,PX.Objects.IN.INLotSerClass,System.Decimal,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String@)">
            <summary>
            Build a set of transaction lines based on item and available locations
            </summary>
            <param name="prodMatl">Production material record</param>
            <param name="inventoryItem">Inventory item record related to prodMatl record</param>
            <param name="lotSerClass">Item lot serial class record related to inventoryItem record</param>
            <param name="totalIssueQty">Transaction qty to issue for given item/warehouse</param>
            <param name="issueUom">Transaction unit of measure</param>
            <param name="siteID">warehouse</param>
            <param name="locationID">optional bin location. If no location specified the defaults then pick priory bins</param>
            <returns>new built transaction lines</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.CreateAMMTranLocation(PX.Data.PXCache,PX.Objects.AM.AMProdMatl,PX.Objects.IN.InventoryItem,PX.Objects.IN.INLocationStatusByCostCenter,System.Decimal,System.String)">
            <summary>
            Create a transaction line based on location status
            </summary>
            <param name="cache">cache for translating uom quantity (use AMProdMatl cache)</param>
            <param name="prodMatl">Production material record</param>
            <param name="inventoryItem">Inventory item record related to prodMatl record</param>
            <param name="locationStatus">Location status record to issue from containing qty on hand</param>
            <param name="issueQty">Transaction qty to issue for given locationStatus record</param>
            <param name="issueUom">Transaction unit of measure</param>
            <returns>new built transaction line</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.CreateAMMTranLotSerial(PX.Data.PXCache,PX.Objects.AM.AMProdMatl,PX.Objects.IN.InventoryItem,PX.Objects.IN.INLotSerialStatusByCostCenter,System.Decimal,System.String)">
            <summary>
            Create a transaction line based on lot/serial status
            </summary>
            <param name="cache">cache for translating uom quantity (use AMProdMatl cache)</param>
            <param name="prodMatl">Production material record</param>
            <param name="inventoryItem">Inventory item record related to prodMatl record</param>
            <param name="lotSerialStatus">Lot/Serial status record to issue from containing qty on hand</param>
            <param name="issueQty">Transaction qty to issue for given locationStatus record</param>
            <param name="issueUom">Transaction unit of measure</param>
            <returns>new built transaction line</returns>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.TryRoundBaseQty(PX.Objects.AM.AMProdMatl,PX.Objects.IN.InventoryItem,System.Decimal,System.Decimal,System.String,System.Int32,System.Decimal@)">
            <summary>
            Round up the base qty if its found to be a small rounding factor keeping the value from being a whole value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.GetDefaultIssueLocationID(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get an items default issue/ship warehouse location ID
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.GetDefaultReceiptLocationID(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get an items default receipt warehouse location ID
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.GetExcludedTranQty``1(PX.Data.PXCache,System.Object,System.Collections.Generic.List{PX.Objects.AM.AMMTran},PX.Objects.IN.InventoryItem,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find quantity for a given item/warehouse/location that has already been recorded on another transaction line
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.ConvertToBaseUOM``1(PX.Data.PXCache,System.Object,PX.Objects.IN.InventoryItem,System.Decimal,System.String)">
            <summary>
            Convert the transaction quantity to the base unit of measure
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.ConvertToTranUOM``1(PX.Data.PXCache,System.Object,PX.Objects.IN.InventoryItem,System.Decimal,System.String)">
            <summary>
            Convert the base quantity to the transaction unit of measure
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MaterialTranBuilder.GetExcludedBaseQty(System.Collections.Generic.List{PX.Objects.AM.AMMTran},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Find matching transactions quantity and return
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MatlWizard1.GetMaterialBaseQtyAvail(PX.Objects.AM.AMProdMatl)">
            <summary>
            Find the base quantity available for the given material item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MatlWizard1.GetBaseQtyUsed(PX.Objects.AM.AMWrkMatl)">
            <summary>
            What base quantity has been used within the same wizard process
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WizFilter">
            <summary>
            A DAC that contains the setting that specifies whether the wizard process
            needs to lookup and exclude any unreleased material quantity from the suggested release quantity.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WizFilter.ExcludeUnreleasedBatchQty">
            <summary>
            A Boolean value that indicates whether the wizard process needs to lookup and exclude
            any unreleased material quantity from the suggested release quantity.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MoveEntryBase`1">
            <summary>
            Base class for related move transactions
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MoveEntryBase`1.ProductionAttributes">
            <summary>
            Button for production attributes panel
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.productionAttributes(PX.Data.PXAdapter)">
            <summary>
            Button delegate for production attributes panel
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.GetProductionAttributeDictionary(PX.Objects.AM.AMMTran)">
            <summary>
            Query all production attributes related to transaction
            </summary>
            <param name="row">transaction row</param>
            <returns>query results in a dictionary with a key by Label</returns>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.InsertAMMTranAttribute(PX.Objects.AM.AMProdAttribute,PX.Objects.AM.AMMTran)">
            <summary>
            Insert given production attribute into the cache as a tran attribute
            </summary>
            <param name="prodAttribute">Production attribute row</param>
            <param name="row">Related parent transaction row</param>
            <returns>Inserted transaction attribute</returns>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.DeleteAMMTranAttribute(PX.Data.PXCache,PX.Objects.AM.AMMTranAttribute)">
            <summary>
            Delete the given transaction attribute
            </summary>
            <param name="cache">cache of AMMTranAttribute</param>
            <param name="row">AMMTranAttribute to delete</param>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.SyncTransactionAttributes(PX.Objects.AM.AMMTran)">
            <summary>
            Sync the given transaction row's production transaction attributes. Add/Update/Delete tran attributes based on changed values
            </summary>
            <param name="row">Parent transaction row</param>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.GetTransactionAttributeDictionary(PX.Objects.AM.AMMTran)">
            <summary>
            Get the existing transaction attributes in the form of a dictionary by label key
            </summary>
            <param name="row">Parent transaction row</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.GetTransactionAttributeDictionary(PX.Objects.AM.AMMTran,System.Boolean)">
            <summary>
            Get the existing transaction attributes in the form of a dictionary by label key
            </summary>
            <param name="row">Parent transaction row</param>
            <param name="cachedOnly">only return cached rows (no select on AMMTranAttributes)</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.BurnAttributeLineNbr(PX.Objects.AM.AMMTran)">
            <summary>
            When deleting then inserting, the line counters are not getting set correctly on the insert. 
            Use this to increase the line counter so the inserts work correctly
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.CheckUnderIssueMaterial(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Checks for Under Issue of Material for a given move entry.
            If under issue found related to check level. cache received raised exception handling.
            </summary>
            <param name="sender"></param>
            <param name="row"></param>
            <returns>True when raiseexceptionhandling is called on cache AS AN ERROR</returns>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.CheckMoveOnCompletedOperation(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Checks for Operation is complete and handle exceptions as needed.
            If condition found related to check level. cache received raised exception handling.
            </summary>
            <param name="sender"></param>
            <param name="row"></param>
            <returns>True when raiseexceptionhandling is called on cache AS AN ERROR</returns>
        </member>
        <member name="M:PX.Objects.AM.MoveEntryBase`1.CheckOverCompletedOrders(PX.Data.PXCache,PX.Objects.AM.AMMTran)">
            <summary>
            Checks for transaction attempt to over complete the order at the last operation
            If condition found related to check level. cache received raised exception handling.
            </summary>
            <param name="sender"></param>
            <param name="row"></param>
            <returns>True when raiseexceptionhandling is called on cache AS AN ERROR</returns>
        </member>
        <member name="T:PX.Objects.AM.MoveOperationQtyBuilder">
            <summary>
            Calculate production move operation quantity for all transaction lines and all related operations
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MoveOperationQtyBuilder.MoveTranOperationTotals">
            <summary>
            For each move transaction line, the set of operations and their calculated move quantities
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.ConstructSingleBuilder(PX.Data.PXGraph,PX.Objects.AM.AMMTran)">
            <summary>
            Construct the builder based on a single transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.Construct(PX.Data.PXGraph,PX.Data.PXResultset{PX.Objects.AM.AMMTran})">
            <summary>
            Construct the builder based on a set of transactions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.ConstructPostOperUpdate(PX.Data.PXGraph,PX.Data.PXResultset{PX.Objects.AM.AMMTran})">
            <summary>
            Construct the builder based on a set of transactions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.Construct(PX.Data.PXGraph,PX.Data.PXResultset{PX.Objects.AM.AMMTran},System.Boolean)">
            <summary>
            Construct the builder based on a set of transactions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.#ctor(System.Collections.Generic.List{PX.Data.PXResult{PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMOrderType,PX.Objects.AM.AMProdItem,PX.Objects.AM.AMProdOper}},System.Collections.Generic.List{PX.Data.PXResult{PX.Objects.AM.AMProdOper,PX.Objects.AM.AMWC}},System.Boolean)">
            <summary>
            Class constructor.
            To avoid invalid results, make sure allOperations uses a set of COPIED objects and not the original reference to the operations.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.ProcessAllTranOperations(System.Boolean)">
            <summary>
            Process move qty results
            </summary>
            <param name="postOperUpdate">If builder called post processing we do not want to re-add the moving qty to operation totals...</param>
        </member>
        <member name="M:PX.Objects.AM.MoveOperationQtyBuilder.PostProcessAllTranRows">
            <summary>
            Post process for looking all total calculated numbers
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MoveOperationQtyTotal">
            <summary>
            Production Operation Totals Container
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.PriorControlPointOperationID">
            <summary>
            Control point before the current operation
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.NextControlPointOperationID">
            <summary>
            Control point after the current operation
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.ProjectedTotalBaseQty">
            <summary>
            Calculated total base quantity
            (NOT USED)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.TransactionTotalMoveBaseQty">
            <summary>
            Total transaction base quantity (indirect quantity from previous operations)
            Used to drive supporting transactions such as backflush material, overhead, etc.
            The value here might be less on previous operations if previous operations have their own transactions previously released.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.TransactionTotalScrapBaseQty">
            <summary>
            Total transaction scrapped base quantity 
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.PreTransactionTotalBaseQty">
            <summary>
            Total BEFORE processing the current move transaction
            (NOT USED)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.PreviousMoveTotalBaseQty">
            <summary>
            Previously processed base quantity
            (updated as the transaction is processed)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotal.CurrentMoveBaseQty">
            <summary>
            Currently move base qty
            (updated as the transaction is processed)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MoveOperationQtyTotals">
            <summary>
            Container for a transaction and related operations as they would exist for the currently processing transaction
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MoveOperationQtyTotals.OperationTotalsList">
            <summary>
            OperationTotals in the form of a List
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPBomCache">
            <summary>
            Bill of Material data lookup cache for use in <see cref="T:PX.Objects.AM.MRPEngine"/> process and the planned scheduling process of <see cref="T:PX.Objects.AM.SchedulePlanBomCopy"/>.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPBucketInq">
            <summary>
            Graph for Manufacturing MRP Requirements By Item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPBucketInq.EmptyFilter">
            <summary>
            Is the filter incomplete or empty (unable to process detail data)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPBucketInq.GetBuckets">
            <summary>
            Make the buckets related to from/to dates including past due
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.MRPBucketInq.GetEndDate(System.Nullable{System.DateTime},PX.Objects.AM.AMMRPBucketDetail)">
            <summary>
            Calculate the end date from a given start date and interval bucket record
            </summary>
            <param name="startDate"></param>
            <param name="bucket"></param>
            <returns>Calculated end date based on given interval</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPBucketInq.GetEndDate(System.Nullable{System.DateTime},PX.Objects.AM.AMMRPBucketDetail,System.Boolean)">
            <summary>
            Calculate the end date from a given start date and interval bucket record
            </summary>
            <param name="startDate"></param>
            <param name="bucket"></param>
            <param name="reverse">Is the calculation processing in reverse (days past)</param>
            <returns>Calculated end date based on given interval</returns>
        </member>
        <member name="T:PX.Objects.AM.BucketFilter">
            <summary>
            Filter dac
            </summary>
        </member>
        <member name="P:PX.Objects.AM.BucketFilter.ReplenishmentSource">
            <summary>
            Replenishment source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPBucketMaint">
            <summary>
            Graph for MRP Bucket Maintenance
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPDetail">
            <summary>
            Manufacturing Inventory Planning Detail Inquiry graph
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPDetail.Redirect(PX.Objects.AM.InvLookup)">
            <summary>
            Redirect to MRPDetail graph for given filter
            </summary>
            <param name="filter"></param>
        </member>
        <member name="P:PX.Objects.AM.MRPDetail.EmptyFilter">
            <summary>
            Is the filter incomplete or empty (unable to process detail data)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.InvLookup">
            <summary>
            Filter dac
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.InventoryID">
            <summary>
            Inventory ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.SubItemID">
            <summary>
            Sub item ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.SiteID">
            <summary>
            Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.QtyOnHand">
            <summary>
            Qty on hand
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.UOM">
            <summary>
            U o m
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.SafetyStock">
            <summary>
            Safety stock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.MinOrderQty">
            <summary>
            Min order qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.MaxOrderQty">
            <summary>
            Max order qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.LotQty">
            <summary>
            Lot qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.ReplenishmentSource">
            <summary>
            Replenishment source
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.ReplenishmentSiteID">
            <summary>
            Source Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.TransferLeadTime">
            <summary>
            Transfer lead time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.LeadTime">
            <summary>
            Lead time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.InvLookup.AMGroupWindow">
            <summary>
            Days of Supply filter field
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPDisplay">
            <summary>
            Results of running MRP Regeneration. Displays planned recommendations
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.ProcessCompletedOkMsg(System.String,System.String)">
            <summary>
            Use to display a pop-up message to the user with an OK button
            </summary>
            <param name="header">Message box header</param>
            <param name="message">Message</param>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.GetWindowDays(System.Int32,System.Int32)">
            <summary>
            Lookup the window date in item warehouse/item order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.DeleteProcessRecords">
            <summary>
            Delete old selected records if exist
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.GeneratePurchaseOrder">
            <summary>
            Generate the Purchase Order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.ProcessPurchaseOrder(System.Collections.Generic.List{PX.Objects.AM.AMOrderCrossRef},PX.Objects.AM.PlanPurchaseFilter,PX.Objects.CS.Numbering)">
            <summary>
            Create a single Purchase Order for each item in the passed list
            </summary>
            <param name="list">List of order cross ref records</param>
            <param name="filter">Current Plan Purchase filter</param>
            <param name="numbering">Current Purchase Order Numbering</param>
            <returns>PO Number Created</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.CreatePurchaseOrder(System.Collections.Generic.List{PX.Objects.AM.AMOrderCrossRef},PX.Objects.AM.PlanPurchaseFilter,PX.Objects.CS.Numbering)">
            <summary>
            Create (persist) a new Purchase order
            </summary>
            <param name="list">List of order cross ref records</param>
            <param name="filter">PlanPurchaseFilter used for order creation</param>
            <param name="numbering">Create purchase order Numbering </param>
            <returns>true when successful in creation, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.GenerateTransferOrder">
            <summary>
            Create the Transfer Order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.ProcessTransferOrder(System.Collections.Generic.List{PX.Objects.AM.AMOrderCrossRef},PX.Objects.AM.PlanTransferFilter,PX.Objects.CS.Numbering)">
            <summary>
            Create a single Transfer Order for each item in the passed list
            </summary>
            <param name="list">List of order cross ref records</param>
            <param name="filter">Current Plan Transfer </param>
            <param name="numbering">Current Transfer Order Numbering</param>
            <returns>SO Number Created</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPDisplay.CreateTransferOrder(System.Collections.Generic.List{PX.Objects.AM.AMOrderCrossRef},PX.Objects.AM.PlanTransferFilter,PX.Objects.CS.Numbering)">
            <summary>
            Create (persist) a new Transfer order
            </summary>
            <param name="list">List of order cross ref records</param>
            <param name="filter">PlanPurchaseFilter used for order creation</param>
            <param name="numbering">Create transfer order Numbering </param>
            <returns>true when successful in creation, false otherwise</returns>
        </member>
        <member name="T:PX.Objects.AM.PlanTransferFilter">
            <summary>
            The settings of the Create Transfer Order dialog box on the Inventory Planning Display (AM400000) form,
            which corresponds to the <see cref="T:PX.Objects.AM.MRPDisplay"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PlanPurchaseFilter">
            <summary>
            The settings of the Create Purchase Order dialog box on the Inventory Planning Display (AM400000),
            which corresponds to the <see cref="T:PX.Objects.AM.MRPDisplay"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PlanManufactureFilter">
            <summary>
            The settings of the Create Production Order dialog box on the Inventory Planning Display (AM400000),
            which corresponds to the <see cref="T:PX.Objects.AM.MRPDisplay"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PlanKitFilter">
            <summary>
            The plan kit assembly filter.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPDisplayFilters">
            <summary>
            The filter for the Inventory Planning Display (AM400000) form, which corresponds to the <see cref="T:PX.Objects.AM.MRPDisplay"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngine">
            <summary>
            MRP Regeneration process engine
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MRPEngine.DebugMessages">
            <summary>
            To record additional messages into the MRP audit results.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngine.UseFixLeadTime">
            <summary>
            Should the scheduling process use fixed manufacturing lead times.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MRPEngine.ReuseScheduleNumbering">
            <summary>
            When scheduling orders do we want to lookup and reuse the planning numbers used during the last run?
            Default = True
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MRPEngine.LookupBomsByDate">
            <summary>
            To correctly get a BOM revision, are we looking at BOM dates?
            this in its current implementation will run sub query for all items for all bom lookups (performance issue)
            Default = True
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MRPEngine.PersistPlannedOrderSchedule">
            <summary>
            Will the scheduled results of planned orders be saved to the database when true.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine._(PX.Data.Events.CacheAttached{PX.Objects.PO.POVendorInventory.isDefault})">
            <summary>
            Removing PODefaultVendorAttribute to avoid unnecessary sub-quires during MRP processing
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.Run(PX.Data.PXGraph)">
            <summary>
            Call MRP Engine using the calling graph allowing the calling graph to update when the long operation is complete
            </summary>
            <param name="graph"></param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.CheckPreferences">
            <summary>
            Check for preferences/configuration issues related to running MRP.
            Any issues throw an exception
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.MrpExceptionsAll">
            <summary>
            Writes all MRP Exception messages
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.LoadMrpPlan">
            <summary>
            Bring all MRP Info into a single table (AMRPPlan)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.RequirementsByLowLevel(PX.Objects.AM.MRPProcessCache)">
            <summary>
            Call requirements by each low level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.PersistFirstPassRecsCleanup(System.Int32)">
            <summary>
            Run after PersistFirstPassRecs to cleanup cached AMRPDetailFP
            </summary>
            <param name="lowLevel">The current low level being processed</param>
        </member>
        <member name="T:PX.Objects.AM.MRPEngine.FirstPassSupplyCollection">
            <summary>
            Storage for first pass supply.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MRPEngine.FirstPassSupplyCollection._supplyDictionary">
            <summary>
            Storage by SiteID, InventoryID, SubitemID (if feature enabled)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.AdjustFirstPassDemandQtyByWarehouse(System.Int32,PX.Objects.IN.INSite,PX.Objects.AM.MRPEngine.FirstPassSupplyCollection,System.Collections.Generic.IEnumerable{PX.Objects.AM.AMRPDetailFP})">
            <summary>
            Adjust MRP data with matching supply and demand qty over dates.
            </summary>
            <param name="lowLevel">Current low level being processed.</param>
            <param name="site">Not used and will be removed in a future release.</param>
            <param name="supplyCollection">Supply data to match with demand.</param>
            <param name="mrpDetailFPDemands">Demand data to match to supply.</param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.GetMrpDetailFPSupplyByWarehouse(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Uses SQL Index: AMRPDetailFP_IX_MRPEngine_GetMrpDetailFPSupplyByWarehouse
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.GetNextPlanOrderNumber(PX.Data.PXCache,System.Object)">
            <summary>
            Get the next plan order type numbering value based on the order type's prod numbering ID.
            Each call will use up the next number in the numbering sequence.
            </summary>
            <param name="cache">cache related to dataRow</param>
            <param name="dataRow">dataRow receiving the next number</param>
            <returns>Calculated next number</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.GetPurchaseActionDate(PX.Objects.AM.CalendarHelper,System.DateTime,System.Nullable{System.Int32})">
            <summary>
            Calculate the purchase action date
            </summary>
            <param name="purchaseCalendar"></param>
            <param name="dateTime">Plan Date</param>
            <param name="leadTime">Purchase Lead Time</param>
            <returns>MRP Action Date</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.FirstPass(PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Create all of the first pass records
            </summary>
            <param name="mrpItemDictionary"></param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.InsertMRPInventory(PX.Objects.AM.AMRPDetailFP,PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Insert related MRP Inventory record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.InsertMRPInventory(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Insert related MRP Inventory record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.TryProcessLowLevel(System.Int32@)">
            <summary>
            Rebuild the low level codes
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.LevelHasItems(System.Int32)">
            <summary>
            Determine if the given level has low level items
            </summary>
            <param name="level">processing low level</param>
            <returns>True when an item with the given level is found</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.ClearAllMRPData(System.Boolean)">
            <summary>
            Delete the old MRP data using PXDatabase.Delete
            </summary>
            <param name="includingAuditRecords">Should the AMRPAuditTable data be deleted (when true)</param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngine.ClearUnusedPlanDetail">
            <summary>
            As we are trying to reuse plan order numbers we need to delete any unused plan records.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngine.AMRPRunTime">
            <summary>
            Used to control the line counters of mrp records that have no direct parent and where the line counters reset for each run
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass">
            <summary>
            MRP First Pass Process. 
            Computes high-level requirements.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadAll(PX.Objects.AM.MRPEngine,PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Static call to run all Load methods related to MRP first pass process
            </summary>
            <param name="mrpGraph">calling mrp graph</param>
            <param name="mrpItemDictionary">mrp inventory cache</param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadAll(PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Run all Load methods related to MRP first pass process
            </summary>
            <param name="mrpItemDictionary">mrp inventory cache</param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.InsertDetailFP(PX.Objects.AM.AMRPDetailFP)">
            <summary>
            Insert the given Detail FP record into the cache
            </summary>
            <param name="row">row to insert</param>
            <returns>The inserted row</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.InsertDetailPlan(PX.Objects.AM.AMRPDetailPlan)">
            <summary>
            Insert the given Detail Plan record into the cache
            </summary>
            <param name="row">row to insert</param>
            <returns>The inserted row</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlan">
            <summary>
            Load INItemPlan values into AMRPDetailPlan Table
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadConsolidatedItemPlan">
            <summary>
            Load INItemPlan values into AMRPDetailPlan Table
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadInventory(PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Load initial inventory values into MRP (Excludes items not marked for MRP or status is inactive/marked for delete)
            </summary>
            <param name="mrpItemDictionary"></param>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.CreateSubitemInventory(PX.Objects.IN.INItemSite,System.Int32)">
            <summary>
            Generate the related AMRPDetailFP safety stock records related to the given item warehouse record
            </summary>
            <param name="inItemSite">item warehouse record</param>
            <returns>List of subitem safety stock records</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.CreateSubitemInventory(PX.Objects.IN.INItemSite,System.Int32,PX.Objects.IN.INSite)">
            <summary>
            Generate the related AMRPDetailFP safety stock records related to the given item warehouse record
            </summary>
            <param name="inItemSite">Item warehouse record</param>
            <param name="lowLevel">Lowest bom level value</param>
            <param name="inSite">Warehouse record</param>
            <returns>List of subitem safety stock records</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadInventoryStockAdjustments(PX.Objects.AM.MRPProcessCache.MrpItemDictionary)">
            <summary>
            Load inventory stock adjustments
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.AddTransferSupplyFromTransferDemand(PX.Objects.AM.AMRPDetailPlan,System.Nullable{System.Int32},System.Nullable{System.DateTime})">
            <summary>
            Inserts a transfer supply record related to the transfer demand record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadMasterProductionSchedule">
            <summary>
            Load MPS values into MRP
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.MasterProductionScheduleQtyConsumed(PX.Objects.AM.AMMPS,System.DateTime)">
            <summary>
            Get the matching production quantity against the given MPS and date range
            </summary>
            <param name="mps">MPS to get the consumed qty against</param>
            <param name="startDate">date to start considering production orders</param>
            <returns>total base quantity of productions orders found</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadForecasts">
            <summary>
            Load Forecast values into MRP
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.LoadBlanketSalesOrders">
            <summary>
            Load Blanket SalesOrders in to MRP
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.ForecastQtyConsumed(PX.Objects.AM.AMForecast,System.DateTime,System.DateTime)">
            <summary>
            Total the sales quantity for the forecast item and given date range.
            For use with Dependent forecasts.
            </summary>
            <param name="forecast"></param>
            <param name="beginDate"></param>
            <param name="endDate"></param>
            <returns>total base order quantity not less than zero</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPEngineFirstPass.ForecastBlanketOrderQtyConsumed(PX.Objects.AM.AMForecast,System.DateTime,System.DateTime)">
            <summary>
            Total the BL sales quantity for the forecast item and given date range.
            For use with Dependent forecasts.
            </summary>
            <param name="forecast"></param>
            <param name="beginDate"></param>
            <param name="endDate"></param>
            <returns>total open order quantity not less than zero</returns>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.SimpleSalesLine">
            <summary>
            Created to avoid numerous sub queries
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection">
            <summary>
            Projection for query to LoadINItemPlan
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.itemClassID">
            <summary>
            InventoryItem.ItemClassID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ItemClassID">
            <summary>
            InventoryItem.ItemClassID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMLowLevel">
            <summary>
            InventoryItemExt.AMLowLevel
            Non UI field - keeps items lowest bom level value used in calculations
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMLowLevel">
            <summary>
            InventoryItemExt.AMLowLevel
            Non UI field - keeps items lowest bom level value used in calculations
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.entityType">
            <summary>
            Note.EntityType
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.EntityType">
            <summary>
            Note.EntityType
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMMRPPO">
            <summary>
            INSiteExt.AMMRPPO
            MRP Include Purchase Orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMMRPPO">
            <summary>
            INSiteExt.AMMRPPO
            MRP Include Purchase Orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMMRPProd">
            <summary>
            INSiteExt.AMMRPProd
            MRP Include Production Orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMMRPProd">
            <summary>
            INSiteExt.AMMRPProd
            MRP Include Production Orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMMRPShip">
            <summary>
            INSiteExt.AMMRPShip
            MRP Include Shipments
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMMRPShip">
            <summary>
            INSiteExt.AMMRPShip
            MRP Include Shipments
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMMRPSO">
            <summary>
            INSiteExt.AMMRPSO
            MRP Include Sales Orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMMRPSO">
            <summary>
            INSiteExt.AMMRPSO
            MRP Include Sales Orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMMRPFlagSite">
            <summary>
            INSiteExt.aMMRPFlag
            MRP Include Inventory On Hand (Main flag for warehouse with MRP)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMMRPFlagSite">
            <summary>
            INSiteExt.AMMRPFlag
            MRP Include Inventory On Hand (Main flag for warehouse with MRP)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.aMMRPFlag">
            <summary>
            INLocationExt.AMMRPFlag
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.AMMRPFlag">
            <summary>
            INLocationExt.AMMRPFlag
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.isSupply">
            <summary>
            INPlanType.AsSupply
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.IsSupply">
            <summary>
            INPlanType.AsSupply
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.prodItemInventoryID">
            <summary>
            AMMrpProdMatl.ProdItemInventoryID = AMProdItem.inventoryID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdItemInventoryID">
            <summary>
            AMMrpProdMatl.ProdItemInventoryID = AMProdItem.inventoryID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.prodItemsubItemID">
            <summary>
            AMMrpProdMatl.prodItemsubItemID = AMProdItem.subItemID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdItemSubItemID">
            <summary>
            AMMrpProdMatl.prodItemsubItemID = AMProdItem.subItemID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.parentExcludeFromMRP">
            <summary>
            AMMrpProdMatl.excludeFromMRP = AMProdItem.excludeFromMRP
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ParentExcludeFromMRP">
            <summary>
            AMMrpProdMatl.excludeFromMRP = AMProdItem.excludeFromMRP
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdItemOrderType">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.OrderType"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdItemProdOrdID">
            <inheritdoc cref="P:PX.Objects.AM.AMProdItem.ProdOrdID"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdMatlOrderType">
            <inheritdoc cref="P:PX.Objects.AM.AMMrpProdMatl.OrderType"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdMatlProdOrdID">
            <inheritdoc cref="P:PX.Objects.AM.AMMrpProdMatl.ProdOrdID"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdMatlOperationCD">
            <inheritdoc cref="P:PX.Objects.AM.AMMrpProdMatl.OperationCD"/>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.excludeFromMRP">
            <summary>
            AMProdItem.ExcludeFromMRP
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ExcludeFromMRP">
            <summary>
            AMProdItem.ExcludeFromMRP
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.statusID">
            <summary>
            AMProdItem.StatusID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.StatusID">
            <summary>
            AMProdItem.StatusID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.prodItemCompleted">
            <summary>
            AMProdItem.completed
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.ProdItemCompleted">
            <summary>
            AMProdItem.Completed
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.destinationSiteID">
            <summary>
            SimpleOrder.destinationSiteID = SOOrder.destinationSiteID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.DestinationSiteID">
            <summary>
            SimpleOrder.destinationSiteID = SOOrder.destinationSiteID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.iNDocType">
            <summary>
            SimpleOrder.iNDocType = SOOrderType.iNDocType
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.INDocType">
            <summary>
            SimpleOrder.iNDocType = SOOrderType.iNDocType
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.SOOrderType">
            <inheritdoc cref="P:PX.Objects.AM.MRPEngineFirstPass.SimpleOrder.OrderType"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.SOOrderNbr">
            <inheritdoc cref="P:PX.Objects.AM.MRPEngineFirstPass.SimpleOrder.OrderNbr"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.RequestDate">
            <summary>
            SOLine.RequestDate
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.BranchID">
            <summary>
            INSite.BranchID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.StkItem">
            <summary>
            When set to <c>true</c>, indicates that this item is a Stock Item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.POOrderType">
            <inheritdoc cref="P:PX.Objects.PO.POOrder.OrderType"/>
        </member>
        <member name="P:PX.Objects.AM.MRPEngineFirstPass.LoadINItemPlanProjection.POOrderNbr">
            <inheritdoc cref="P:PX.Objects.PO.POOrder.OrderNbr"/>
        </member>
        <member name="T:PX.Objects.AM.MRPEngineFirstPass.SimpleBlanketLineSplit">
            <summary>
            Projection for query to Simple Blanket Line Split
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPExcept">
            <summary>
            MRP Exceptions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache">
            <summary>
            Cache inventory and related values used throughout the MRP process
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.BuildItemSiteReplenishmentSourceDictionary(PX.Objects.AM.MRPEngine,PX.Objects.AM.MRPProcessCache.MRPInventory,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Only necessary when sub item is enabled. load sub item level replenishment settings from POVendorInventory and INItemSiteReplenishment
            </summary>
            <param name="mrpEngine">Calling MRP Graph</param>
            <param name="itemSite">base projection for inventory and item warehouse</param>
            <param name="defaultSubItemID">Sub item ID already used to get default POVendorInventory record to exclude in next POVendorInventory records lookup</param>
            <param name="useSafetyStock">Indicator to use safety stock or reorder point as the Manufacturing safety stock value</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.UseVendorInventory(PX.Objects.PO.POVendorInventory,PX.Objects.PO.POVendorInventory,System.Boolean)">
            <summary>
            Determines which POVendorInventory record to use
            </summary>
            <param name="defaultVendorInventory">The item default vendor record</param>
            <param name="siteVendorInventory">item warehouse referenced vendor inventory record</param>
            <param name="sitePreferredVendorOverride">Is item warehouse record have override preferred vendor</param>
            <returns>POVendorInventory record to use for MRP Processing for the given item warehouse</returns>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.BuildMrpItemDictionary(PX.Objects.AM.MRPEngine,System.Boolean)">
            <summary>
            Create a dictionary of all item and itemsite values cached for use during the MRP process and reduce nested/repeat queries
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.LoadItemSiteDetails(PX.Objects.AM.MRPEngine,PX.Objects.AM.MRPProcessCache.MrpItemDictionary@,PX.Objects.AM.MRPProcessCache.InventoryCache@,System.Boolean)">
            <summary>
            Load items with item site details
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.LoadItemWithoutItemSiteDetails(PX.Objects.AM.MRPEngine,PX.Objects.AM.MRPProcessCache.MrpItemDictionary@,PX.Objects.AM.MRPProcessCache.InventoryCache@,System.Boolean)">
            <summary>
            Load items without item site details
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.SetInventoryCache(PX.Objects.AM.MRPProcessCache.MRPInventory,PX.Objects.AM.MRPProcessCache.InventoryCache)">
            <summary>
            Map InventoryItem to InventoryCache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.SetInventoryCache(System.Collections.Generic.Dictionary{System.Int32,PX.Objects.AM.MRPProcessCache.ReplenishmentSourceCache},PX.Objects.AM.MRPProcessCache.InventoryCache)">
            <summary>
            Map ReplenishmentSourceCache to InventoryCache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.SetItemSiteCache(PX.Objects.AM.MRPProcessCache.MRPInventory,PX.Objects.AM.MRPProcessCache.ItemSiteCache)">
            <summary>
            Map INItemSite to ItemSiteCache
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.InventoryCacheBase.InventoryID">
            <summary>
            KEY
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.InventoryCache.HasTransferSite">
            <summary>
            When there is an item warehouse record for the item which is marked as transfer.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.ItemSiteCache.SiteID">
            <summary>
            KEY
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.ItemSiteCache.UseSafetyStock">
            <summary>
            Indicates if use stock level is for safetystock (true) or reorderpoint (false)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.ItemSiteCache.SiteSequence">
            <summary>
            If an item is transfered between warehouses, we need to indicate the best sequence to process such items for best results in MRP Regenerate process.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MRPProcessCache.MrpItemDictionary.HasTransferSites">
            <summary>
            When there is at least 1 item with a warehouse record setup for transferring from another warehouse.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MRPProcessCache.LoadPurchaseCalendar(PX.Objects.AM.MRPEngine)">
            <summary>
            Determine/Load the purchase calendar (Purchase Calendar is Optional)
            </summary>
            <param name="mrpEngineGraph">Calling MRP Engine Graph</param>
            <returns>True if the purchase calendar was loaded</returns>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.InventoryID">
            <summary>
            INItemSite.inventoryID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SiteID">
            <summary>
            INItemSite.siteID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.PreferredVendorOverride">
            <summary>
            INItemSite.preferredVendorOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SitePreferredVendorID">
            <summary>
            INItemSite.preferredVendorID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SitePreferredVendorLocationID">
            <summary>
            INItemSite.preferredVendorLocationID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.ReplenishmentSource">
            <summary>
            INItemSite.replenishmentSource
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.ReplenishmentClassID">
            <summary>
            INItemSite.replenishmentClassID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.ReplenishmentSourceSiteID">
            <summary>
            INItemSite.replenishmentSourceSiteID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.ProductManagerID">
            <summary>
            INItemSite.productManagerID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SafetyStock">
            <summary>
            INItemSite.safetyStock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SafetyStockOverride">
            <summary>
            INItemSite.safetyStockOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.MinQty">
            <summary>
            INItemSite.minQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.MinQtyOverride">
            <summary>
            INItemSite.minQtyOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SubItemOverride">
            <summary>
            INItemSite.subItemOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SitePlanningMethod">
            <summary>
            INItemSite.planningMethod
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SiteAMBOMID">
            <summary>
            INItemSiteExt.aMBOMID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SiteAMPlanningBOMID">
            <summary>
            INItemSiteExt.aMPlanningBOMID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.siteAMMFGLeadTime">
            <summary>
            INItemSiteExt.AMMFGLeadTime
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SiteAMLotSize">
            <summary>
            INItemSiteExt.AMLotSize
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.siteAMMaxOrdQty">
            <summary>
            INItemSiteExt.AMMaxOrdQty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.siteAMMinOrdQty">
            <summary>
            INItemSiteExt.AMMinOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.SiteAMGroupWindow">
            <summary>
            InventoryItemExt.AMGroupWindow
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.AMTransferLeadTime">
            <summary>
            INItemSiteExt.AMTransferLeadTime
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.VendorActive">
            <summary>
            POVendorInventory.active
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.VendorSubItemID">
            <summary>
            POVendorInventory.subItemID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.VendorVLeadTime">
            <summary>
            POVendorInventory.vLeadTime
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.AddLeadTimeDays">
            <summary>
            POVendorInventory.addLeadTimeDays
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.LotSize">
            <summary>
            POVendorInventory.lotSize
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.MinOrdQty">
            <summary>
            POVendorInventory.minOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.MaxOrdQty">
            <summary>
            POVendorInventory.maxOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.PurchaseUnit">
            <summary>
            POVendorInventory.PurchaseUnit
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.INItemSiteProjection.CuryID">
            <summary>
            INItemSiteExt.aMPlanningBOMID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.InventoryProjection.InventoryID">
            <summary>
            InventoryItem.InventoryID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteID">
            <summary>
            INItemSite.SiteID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.PreferredVendorOverride">
            <summary>
            INItemSite.PreferredVendorOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SitePreferredVendorID">
            <summary>
            INItemSite.PreferredVendorID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SitePreferredVendorLocationID">
            <summary>
            INItemSite.PreferredVendorLocationID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ReplenishmentSource">
            <summary>
            INItemSite.ReplenishmentSource
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ReplenishmentClassID">
            <summary>
            INItemSite.ReplenishmentClassID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ProductManagerID">
            <summary>
            INItemSite.ProductManagerID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SafetyStock">
            <summary>
            INItemSite.SafetyStock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SafetyStockOverride">
            <summary>
            INItemSite.SafetyStockOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.MinQty">
            <summary>
            INItemSite.MinQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.MinQtyOverride">
            <summary>
            INItemSite.MinQtyOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SubItemOverride">
            <summary>
            INItemSite.SubItemOverride
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ReplenishmentSourceSiteID">
            <summary>
            INItemSite.ReplenishmentSourceSiteID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SitePlanningMethod">
            <summary>
            INItemSite.PlanningMethod
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteAMPlanningBOMID">
            <summary>
            INItemSiteExt.AMPlanningBOMID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteAMMFGLeadTime">
            <summary>
            INItemSiteExt.AMMFGLeadTime
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteAMLotSize">
            <summary>
            INItemSiteExt.AMLotSize
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteAMMaxOrdQty">
            <summary>
            INItemSiteExt.AMMaxOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteAMMinOrdQty">
            <summary>
            INItemSiteExt.AMMinOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.SiteAMGroupWindow">
            <summary>
            INItemSiteExt.AMGroupWindow
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.AMTransferLeadTime">
            <summary>
            INItemSiteExt.AMTransferLeadTime
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.InventoryCD">
            <summary>
            InventoryItem.inventoryCD
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.StkItem">
            <summary>
            InventoryItem.stkItem
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemPreferredVendorID">
            <summary>
            InventoryItemCurySettings.preferredVendorID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemPreferredVendorLocationID">
            <summary>
            InventoryItemCurySettings.preferredVendorLocationID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.DefaultSubItemID">
            <summary>
            InventoryItem.defaultSubItemID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.BaseUnit">
            <summary>
            InventoryItem.baseUnit
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemStatus">
            <summary>
            InventoryItem.itemStatus
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.KitItem">
            <summary>
            InventoryItem.kitItem
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemClassID">
            <summary>
            InventoryItem.itemClassID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.PlanningMethod">
            <summary>
            InventoryItem.planningMethod
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemAMBOMID">
            <summary>
            InventoryItemExt.aMBOMID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemAMPlanningBOMID">
            <summary>
            InventoryItemExt.aMPlanningBOMID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.AMLowLevel">
            <summary>
            InventoryItemExt.aMLowLevel
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.ItemAMMFGLeadTime">
            <summary>
            InventoryItemExt.aMMFGLeadTime
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.MRPInventory.itemAMMinOrdQty">
            <summary>
            InventoryItemExt.aMMinOrdQty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.MRPInventory.itemAMMaxOrdQty">
            <summary>
            InventoryItemExt.aMMaxOrdQty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.MRPInventory.itemAMLotSize">
            <summary>
            InventoryItemExt.aMLotSize
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPProcessCache.MRPInventory.aMQtyRoundUp">
            <summary>
            InventoryItemExt.aMQtyRoundUp
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.AMReplenishmentSource">
            <summary>
            InventoryItemExt.ReplenishmentSource
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.AMGroupWindow">
            <summary>
            InventoryItemExt.AMGroupWindow
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.VendorActive">
            <summary>
            POVendorInventory.Active
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.VendorSubItemID">
            <summary>
            POVendorInventory.SubItemID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.VendorVLeadTime">
            <summary>
            POVendorInventory.VLeadTime
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.AddLeadTimeDays">
            <summary>
            POVendorInventory.AddLeadTimeDays
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.LotSize">
            <summary>
            POVendorInventory.LotSize
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.MinOrdQty">
            <summary>
            POVendorInventory.MinOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.MaxOrdQty">
            <summary>
            POVendorInventory.MaxOrdQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.PurchaseUnit">
            <summary>
            POVendorInventory.PurchaseUnit
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.BAccountID">
            <summary>
            VendorLocation.bAccountID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MRPProcessCache.MRPInventory.LocVLeadTime">
            <summary>
            VendorLocation.vLeadTime
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MRPSetupMaint">
            <summary>
            Graph for Manufacturing MRP Preferences
            </summary>
        </member>
        <member name="T:PX.Objects.AM.MultiLevelBomInq">
            <summary>
            Multi-level BOM report pre-process page
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MultiLevelBomInq.MultiLevelBomReportID">
            <summary>
            Multi-level BOM Engineering Report Number
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MultiLevelBomInq.MultiLevelBomCostedReportID">
            <summary>
            Multi-level BOM Costed Report Number
            </summary>
        </member>
        <member name="M:PX.Objects.AM.MultiLevelBomInq.RunReportNewWindow(System.String,System.String)">
            <summary>
            Open the multi-level bom engineering report into a new window
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMMultiLevelBomFilter">
            <summary>
            The filter for Multi Level BOM (AM413000) form, which corresponds to the <see cref="T:PX.Objects.AM.MultiLevelBomInq"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMultiLevelBomFilter.IgnoreReplenishmentSettings">
            <summary>
            When checked the exploded levels will ignore the items replenishment settings for manufactured items only. 
            If a default bom is found it will be used during processing
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMultiLevelBomFilter.RollCosts">
            <summary>
            When checked, will run Bom Cost Roll prior to loading the reports
            </summary>
        </member>
        <member name="P:PX.Objects.AM.AMMultiLevelBomFilter.UseCurrentInventoryCost">
            <summary>
            When checked, will use current Inventory Unit Cost
            </summary>
        </member>
        <member name="M:PX.Objects.AM.OperationHelper.GetOperationBefore``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Get the operation record before the given operation CD value
            </summary>
            <param name="operations">Set of operations from the same order</param>
            <param name="operationCD">Operation CD value to check</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.OperationHelper.GetOperationBefore``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Get the operation record before the given operation CD value
            </summary>
            <param name="operations">Set of operations from the same order</param>
            <param name="operationCD">Operation CD value to check</param>
            <param name="excludeOperationCD">(optional) excluding operation CD in case checking for a change in operation order and the changing operation exists in the collection of operations</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.OperationHelper.GetOperationAfter``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Get the operation record after the given operation CD value
            </summary>
            <param name="operations">Set of operations from the same order</param>
            <param name="operationCD">Operation CD value to check</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.OperationHelper.GetOperationAfter``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Get the operation record after the given operation CD value
            </summary>
            <param name="operations">Set of operations from the same order</param>
            <param name="operationCD">Operation CD value to check</param>
            <param name="excludeOperationCD">(optional) excluding operation CD in case checking for a change in operation order and the changing operation exists in the collection of operations</param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.PrimaryBomIDManager">
            <summary>
            Manage Update,Insert,Delete of Default and Planning BOM ids
            </summary>
        </member>
        <member name="F:PX.Objects.AM.PrimaryBomIDManager.BOMIDType">
            <summary>
            BOM Type to Manange. Set the correct type to get/set the correct BOMID while using BOM ID Manager
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PrimaryBomIDManager.BomIDType">
            <summary>
            BOM Type to Manange
            </summary>
        </member>
        <member name="F:PX.Objects.AM.PrimaryBomIDManager.BomIDType.Default">
            <summary>
            Default BOM ID Type (Default value)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.PrimaryBomIDManager.BomIDType.Planning">
            <summary>
            Planning BOM ID Type
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.IsPrimaryBomID(PX.Objects.AM.AMBomItem)">
            <summary>
            Is the given BOM Item setup as a default or planning BOM?
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.IsPrimaryBomID(System.String)">
            <summary>
            Is the given BOMID setup as a default or planning BOM?
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.GetBomID(PX.Objects.AM.CacheExtensions.InventoryItemExt,System.Boolean)">
            <summary>
            Get the correct BOM ID based on class requested bom type
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.GetBomID(PX.Objects.AM.CacheExtensions.INItemSiteExt,System.Boolean)">
            <summary>
            Get the correct BOM ID based on class requested bom type
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.GetBomID(PX.Objects.AM.AMSubItemDefault,System.Boolean)">
            <summary>
            Get the correct BOM ID based on class requested bom type
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.GetPrimaryAllLevels(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get an items primary bom looking at all primary BOM levels starting with the lowest/highest (SubItem, Warehouse, Item)
            </summary>
            <param name="inventoryID"></param>
            <param name="siteID"></param>
            <param name="subItemID"></param>
            <returns>BOM ID</returns>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.GetItemSubItemPrimary(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get the primary BOM for the given item/subitem combo
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.GetItemSiteSubItemPrimary(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Get the primary BOM for the given item/site/subitem combo
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.SetAllFirstOnlyPrimary(PX.Objects.AM.AMBomItem)">
            <summary>
            Set the BOM ID for item/warehouse/subitem if a current BOM ID does not exist (first for any one of the combinations)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.SetAllFirstOnlyPrimary(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Set the BOM ID for item/warehouse/subitem if a current BOM ID does not exist (first for any one of the combinations)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.SetPrimaryOverride(PX.Objects.AM.AMBomItem,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Override the BOM ID of an Inventory ID for any given BOM ID level (item/warehouse/subitem)
            </summary>
            <param name="bomItem">BOM record of the BOM ID to be set</param>
            <param name="overrideItem">Should we override the current bom ID at the Item level. If false the BOM ID is set at this level if one does not exist</param>
            <param name="overrideWarehouse">Should we override the current bom ID at the Warehouse level. If false the BOM ID is set at this level if one does not exist</param>
            <param name="overrideSubItem">Should we override the current bom ID at the SubItem level. If false the BOM ID is set at this level if one does not exist. Only valid with the Subitem feature enabled</param>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.SetPrimary(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Root group call to set BOM IDs for the different BOM ID levels (Item, Warehouse, SubItem)
            </summary>
            <param name="bomID">The BOM ID to be set</param>
            <param name="inventoryID">BOM Inventory ID</param>
            <param name="siteID">BOM Site ID</param>
            <param name="subItemID">BOM Sub Item ID</param>
            <param name="overrideItem">Should we override the current bom ID at the Item level. If false the BOM ID is set at this level if one does not exist</param>
            <param name="overrideWarehouse">Should we override the current bom ID at the Warehouse level. If false the BOM ID is set at this level if one does not exist</param>
            <param name="overrideSubItem">Should we override the current bom ID at the SubItem level. If false the BOM ID is set at this level if one does not exist. Only valid with the Subitem feature enabled</param>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.SetSubItemPrimary(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Maintains the AMSubItemDefault record
            </summary>
            <param name="bomID"></param>
            <param name="inventoryID"></param>
            <param name="siteID"></param>
            <param name="subItemID"></param>
            <param name="overrideItemDefault">Should the subitem be the new item default overriding any existing item/subitem default</param>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveSubItemsAsDefault(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Remove item default from other records as only 1 row should have the default set per item/subitem combo
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemovePrimary(PX.Objects.AM.AMBomItem)">
            <summary>
            Remove the BOM ID for all levels
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveItemPrimary(PX.Objects.AM.AMBomItem)">
            <summary>
            Remove the BOM ID at the item level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveItemPrimary(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Remove the BOM ID the item level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveItemPrimary(System.String,PX.Objects.IN.InventoryItem,System.Nullable{System.Int32})">
            <summary>
            Remove the BOM ID at the item level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveItemSitePrimary(PX.Objects.AM.AMBomItem)">
            <summary>
            Remove the BOM ID at the item warehouse level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveItemSitePrimary(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Remove the BOM ID at the item warehouse level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PrimaryBomIDManager.RemoveItemSitePrimary(System.String,PX.Objects.IN.INItemSite,System.Nullable{System.Int32})">
            <summary>
            Remove the BOM IDat the item warehouse level
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.ChangesRequireReschedule">
            <summary>
            Changes to the order indicate a need to reschedule the order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.GetFirstLastOperationIds(System.Collections.Generic.List{PX.Objects.AM.AMProdOper})">
            <summary>
            Find the first and last operation IDs from the given operations
            </summary>
            <param name="prodOpers"></param>
            <returns>Item1 = first opeartionId, Item2 = last opeartionId</returns>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.OperationChangeRequiresReschedule(PX.Objects.AM.AMProdOper,PX.Objects.AM.AMProdOper)">
            <summary>
            Operation row values changed that would impact the orders schedule
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProdDetail.InventoryAllocationDetailInqMatl">
            <summary>
            Material allocation details redirect (Action)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.inventoryAllocationDetailInqMatl(PX.Data.PXAdapter)">
            <summary>
            Material allocation details redirect (Delegate)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.OperationHasReleasedTransactions(PX.Objects.AM.AMProdOper)">
            <summary>
            Indicates true when the operation exists on a release manufacturing transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.OperationHasTransactions(PX.Objects.AM.AMProdOper)">
            <summary>
            Indicates true when the operation exists on a release manufacturing transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.RowIsEnableRestricted(System.Object)">
            <summary>
            Returns true if the given production record contains values that restricts the rows usage in terms of update/delete
            </summary>
            <param name="row">AMProd* record</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.CopyOverheadsFromWorkCenter(PX.Objects.AM.AMProdOper)">
            <summary>
            Copy work center level overheads to the production order operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.CopyOverheadsFromWorkCenter(PX.Data.PXGraph,PX.Objects.AM.AMProdOper)">
            <summary>
            Copy work center level overheads to the production order operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.DeleteWorkCenterRelatedOverhead(PX.Objects.AM.AMProdOper)">
            <summary>
            Remove work center level overheads from the production order operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdDetail.DeleteWorkCenterRelatedOverhead(PX.Data.PXGraph,PX.Objects.AM.AMProdOper)">
            <summary>
            Remove work center level overheads from the production order operation
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProdMaint">
            <summary>
            Production Order Maintenance Graph
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProdMaint.SalesLineUpdateFilter">
            <summary>
            Records changes to be made to the related sales order line
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProdMaint.LinkSOLineRecords">
            <summary>
            Prod. Order Link grid
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.QuickReleaseMaterial">
            <summary>
            Based on the current production order - launch the material wizard 2 screen to release material
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.ResetUpdateFilters">
            <summary>
            Resets the filter values back to their original settings
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.PersistSalesOrderLine(PX.Objects.AM.AMProdItem,PX.Objects.AM.ProdMaint.SalesLineUpdate)">
            <summary>
            Persists the sales order related updates (if any)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.IsReschedule(PX.Objects.AM.AMProdItem)">
            <summary>
            Is the production order queued for a reschedule
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.RemoveItemPlanReferences(PX.Objects.AM.AMProdItem)">
            <summary>
            Removes all production item plan references if one exits for the given production item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.RemoveParentItemPlanReference(PX.Objects.AM.AMProdItem)">
            <summary>
            Removes all Parent production item plan references if one exits for the given production item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.RemoveMatlItemPlanReference(PX.Objects.AM.AMProdItem)">
            <summary>
            Removes all Production Material item plan references if one exits for the given production item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.AMProdItemCopyBOMNotes">
            <summary>
            Copy the BOM header/item note to the current production item record
            </summary>
            <returns>True if note copy performed</returns>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.AMProdItemCopyBOMNotes(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the BOM header/item note to the given production item record
            </summary>
            <param name="amProdItem"></param>
            <returns>True if note copy performed</returns>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.AMProdItemCopyBOMNotes(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMBomItem)">
            <summary>
            Copy the given BOM header/item note to the given production item record
            </summary>
            <param name="amProdItem"></param>
            <param name="amBomItem"></param>
            <returns>True if note copy performed</returns>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.SetAccountDefaults(PX.Data.PXCache)">
            <summary>
            Set the AMProdItem account defaults based on the posting class configurations for the selected item/warehouse
            </summary>
            <param name="cache">AMProdItem cache to update</param>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.InsertCreatedOrderEventMessage(PX.Objects.AM.AMProdItem)">
            <summary>
            Insert a new production order <see cref="F:PX.Objects.AM.Attributes.ProductionEventType.OrderCreated"/> event
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.InsertCreatedOrderEventMessage(System.String,System.Nullable{System.Guid})">
            <summary>
            Insert a new production order <see cref="F:PX.Objects.AM.Attributes.ProductionEventType.OrderCreated"/> event based on the current order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.UpdatePlanProductionTotals">
            <summary>
            Update the AMProdTotal cache with the calculated planned cost values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.UpdatePlannedMaterialCosts(PX.Objects.AM.AMProdItem)">
            <summary>
            Update the production material planned unit cost values
            </summary>
            <param name="amProdItem">The production item record involded in the process</param>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.CopyBomToProductionDetails(PX.Objects.AM.AMProdItem)">
            <summary>
            Convert a BOM to the production order details
            </summary>
            <param name="amproditem">The production item record involved in the process</param>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.SyncSchdItem(PX.Objects.AM.AMProdItem)">
            <summary>
            Make sure any changes to prod item are in sync with the current schd item record(s)
            </summary>
            <param name="amProdItem"></param>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.RescheduleOrder(PX.Objects.AM.AMProdItem)">
            <summary>
            Reschedule the production order dates based on run times and shop floor calendar
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.RescheduleOrder(PX.Objects.AM.AMProdItem,System.Boolean)">
            <summary>
            Reschedule the production order dates based on run times and shop floor calendar
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.ConfigurationChangeRequired(System.Nullable{System.Int32},System.Nullable{System.Int32},PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Does the given parameters require the configuration to be rebuild/changed?
            </summary>
            <param name="inventoryID">Inventory ID to verify</param>
            <param name="siteID">Warehouse ID to verify</param>
            <param name="configuration">current related configuration</param>
            <returns>True if a change of configuration is required</returns>
        </member>
        <member name="M:PX.Objects.AM.ProdMaint.ConfigurationChangeRequired(System.String,PX.Objects.AM.AMConfigurationResults)">
            <summary>
            Does the given parameters require the configuration to be rebuild/changed?
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProdMaint.SalesLineUpdate">
            <summary>
            A DAC that holds changes to be made to the related sales order line from the Production Order (AM201500) form,
            which corresponds to the <see cref="T:PX.Objects.AM.ProdMaint"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProdMaint.SalesLineUpdate.UpdateSiteID">
            <summary>
            Indicates if the sales line warehouse should be updated when persisting the production order changes with the production warehouse
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProdMaint.LinkSalesLinesFilter">
            <summary>
            The settings of the SO Line Details dialog box on the Production Order Maintenance (AM201500) form,
            which corresponds to the <see cref="T:PX.Objects.AM.ProdMaint"/> graph.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProdMaintBase`1.UpdateMaterialAllocationOnForceComplete(PX.Objects.AM.AMProdItem,System.Boolean)">
            <summary>
            Update material status on force complete.
            </summary>
            <param name="prodItem"></param>
        </member>
        <member name="T:PX.Objects.AM.ProductionAttributesInq">
            <summary>
            Manufacture Production Attributes Inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionAttributesInq.RedirectGraph(PX.Objects.AM.AMProdItem)">
            <summary>
            Open this graph using pxredirectexception
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionAttributesInq.RedirectGraph(PX.Objects.AM.AMProdItem,PX.Data.PXRedirectHelper.WindowMode)">
            <summary>
            Open this graph using pxredirectexception
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionAttributesInq.RedirectGraph(System.String,System.String)">
            <summary>
            Open this graph using pxredirectexception
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionAttributesInq.RedirectGraph(System.String,System.String,PX.Data.PXRedirectHelper.WindowMode)">
            <summary>
            Open this graph using pxredirectexception
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionAttributesFilter">
            <summary>
            Production Attributes inquiry filter
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionAttributeRecords">
            <summary>
            Production Attributes inquiry detail
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionBomCopy">
            <summary>
            Graph used for building the production order details (copy Bom detail to the order)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopy.CopyBomOrderLevelAttributes(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy the given BOM Level Attributes to the given production item record
            </summary>
            <param name="amProdItem"></param>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyBase.TryInsertAMProdAttribute(PX.Objects.AM.AMProdAttribute)">
            <summary>
            Special insert method to manage unique attribute labels.
            Determines insert or update.
            </summary>
            <param name="prodAttribute">new AMPRodAttribute row</param>
            <returns>True if inserted, false if excluded by some condition</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyBase.CreateOperationDetail(PX.Objects.AM.ProductionBomCopyBase.AMOrder)">
            <summary>
            Calculate the operation details for use in building order details and/or scheduling
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyBase.SkipMaterial(PX.Objects.AM.AMBomMatl)">
            <summary>
            Should the given material item be skipped from the production order building process?
            </summary>
            <returns>True when ignoring the material item</returns>
        </member>
        <member name="T:PX.Objects.AM.ProductionBomCopyBase.OrderedOperationDetails">
            <summary>
            Manage correct phantom/operation order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyBase.OrderedOperationDetails.SetProdOperNbrs(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the Production Operation Numbers in the ordered collection
            </summary>
            <param name="operNbrLength">Operation number length (Ex: 4 results in '0000')</param>
            <param name="startingOperNbr">First order operation number (Ex: 10)</param>
            <param name="operNbrStep">Step between each operation number</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyBase.OrderedOperationDetails.FindParentByIndex(System.Int32,System.Int32)">
            <summary>
            Find the related parent operation detail from the current index and level
            </summary>
            <param name="currentIndex">Current processing index</param>
            <param name="currentLevel">Current processing level</param>
            <returns>Parent operation detail</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyBase.GetUniqueOperationDetailBomRevisions">
            <summary>
            From _operationDetails what are the unique bom/revision combinations
            </summary>
            <returns>List of Tuple where Item1 = bomid and Item2 = revision</returns>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.ParentReferenceKey">
            <summary>
            Direct parent reference key
            (doesn't consider include/exclude of operation)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.ParentIncludeOpReferenceKey">
            <summary>
            Parent reference key related to included operation
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.BomOper">
            <summary>
            <see cref="T:PX.Objects.AM.AMBomOper"/> related to <see cref="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.BomID"/> <see cref="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.BomRevisionID"/> and <see cref="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.BomOperationID"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.BomID">
            <summary>
            Source ID such as BOMID, EstimateID, ConfigurationID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.BomOperationCD">
            <summary>
            OperNbr (similar to OperationCD)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.IsProdBom">
            <summary>
            Is the BOM the source production order BOM
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.OperationDetail.IncludeOper">
            <summary>
            Is the phantom routing included in the production order?
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionBomCopyBase.AMOrder">
            <summary>
            The details from the source type for creation of the new type.
            The following types can be the source types: a production order (for creation of a production order),
            a BOM (for creation of a production order).
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionBomCopyBase.AMOrder.sourceDate">
            <summary>
            Source date of production detail
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionBomCopyBase.AMOrder.SourceDate">
            <summary>
            Source date of production detail
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionBomCopyMap">
            <summary>
            Mapping bom DACs to production DACs
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyOper(PX.Objects.AM.AMBomOper,PX.Objects.AM.AMProdOper)">
            <summary>
            Copy bom operation DAC fields to a production operation DAC
            </summary>
            <param name="bomOper">Existing AMBomOper DAC record</param>
            <param name="prodOper">AMProdOper DAC record</param>
            <returns>Passed prodOper object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyOper(PX.Objects.AM.AMBomOper)">
            <summary>
            Copy bom operation DAC fields to a production operation DAC
            </summary>
            <param name="bomOper">Existing AMBomOper DAC record</param>
            <returns>new AMProdOper DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyMatl(PX.Objects.AM.AMBomMatl,PX.Objects.AM.AMProdMatl)">
            <summary>
            Copy bom material DAC fields to a production material DAC
            </summary>
            <param name="bomMatl">Existing AMBomOvhd DAC record</param>
            <param name="prodMatl">AMProdMatl DAC record</param>
            <returns>Passed prodMatl object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyMatl(PX.Objects.AM.AMBomMatl)">
            <summary>
            Copy bom material DAC fields to a production material DAC
            </summary>
            <param name="bomMatl">Existing AMBomOvhd DAC record</param>
            <returns>new AMProdMatl DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyOvhd(PX.Objects.AM.AMBomOvhd,PX.Objects.AM.AMProdOvhd)">
            <summary>
            Copy bom overhead DAC fields to a production overhead DAC
            </summary>
            <param name="bomOvhd">Existing AMBomOvhd DAC record</param>
            <param name="prodOvhd">AMProdOvhd DAC record</param>
            <returns>Passed prodOvhd object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyOvhd(PX.Objects.AM.AMBomOvhd)">
            <summary>
            Copy bom overhead DAC fields to a production overhead DAC
            </summary>
            <param name="bomOvhd">Existing AMBomOvhd DAC record</param>
            <returns>new AMProdOvhd DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyTool(PX.Objects.AM.AMBomTool,PX.Objects.AM.AMProdTool)">
            <summary>
            Copy bom tool DAC fields to a production tool DAC
            </summary>
            <param name="bomTool">Existing AMBomTool DAC record</param>
            <param name="prodTool">AMProdTool DAC record</param>
            <returns>Passed prodTool object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyTool(PX.Objects.AM.AMBomTool)">
            <summary>
            Copy bom tool DAC fields to a production tool DAC
            </summary>
            <param name="bomTool">Existing AMBomTool DAC record</param>
            <returns>new AMProdTool DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyStep(PX.Objects.AM.AMBomStep,PX.Objects.AM.AMProdStep)">
            <summary>
            Copy bom step DAC fields to a production step DAC
            </summary>
            <param name="bomStep">Existing AMBomStep DAC record</param>
            <param name="prodStep">AMProdStep DAC record</param>
            <returns>Passed prodStep object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyStep(PX.Objects.AM.AMBomStep)">
            <summary>
            Copy bom step DAC fields to a production step DAC
            </summary>
            <param name="bomStep">Existing AMBomStep DAC record</param>
            <returns>new AMProdStep DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyAttributes(PX.Objects.AM.AMBomAttribute,PX.Objects.AM.AMProdAttribute)">
            <summary>
            Copy bom attribute DAC fields to a production attribute DAC
            </summary>
            <param name="bomAttribute">Existing AMBomAttribute DAC record</param>
            <param name="prodAttribute">AMProdAttribute DAC record</param>
            <returns>Passed prodAttribute object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyAttributes(PX.Objects.AM.AMBomAttribute)">
            <summary>
            Copy bom attribute DAC fields to a production attribute DAC
            </summary>
            <param name="bomAttribute">Existing AMBomAttribute DAC record</param>
            <returns>new AMProdAttribute DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyAttributes(PX.Objects.AM.AMConfigurationAttribute,PX.Objects.AM.AMConfigResultsAttribute,PX.Objects.AM.AMProdAttribute)">
            <summary>
            Copy configuration attribute DAC fields to a production attribute DAC
            </summary>
            <param name="configAttribute">Existing configuration attribute DAC record</param>
            <param name="configResultAttribute">Existing configuration results attribute DAC record</param>
            <param name="prodAttribute">AMProdAttribute DAC record</param>
            <returns>Passed prodAttribute object with the copied data</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyAttributes(PX.Objects.AM.AMConfigurationAttribute,PX.Objects.AM.AMConfigResultsAttribute)">
            <summary>
            Copy configuration attribute DAC fields to a production attribute DAC
            </summary>
            <param name="configAttribute">Existing configuration attribute DAC record</param>
            <param name="configResultAttribute">Existing configuration results attribute DAC record</param>
            <returns>new AMProdAttribute DAC record</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionBomCopyMap.CopyAttributes(PX.Objects.AM.AMProdAttribute,PX.Objects.AM.AMProdAttribute)">
            <summary>
            Copy production attribute values from one row to another.
            </summary>
            <param name="fromAttribute"></param>
            <param name="toAttribute"></param>
            <returns>Return the toAttribute row</returns>
        </member>
        <member name="T:PX.Objects.AM.ProductionConfigurationCopy">
            <summary>
            Graph for building production details based on an Configuration
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionConfigurationCopy.CopyConfigurationAttributes(PX.Objects.AM.AMProdItem)">
            <summary>
            Copy configuration attributes to production attributes
            </summary>
            <param name="amProdItem">Production order record</param>
        </member>
        <member name="T:PX.Objects.AM.ProductionCostCalculator">
            <summary>
            Calculate the costs during production completions of the production item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionCostCalculator.CostInBaseUnits">
            <summary>
            Indicates of the cost should be returned in base units (Default is in transaction units)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetStandardUnitCost(PX.Objects.AM.AMMTran)">
            <summary>
            Get the standard cost of the production item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetStandardUnitCost(PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem)">
            <summary>
            Get the standard cost of the production item
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetActualCostByOperation(PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdOper,System.Decimal,System.Decimal)">
            <summary>
            Calculate the actual unit cost for the production item and transaction.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetEstimatedUnitCostByOperation(PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdItem,PX.Objects.AM.MoveOperationQtyTotals)">
            <summary>
            Calculate the estimated actual unit cost for the production item 
            based on actual and remaining units.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedFixedOverheadCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal})">
            <summary>
            Get the planned Fixed Overhead unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedVariableOverheadCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Get the planned variable overhead unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetOverheadCostsByOper(PX.Data.PXGraph,PX.Objects.AM.AMProdOper)">
            <summary>
            Get the overhead values for the oiperation
            </summary>
            <param name="graph"></param>
            <param name="amProdOper"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedVariableOverheadCost(PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},PX.Data.PXResultset{PX.Objects.AM.AMProdOvhd})">
            <summary>
            Get the planned variable overhead unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedMachineTimeTotalRaw(PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal})">
            <summary>
            Un-rounded total machine time
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedMachineCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Get the planned machine unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedMachineCost(PX.Data.PXResultset{PX.Objects.AM.AMWCMach},PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Get the planned machine unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Get the planned labor unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Get the planned labor unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Get the planned labor unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32)">
            <summary>
            Get the planned labor unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Int32,System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Get the planned labor unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborTimePerQty(PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal})">
            <summary>
            Get the planned labor time (minutes) per production qty for the given operation.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedLaborHoursPerQty(PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal})">
            <summary>
            Get the planned labor hours per production qty for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedMaterialCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal})">
            <summary>
            Get the planned material unit and total cost for the given operation
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.GetPlannedToolCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Nullable{System.Decimal})">
            <summary>
            Get the current planned tool cost for a give production order operation
            </summary>
            <param name="graph">Calling Graph</param>
            <param name="amProdOper">Source production operation to calculate planned cost against</param>
            <param name="productionQty">Source remaining qty </param>
            <returns>Planned Cost object containing unit and total cost</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionCostCalculator.CalculateReturnUnitCost(PX.Objects.AM.AMMTran,PX.Objects.AM.AMProdItem,PX.Objects.AM.MoveOperationQtyTotals,System.Nullable{System.Decimal})">
            <summary>
            Calculate a negative (return) move/labor transaction with qty. 
            Determines the unit cost as it relates to all previously transacted move qty for a given order.
            </summary>
            <param name="ammTran">Current transaction being processed requesting the unit cost</param>
            <param name="amProdItem">Production order related to the current transaction</param>
            <returns>calculated unit cost</returns>
        </member>
        <member name="T:PX.Objects.AM.ProductionCostCalculator.PlannedCosts">
            <summary>
            Transfer object to store planned total and unit cost values
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionCostEntry">
            <summary>
            Entry for production costs. If an entry page exists it would be read only. These transactions are built automatically from other entry pages (Move/Labor)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionEstimateCopy">
            <summary>
            Graph for building production details based on an Estimate
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionEventHelper">
            <summary>
            Manage creating the production event messages
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionEventHelper.BuildTransactionEvent(PX.Objects.AM.AMBatch,PX.Objects.AM.AMProdItem)">
            <summary>
            Convert a batch and production order id into a new production event record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionEventHelper.BuildTransactionEvents(PX.Objects.AM.AMBatch,PX.Objects.AM.AMProdItem[])">
            <summary>
            Convert a batch and collection of production order keys into a list of new production event records
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionEventHelper.GetEventTypeFromProdStatusID(System.String)">
            <summary>
            Convert a production status ID to the related production event type
            </summary>
            <param name="productionStatusID">ProductionOrderStatus</param>
            <returns>ProductionEventType</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionEventHelper.InsertPersistStatusEvent(PX.Objects.AM.AMProdItem,System.String,System.String)">
            <summary>
            Create, insert, and persist the new production status event
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionEventHelper.InsertStatusEvent(PX.Data.PXGraph,PX.Objects.AM.AMProdItem,System.String,System.String)">
            <summary>
            Create and insert new production status events
            </summary>
            <param name="graph">calling graph</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionEventHelper.BuildStatusEvent(PX.Objects.AM.AMProdItem,System.String,System.String)">
            <summary>
            Convert the new status change to a production event record
            </summary>
            <param name="amProdItem">Production Item Record</param>
            <param name="oldStatusID">Old ProductionOrderStatus</param>
            <param name="newStatusID">New ProductionOrderStatus</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.DeleteBatch">
            <summary>
            Delete the production cost batch and related journal entry batch
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.DeleteJournalEntryBatchOnly">
            <summary>
            Delete journal entry transaction only
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateAmGlLine(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creating a GL and AM transaction for all production offset entries (Overhead, Tool, Machine, BF Labor).
            WIP account is a debit when the transaction amount is a positive number (credit when negative).
            The other side of the GL entry are the passed Offset accounts/sub fields.
            </summary>
            <param name="amProdItem">AMProdItem DAC related to transaction</param>
            <param name="ammTran">Root ammtran record generating the gl entry</param>
            <param name="tranAmount">GL Transaction amount</param>
            <param name="offsetAccount">Expense offset account</param>
            <param name="offsetSub">Expense offset sub account</param>
            <param name="amTranType">AM Transaction type (Pass a selection from AMMTran.AMTranType)</param>
            <param name="costOperationId">Operation ID that should be referenced as the cost operation</param>
            <param name="transactionDescription">Transaction description if different than tran type description</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateAmGlLine(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creating a GL and AM transaction for all production offset entries (Overhead, Tool, Machine, BF Labor).
            WIP account is a debit when the transaction amount is a positive number (credit when negative).
            The other side of the GL entry are the passed Offset accounts/sub fields.
            </summary>
            <param name="amProdItem">AMProdItem DAC related to transaction</param>
            <param name="ammTran">Root ammtran record generating the gl entry</param>
            <param name="tranAmount">GL Transaction amount</param>
            <param name="offsetAccount">Expense offset account</param>
            <param name="offsetSub">Expense offset sub account</param>
            <param name="amTranType">AM Transaction type (Pass a selection from AMMTran.AMTranType)</param>
            <param name="costOperationId">Operation ID that should be referenced as the cost operation</param>
            <param name="transactionDescription">Transaction description if different than tran type description</param>
            <param name="laborTime">Labor Time related to the transaction</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateAmGlLine(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creating a GL and AM transaction for all production offset entries (Overhead, Tool, Machine, BF Labor).
            WIP account is a debit when the transaction amount is a positive number (credit when negative).
            The other side of the GL entry are the passed Offset accounts/sub fields.
            </summary>
            <param name="amProdItem">AMProdItem DAC related to transaction</param>
            <param name="ammTran">Root ammtran record generating the gl entry</param>
            <param name="tranAmount">GL Transaction amount</param>
            <param name="offsetAccount">Expense offset account</param>
            <param name="offsetSub">Expense offset sub account</param>
            <param name="amTranType">AM Transaction type (Pass a selection from AMMTran.AMTranType)</param>
            <param name="costOperationId">Operation ID that should be referenced as the cost operation</param>
            <param name="transactionDescription">Transaction description if different than tran type description</param>
            <param name="laborTime">Labor Time related to the transaction</param>
            <param name="referenceCostId">the cost id reference such as tool id, overhead id, etc.</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateAmGlLine(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Creating a GL and AM transaction for all production offset entries (Overhead, Tool, Machine, BF Labor).
            WIP account is a debit when the transaction amount is a positive number (credit when negative).
            The other side of the GL entry are the passed Offset accounts/sub fields.
            </summary>
            <param name="amProdItem">AMProdItem DAC related to transaction</param>
            <param name="ammTran">Root ammtran record generating the gl entry</param>
            <param name="tranAmount">GL Transaction amount</param>
            <param name="offsetAccount">Expense offset account</param>
            <param name="offsetSub">Expense offset sub account</param>
            <param name="amTranType">AM Transaction type (Pass a selection from AMMTran.AMTranType)</param>
            <param name="costOperationId">Operation ID that should be referenced as the cost operation</param>
            <param name="transactionDescription">Transaction description if different than tran type description</param>
            <param name="laborTime">Labor Time related to the transaction</param>
            <param name="referenceCostId">the cost id reference such as tool id, overhead id, etc.</param>
            <param name="referenceLineId">the LineID linked to the related referenceCostId</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateAmGlLine(PX.Objects.AM.AMLaborCode,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Creating a GL and AM transaction for indirect labor production offset entries.
            Overhead Account is a debit when the transaction amount is a positive number (credit when negative).
            The otherside of the GL entry are the passed Labor accounts/sub fields.
            </summary>
            <param name="amLaborCode">Root AMLaborCode record use to get the accounts for the gl entry</param>
            <param name="ammTran">Root ammtran record generating the gl entry</param>
            <param name="tranAmount">GL Transaction amount</param>
            <param name="amTranType">AM Transaction type (Pass a selection from AMMTran.AMTranType)</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateGlLine(PX.Objects.AM.AMMTran)">
            <summary>
            Create a GL line from an AM line
            </summary>
            <param name="ammTran">Transaction to base the GL entry off of</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateBatchRecord(PX.Objects.AM.AMMTran)">
            <summary>
            Create the AMBatch header record if missing
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionGLTranBuilder.CreateNonGLCostBatchEntry(PX.Objects.AM.AMMTran,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Adding cost batch entires that do not impact the GL (Ex: WIP Complete by operation numbers)
            </summary>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.ProductionNoSourceCopy">
            <summary>
            Graph for building production details based on nothing
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionOrderCopy">
            <summary>
            Graph for building production details based on another Production Order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionOrderCopy.CopyProdItem(PX.Objects.AM.AMProdItem,PX.Objects.AM.AMProdItem)">
            <summary>
            Copy ProdItem level fields
            </summary>
            <param name="copyFromProdItem"></param>
            <param name="copyToProdItem"></param>
        </member>
        <member name="T:PX.Objects.AM.ProductionOrderPrintProcess">
            <summary>
            Manufacturing production order print processing graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter">
            <summary>
            The filter for the Print Production Orders (AM511000) form, which corresponds
            to the <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.CurrentOwnerID">
            <summary>
            Current owner ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.MyOwner">
            <summary>
            My owner
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.OwnerID">
            <summary>
            Owner ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.WorkGroupID">
            <summary>
            Work group ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter._Reprint">
            <summary>
            Shows all orders whether already Printed or not 
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.Reprint">
            <summary>
            Reprint
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.PrintWithDeviceHub">
            <summary>
            Print with device hub
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.DefinePrinterManually">
            <summary>
            Define printer manually
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.PrinterID">
            <summary>
            PrinterID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.NumberOfCopies">
            <summary>
            Number of copies
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionOrderPrintProcess.ProdOrderPrintProcessFilterProjectionAttribute">
            <summary>
            Specialized version of the Projection Attribute. Defines Projection as <br/>
            a select of <see cref="T:PX.Objects.AM.AMProdItem"/> Join <see cref="T:PX.Objects.IN.InventoryItem"/> <br/>
            filtered by <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> and <see cref="T:PX.Objects.IN.InventoryItem.productManagerID"/> according to the values <br/>
            in the <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter"/>: <br/>
            1. <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.ownerID"/> is null or <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.ownerID"/> = <see cref="T:PX.Objects.IN.InventoryItem.productManagerID"/> <br/>
            2. <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.workGroupID"/> is null or <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.workGroupID"/> = <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> <br/>
            3. <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.myWorkGroup"/> = false or <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> = InMember&lt;<see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.currentOwnerID"/>&gt; <br/>
            4. <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> is null or <see cref="T:PX.Objects.IN.InventoryItem.productWorkgroupID"/> = Owened&lt;<see cref="T:PX.Objects.AM.ProductionOrderPrintProcess.ProductionOrderPrintProcessFilter.currentOwnerID"/>&gt;<br/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PrintProductionOrders">
            <summary>
            Details of print production orders. These records are generated by the <see cref="T:PX.Objects.AM.ProductionOrderPrintProcess"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionScheduleEngine">
            <summary>
            Production scheduling engine
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProductionScheduleEngine.IsCTP">
            <summary>
            Is schedule running as CTP schedule?
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionScheduleEngine.InfiniteSchdDateTime">
            <summary>
            DateTime used for infinite scheduled entries (1/1/1900 @ 23:59:00)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionScheduleEngine.BlockSize">
            <summary>
            Scheduling block size (in minutes) for APS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionScheduleEngine.IncludeScrap">
            <summary>
            Production Preferences - Include Scrap setting
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionScheduleEngine.MachineScheduling">
            <summary>
            Production Preferences - Machine Scheduling setting
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProductionScheduleEngine.UseShiftCrewSize">
            <summary>
            When scheduling a production order should the process use crew size and efficiency
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.UseShiftCrewSizeEfficiency(PX.Objects.AM.AMWC)">
            <summary>
            When scheduling a production order should the process use crew size and efficiency
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.CreateSchedule(PX.Objects.AM.AMSchdItem@)">
            <summary>c
            Create the schedule for the current production order
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.GetNextDateByTime(System.Nullable{System.DateTime},System.Int32,PX.Objects.AM.ICalendarHelper,System.Boolean,System.Int32@)">
            <summary>
            For Queue and Move time we need
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.HoursToBlocks(System.Double,System.Int32,System.Boolean)">
            <summary>
            Calculate the total scheduling blocks
            </summary>
            <param name="hours">Working/scheduling hours</param>
            <param name="blockMinutes">Block definition/setup related in minutes</param>
            <param name="roundUp">Indicates if the block size is to be rounded up (true) or down (false)</param>
            <returns>Number of blocks</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.MinutesToBlocks(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculate the total scheduling blocks
            </summary>
            <param name="minutes">Working/scheduling hours</param>
            <param name="blockMinutes">Block definition/setup related in minutes</param>
            <param name="roundUp">Indicates if the block size is to be rounded up (true) or down (false)</param>
            <returns>Number of blocks</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.CalcBestSchdEfficiencyTime(System.Int32,System.Nullable{System.Int32},System.Decimal,System.Nullable{System.Decimal},System.Int32@,System.Int32@)">
            <summary>
            Find the best schedule time value with the efficiency
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.CalcTotalTime(PX.Objects.AM.AMWC,PX.Objects.AM.IOperationMaster,System.Decimal)">
            <summary>
            Calculate the operation total required time (in minutes) per quantity
            EXCLUDES SETUP TIME
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.CalcTotalTime(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Decimal})">
            <summary>
            Calculate the total required time (in minutes) per quantity
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.UpdateScheduleQuantities">
            <summary>
            Update the schedule quantities to match changes to order progress or qty to produce
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.DeleteSchedule(PX.Objects.AM.AMSchdItem)">
            <summary>
            Delete prior schedule
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.DeleteSchedule(PX.Objects.AM.AMSchdItem,System.Boolean)">
            <summary>
            Delete prior schedule
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngine.UpdateWCSchdFromMachSchds(System.Collections.Generic.List{PX.Objects.AM.AMMachSchd},PX.Objects.AM.AMWCSchd)">
            <summary>
            Let the values of the machines for a given work center control the overall total values for the work center schd record
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionScheduleEngineAdv">
            <summary>
            Advanced Planning and Scheduling Engine
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.OrderScheduleBy(System.Collections.Generic.List{PX.Objects.AM.AMSchdItem})">
            <summary>
            Adjust the list to order by a specific order for processing
            </summary>
            <param name="list">List of schedules to order</param>
            <returns>reordered list</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.BlockRoundedDate(System.DateTime,System.Int32,System.Boolean)">
            <summary>
            Round a give date to the next complete rounded block time
            </summary>
            <param name="date">Date time to round by block size</param>
            <param name="blockSize">schedule time block size</param>
            <param name="roundBackwards">indicates the process should round back (True), otherwise round forward (false)</param>
            <returns>Block rounded date time</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.UpdateProdItem(PX.Objects.AM.AMSchdItem)">
            <summary>
            Make sure the AMProdItem row is in sync with some field that might allow edit at the schd item level
            </summary>
            <param name="schdItem"></param>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.GetSchdDetailStartEndDateTimes(System.Collections.Generic.IEnumerable{PX.Objects.AM.ISchdDetail})">
            <summary>
            Gets the max and min datetime for the given schedule detail
            </summary>
            <returns>
            Item1 = Start Date Time; Item2 = End Date Time
            </returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.ProcessOperationShift(PX.Objects.AM.AMSchdOper,PX.Objects.AM.AMShift,PX.Objects.AM.AMDateInfo,PX.Objects.AM.WorkCenterCalendarHelper,PX.Objects.AM.ReadDirection,System.DateTime@,System.Int32@,System.Boolean)">
            <summary>
            Schedules workcenters
            </summary>
            <param name="schdOper"></param>
            <param name="wcShift"></param>
            <param name="shiftDateInfo"></param>
            <param name="workCenterCalendar"></param>
            <param name="scheduleDirection"></param>
            <param name="currentSchedDateTime"></param>
            <param name="remainingSchdTime"></param>
            <param name="isFirstAttempt"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:PX.Data.PXException"></exception>
            <exception cref="T:PX.Objects.AM.SchedulingOrderDatesException"></exception>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.UpdateWCSchdDetailBreakTimes(PX.Objects.AM.AMWCSchd,System.Collections.Generic.List{PX.Objects.AM.AMWCSchdDetail},PX.Objects.AM.AMDateInfo)">
            <summary>
            Updates the list of <see cref="T:PX.Objects.AM.AMWCSchdDetail"/> to provide the correct/updated break time setup. Will handle any change or missing break times.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.CreateWorkSchdDays(PX.Objects.AM.AMWC,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Used to pre-build work schedule days and adjust for exceptions
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.FirmOrder(PX.Objects.AM.AMSchdItem)">
            <summary>
            Firm only an order (no scheduling)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionScheduleEngineAdv.UndoFirmOrder(PX.Objects.AM.AMSchdItem)">
            <summary>
            Undo a firm order only (no scheduling)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.INItemPlanHardSupplyPlanAggregate">
            <summary>
            Aggregate of demand items by Hard linked Supply
            </summary>
        </member>
        <member name="T:PX.Objects.AM.INItemPlanSoftSupplyPlanAggregate">
            <summary>
            Aggregate of demand items by Soft (no hard link) Supply
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.AllProdMatlSplits">
            <summary>
            All related split records
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.AllocatingProdMatlSplits">
            <summary>
            Material records being marked as allocated
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.ScheduleDate">
            <summary>
            The schedule date used for the material calculation
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.AvailableDate">
            <summary>
            Material is fully available on this day on or before the schedule date
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.AvailableBaseQtyShort">
            <summary>
            Quantity short for scheduling on the first late available date
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.FirstLateAvailableDate">
            <summary>
            Material is due in after the schedule date and first fully available on this day
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.FirstLateAvailableBaseQtyShort">
            <summary>
            Quantity short for scheduling on the first late available date
            </summary>
        </member>
        <member name="F:PX.Objects.AM.MaterialAvailabiltyDates.UsedStockInventory">
            <summary>
            Stock inventory quantity used to supply material
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MaterialAvailabiltyDates.ShortByScheduleDate">
            <summary>
            The material is short to be supplied by the schedule date
            </summary>
        </member>
        <member name="P:PX.Objects.AM.MaterialAvailabiltyDates.NoAvailableMaterial">
            <summary>
            The maerial is short to be supplied for any date
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionStatus.IsValidTransactionStatus(PX.Data.PXGraph,System.String,System.String)">
            <summary>
            Does the given production order allow for a transaction entry/process release
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionStatus.IsValidTransactionStatus(PX.Objects.AM.AMProdItem)">
            <summary>
            Does the given production order allow for a transaction entry/process release
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionStatus.ValidStatusDescription(PX.Objects.AM.AMProdItem,System.Boolean)">
            <summary>
            Public used within Manufacturing Shared for other verify production status methods
            </summary>
            <param name="aAMProdItem">AMProdItem DAC</param>
            <param name="PlanStatusValid">Is a plan status a valid status for transactions</param>
            <returns>If string not empty it will be the full status description that is an invalid status</returns>
        </member>
        <member name="F:PX.Objects.AM.ProductionTransactionHelper.BackflushMaterialReleased">
            <summary>
            Is the related backflush material transaction released
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProductionTransactionHelper.BackflushMaterialINRegisterReleased">
            <summary>
            Is the related backflush material transaction's inventory batch released
            </summary>
        </member>
        <member name="F:PX.Objects.AM.ProductionTransactionHelper.refReleasedMaterialLines">
            <summary>
            Container for released material transaction lines stored using row key values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.BuildRelatedTransactions(PX.Objects.AM.AMMTran,PX.Objects.AM.MoveOperationQtyTotals,PX.Objects.AM.AMProdItem)">
            <summary>
            Calculate operation quantity and build related production cost transactions (Labor, Machine, BF Material, Tools, Overhead)
            </summary>
            <param name="moveTransaction">Current production transaction object</param>
            <param name="moveOperQtyTotals">Pre-processed move qty totals related to the processing transaction</param>
            <param name="prodItem">Production order of processing moveTransaction</param>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.HasReleasedBflushMaterial(PX.Objects.AM.AMMTran)">
            <summary>
            Does the given move/labor transaction contain released material references.
            </summary>
            <param name="moveLine">Move/Labor transaction line</param>
            <returns>True if released material backflush transactions exist</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.GetTranUomQty(PX.Objects.AM.AMMTran,System.Decimal)">
            <summary>
            Returns the converted qty based on the tran UOM
            </summary>
            <param name="tran">transaction being processed</param>
            <param name="baseQty">processing quantity in base units</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.OperationHasMaterialIssued(PX.Objects.AM.AMProdOper)">
            <summary>
            Indicates of the given operation has material issued or not
            </summary>
            <param name="amProdOper"></param>
            <returns>True when issued material found</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.IsOperationComplete(PX.Objects.AM.AMProdOper,PX.Objects.AM.AMProdItem)">
            <summary>
            Indicates if the operation has been completed
            </summary>
            <param name="amProdOper">production operation</param>
            <param name="prodItem">related production order</param>
            <returns>True if completed</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.BackflushLabor(PX.Objects.AM.AMProdOper,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},System.Int32,System.Boolean,System.Boolean,PX.Objects.AM.AMProdItem)">
            <summary>
            Update the labor cost related to the production operation.
            </summary>
            <param name="amProdOper">Production Operation</param>
            <param name="productionAmmTran">Move transaction</param>
            <param name="currentFgQty">Base move quantity</param>
            <param name="laborTime">Move labor time and fixed labor time</param>
            <param name="orderUpdateOnly">Determine whether order is update only or not</param>
            <param name="reverseCost">Determine whether it has reverse cost or not</param>
            <param name="prodItem">Production order</param>
            <exception cref="T:PX.Data.PXException"></exception>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.GetMatlGraphInsertedTrans">
            <summary>
            Grab the current <see cref="T:PX.Objects.AM.AMMTran"/> and <see cref="T:PX.Objects.AM.AMMTranSplit"/> inserted into cache and return as a list to use for processing additional transactions
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.CreateWipCompleteCostEntry(PX.Objects.AM.AMMTran,PX.Objects.AM.AMProdOper,System.Decimal,System.Decimal)">
            <summary>
            WIP Complete by operation is not calculated as a record in the cost batch (one record for each operation)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.FindProdOperForActualCost(PX.Data.PXGraph,PX.Objects.AM.AMProdOper,System.Collections.Generic.Dictionary{System.Int32,PX.Objects.AM.AMProdOper}@)">
            <summary>
            Finds the correct operation record to use for calculating operation totals.
            </summary>
            <param name="graph">Calling graph</param>
            <param name="amProdOper">Selected AMProdOper record</param>
            <param name="updatedOperations">processing storage of updated operations</param>
            <returns>The correct AMProdOper record to use during processing</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.UpdateProdOperActualCostTotals(PX.Data.PXGraph,PX.Objects.AM.AMProdItem,PX.Objects.AM.AMProdTotal)">
            <summary>
            Calculates all costs for the <see cref="T:PX.Objects.AM.AMProdOper"/> and <see cref="T:PX.Objects.AM.AMProdTotal"/> actual values
            </summary>
            <param name="graph">Calling graph</param>
            <param name="amproditem">Production Item DAC to update costs</param>
            <param name="amprodtotal"></param>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.UpdateProdItemCosts(System.Collections.Generic.List{PX.Objects.AM.AMProdItem},PX.Data.PXGraph)">
            <summary>
            Calculates costs for the list of production ids
            </summary>
            <param name="list">list of production item keys</param>
            <param name="graph">Calling graph</param>
        </member>
        <member name="F:PX.Objects.AM.ProductionTransactionHelper.MaterialReturnSummary.IsOverReturn">
            <summary>
            Returning more than issued?
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.GetMaterialReturnCosts(PX.Data.PXGraph,PX.Objects.AM.AMMTran)">
            <summary>
            Finds the costs issued to use as the return costs accounting for full and partial transactions.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.SignsChanged(System.Nullable{System.Decimal},System.Object)">
            <summary>
            Check a dac decimal field to see if the new value had the sign changed [ (+/-) to (-/+) ]
            </summary>
            <returns>True if the signs have changed, false for all other conditions</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.UpdateOperationQty(PX.Data.PXGraph,PX.Objects.AM.AMProdItem,System.Boolean)">
            <summary>
            Determine/update the correct total qty values for each operation.
            Material total updated as operations are updated.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.UpdateOperationQty(PX.Data.PXGraph,PX.Objects.AM.AMProdItem,System.Collections.Generic.List{PX.Objects.AM.AMProdOper},System.Boolean)">
            <summary>
            Determine/update the correct total qty values for each operation.
            Material total updated as operations are updated.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.UpdateOperationQtyWithoutMaterial(PX.Data.PXGraph,PX.Objects.AM.AMProdItem,System.Collections.Generic.List{PX.Objects.AM.AMProdOper},System.Boolean)">
            <summary>
            Determine/update the correct total qty values for each operation.
            Material total updated as operations are updated.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.GetUpdateOperationQty(PX.Objects.AM.AMProdItem,System.Collections.Generic.List{PX.Objects.AM.AMProdOper},System.Boolean)">
            <summary>
            Determine the correct total qty values for each operation.
            </summary>
            <param name="amProdItem">production order</param>
            <param name="amProdOpers">list of production operations</param>
            <param name="includeScrap">is scrap included in completions</param>
            <returns>Operations to be updated</returns>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.TryCheckOverIssueMaterialSetPropertyException(PX.Data.PXCache,PX.Objects.AM.AMMTran,System.Nullable{System.Decimal},PX.Data.PXSetPropertyException@)">
            <summary>
            Checks for Over Issue of Material for a given material entry.
            If over issue found related to check level. cache received raised exception handling.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.GetUnreleasedMaterialBaseQty(PX.Data.PXGraph,PX.Objects.AM.AMProdMatl,PX.Objects.AM.AMMTran)">
            <summary>
            Uses SQL Index: AMMTran_IX_GetUnreleasedMaterialBaseQty
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.ValidateTrans(PX.Data.PXGraph,PX.Objects.AM.AMProdItem)">
            <summary>
            Validate the production order for unreleased transactions before change the status of it from release to plan
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.PeriodFromDate(PX.Data.PXGraph,System.Nullable{System.DateTime})">
            <summary>
            Returns PeriodID from the given date.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProductionTransactionHelper.RemoveProdCostFromCache(PX.Data.PXGraph)">
            <summary>
            Remove all <see cref="F:PX.Objects.AM.Attributes.AMDocType.ProdCost"/> records from cache from the given <see cref="T:PX.Data.PXGraph"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionWhereUsedInq">
            <summary>
            Manufacturing Production Material Where Used Inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ParentInventoryItem">
            <summary>
            Where used inquiry Parent Inventory
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ProductionWhereUsedFilter">
            <summary>
            Production Where used inquiry filter
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WhereUsedProductionDetail">
            <summary>
            Production Where used inquiry
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProjectHelper.IsProjectFeatureEnabled">
            <summary>
            Is the project module enabled
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ProjectHelper.IsProjectAcct(PX.Data.PXGraph,System.Nullable{System.Int32})">
            <summary>
            Does the account contain an account group (a project GL Account).
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ProjectHelper.IsProjectAcctWithProjectEnabled(PX.Data.PXGraph,System.Nullable{System.Int32})">
            <summary>
            Does the account contain an account group (a project GL Account).
            Only query the account when the project module is enabled.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PXRevisionableGraph`4">
            <summary>
            Manufacturing Revisionable base graph
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PXRevisionableGraphBase`4">
            <summary>
            Manufacturing Revisionable base graph
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXRevisionableGraphBase`4.SkipAutoCreateNewRevision">
            <summary>
            Do we skip the auto creation of a new revision.
            Useful when the graph is running as an import or called from a contract endpoint
            </summary>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.ReferenceDeleteGraph">
            <summary>
            Responsible for deleted referenced transactions to a deleted line/batch in Manufacturing
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.DeleteReferenceTransactionsDisassembly(PX.Data.PXGraph)">
            <summary>
            Performs the delete and persist of related transactions found in calling graph
            </summary>
            <param name="callingGraph">calling graph containing deleted AMMTran or AMBatch cache</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.DeleteReferenceTransactions(PX.Data.PXGraph)">
            <summary>
            Performs the delete and persist of related transactions found in calling graph
            </summary>
            <param name="callingGraph">calling graph containing deleted AMMTran or AMBatch cache</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINReceiptDeletes(PX.Objects.AM.UniqueStringCollection,System.Collections.Generic.List{PX.Objects.IN.INTran},PX.Objects.AM.ReferenceDeleteGraph.DeleteModeType)">
            <summary>
            Persist the deletes per each ref nbr
            </summary>
            <param name="refNbrs">All related IN RefNbrs involved in the delete</param>
            <param name="inTrans">All specific transaction lines to be deleted</param>
            <param name="deleteModeType">Delete mode (Batch or Line)</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINReceiptDeletes(PX.Objects.IN.INReceiptEntry,PX.Objects.IN.INRegister)">
            <summary>
            Delete an entire IN batch
            </summary>
            <param name="graph"></param>
            <param name="inRegister">IN batch record to delete</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINReceiptDeletes(PX.Objects.IN.INReceiptEntry,PX.Objects.IN.INRegister,System.Collections.Generic.List{PX.Objects.IN.INTran})">
            <summary>
            Delete specific transaction lines
            </summary>
            <param name="graph"></param>
            <param name="inRegister">parent IN register record</param>
            <param name="inTrans">lines to be deleted</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINIssueDeletes(PX.Objects.AM.UniqueStringCollection,System.Collections.Generic.List{PX.Objects.IN.INTran},PX.Objects.AM.ReferenceDeleteGraph.DeleteModeType)">
            <summary>
            Persist the deletes per each ref nbr
            </summary>
            <param name="refNbrs">All related IN RefNbrs involved in the delete</param>
            <param name="inTrans">All specific transaction lines to be deleted</param>
            <param name="deleteModeType">Delete mode (Batch or Line)</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINIssueDeletes(PX.Objects.IN.INIssueEntry,PX.Objects.IN.INRegister)">
            <summary>
            Delete an entire IN batch
            </summary>
            <param name="graph"></param>
            <param name="inRegister">IN batch record to delete</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINIssueDeletes(PX.Objects.IN.INIssueEntry,PX.Objects.IN.INRegister,System.Collections.Generic.List{PX.Objects.IN.INTran})">
            <summary>
            Delete specific transaction lines
            </summary>
            <param name="graph"></param>
            <param name="inRegister">parent IN register record</param>
            <param name="inTrans">lines to be deleted</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINAdjustmentDeletes(PX.Objects.AM.UniqueStringCollection,System.Collections.Generic.List{PX.Objects.IN.INTran},PX.Objects.AM.ReferenceDeleteGraph.DeleteModeType)">
            <summary>
            Persist the deletes per each ref nbr
            </summary>
            <param name="refNbrs">All related IN RefNbrs involved in the delete</param>
            <param name="inTrans">All specific transaction lines to be deleted</param>
            <param name="deleteModeType">Delete mode (Batch or Line)</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINAdjustmentDeletes(PX.Objects.IN.INAdjustmentEntry,PX.Objects.IN.INRegister)">
            <summary>
            Delete an entire IN batch
            </summary>
            <param name="graph"></param>
            <param name="inRegister">IN batch record to delete</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.PersistINAdjustmentDeletes(PX.Objects.IN.INAdjustmentEntry,PX.Objects.IN.INRegister,System.Collections.Generic.List{PX.Objects.IN.INTran})">
            <summary>
            Delete specific transaction lines
            </summary>
            <param name="graph"></param>
            <param name="inRegister">parent IN register record</param>
            <param name="inTrans">lines to be deleted</param>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.HasReleasedReferenceDocs(PX.Data.PXGraph,PX.Objects.AM.AMMTran)">
            <summary>
            Indicates if given <see cref="T:PX.Objects.AM.AMMTran"/> record contains related transactions that have been released
            </summary>
            <param name="graph">Calling graph</param>
            <param name="ammTran">Record to lookup related transactions</param>
            <returns>True if released records found</returns>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.HasReleasedReferenceDocs(PX.Data.PXGraph,PX.Objects.AM.AMMTran,System.Boolean)">
            <summary>
            Indicates if given <see cref="T:PX.Objects.AM.AMMTran"/> record contains related transactions that have been released
            </summary>
            <param name="graph">Calling graph</param>
            <param name="ammTran">Record to lookup related transactions</param>
            /// <param name="includeSubReferences">When true we will check child AM references and its related IN and GL transactions</param>
            <returns>True if released records found</returns>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.HasReleasedReferenceDocs(PX.Data.PXGraph,PX.Objects.AM.AMBatch)">
            <summary>
            Indicates if given <see cref="T:PX.Objects.AM.AMBatch"/> record contains related transactions that have been released
            </summary>
            <param name="graph">Calling graph</param>
            <param name="amBatch">Record to lookup related transactions</param>
            <returns>True if released records found</returns>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.HasReleasedReferenceDocs(PX.Data.PXGraph,PX.Objects.AM.AMBatch,System.Boolean)">
            <summary>
            Indicates if given <see cref="T:PX.Objects.AM.AMBatch"/> record contains related transactions that have been released
            </summary>
            <param name="graph">Calling graph</param>
            <param name="amBatch">Record to lookup related transactions</param>
            <param name="includeSubReferences">When true we will check child AM references and its related IN and GL transactions</param>
            <returns>True if released records found</returns>
        </member>
        <member name="M:PX.Objects.AM.ReferenceDeleteGraph.MakeEventMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Build the event message string to be used in the Production Event
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Reports.BOMSummaryReportParams">
            <summary>
            Manufacturing Report class for bom summary report (AM611000)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Reports.BOMSummaryReportParams.FromBomId(System.String,System.String)">
            <summary>
            Make the parameters dictionary based on the supplied values
            </summary>
            <param name="bomId">Bom ID</param>
            <param name="revisionId">BOM Revision</param>
            <returns>report parameters dictionary</returns>
        </member>
        <member name="T:PX.Objects.AM.Reports.CRQuoteReportParams">
            <summary>
            Estimate Report class for Opportunity Quote report (CR604500)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Reports.CRQuoteReportParams.FromEstimateId(System.String,System.String)">
            <summary>
            Make the parameters dictionary based on the supplied values
            </summary>
            <param name="opportunityID"> Opportunity ID</param>
            <param name="quoteNbr"> Quote number</param>
            <returns>report parameters dictionary</returns>
        </member>
        <member name="T:PX.Objects.AM.Reports.EstimateSummaryReportParams">
            <summary>
            Estimate Report class for Estimate Summary report (AM641000)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Reports.EstimateSummaryReportParams.FromEstimateId(System.String,System.String,System.Boolean)">
            <summary>
            Make the parameters dictionary based on the supplied values
            </summary>
            <param name="estimateID">EstimateID,  Only SO for now</param>
            <param name="revisionID">RevisionID</param>
            <param name="printMaterial">Indicates if material will be printed on the report</param>
            <returns>report parameters dictionary</returns>
        </member>
        <member name="T:PX.Objects.AM.Reports.ProductionTicketReportParams">
            <summary>
            Manufacturing Production Ticket Report helper class for calling the AM625000 report.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Reports.ProductionTicketReportParams.Parameters">
            <summary>
            Report parameters
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Reports.ProductionTicketReportParams.Fields">
            <summary>
            Fields within the report used for filtering.
            (Note: to use a field it must be in the report as a ViewerField)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Reports.SOQuoteReportParams">
            <summary>
            Estimate Report class for Sales order report (SO6410AM)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Reports.SOQuoteReportParams.FromEstimateId(System.String,System.String)">
            <summary>
            Make the parameters dictionary based on the supplied values
            </summary>
            <param name="orderType">Sales Order Type,  Only SO for now</param>
            <param name="refNbr">Sales order number</param>
            <returns>report parameters dictionary</returns>
        </member>
        <member name="F:PX.Objects.AM.AMRuleFormulaEngine.QueryCache">
            <summary>
            Should query for results on graph use cache directly or PXSelect
            </summary>
        </member>
        <member name="F:PX.Objects.AM.RuleCacheContainer._QueryCache">
            <summary>
            Should query for results on graph use cache directly or PXSelect
            </summary>
        </member>
        <member name="M:PX.Objects.AM.RuleCacheContainer.SetFeaturesDictionary(PX.Data.PXGraph)">
            <summary>
            Setting Dictionaries for <see cref="T:PX.Objects.AM.AMConfigResultsFeature"/> and <see cref="T:PX.Objects.AM.AMConfigurationFeature"/>
            Manually merge the Config vs Results records as the old query would call sub query to each config record.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.RuleCacheContainer.SetRulesDictionary(PX.Data.PXGraph)">
            <summary>
            Setting Dictionaries for <see cref="T:PX.Objects.AM.AMConfigResultsRule"/> and <see cref="T:PX.Objects.AM.AMConfigurationRule"/>
            Manually merge the Config vs Results records as the old query would call sub query to each config record.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.RuleCacheContainer.SetAttributesDictionary(PX.Data.PXGraph)">
            <summary>
            Setting Dictionaries for <see cref="T:PX.Objects.AM.AMConfigResultsAttribute"/> and <see cref="T:PX.Objects.AM.AMConfigurationAttribute"/>
            Manually merge the Config vs Results records as the old query would call sub query to each config record.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.RuleCacheContainer.SetOptionsDictionary(PX.Data.PXGraph)">
            <summary>
            Setting Dictionaries for <see cref="T:PX.Objects.AM.AMConfigResultsOption"/> and <see cref="T:PX.Objects.AM.AMConfigurationOption"/>
            Manually merge the Config vs Results records as the old query would call sub query to each config record.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.RuleCacheContainer.GetConfigurationResults``3(PX.Data.PXGraph)">
            <summary>
            Query results for given TRow
            </summary>
        </member>
        <member name="M:PX.Objects.AM.RuleCacheContainer.GetConfigResults``2(PX.Data.PXGraph)">
            <summary>
            Query results for given TRow
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SchdDateDetail`1">
            <summary>
            Manage a dates scheduled detail (used and available time)
            </summary>
            <typeparam name="TSchdDetail"></typeparam>
        </member>
        <member name="M:PX.Objects.AM.SchdDateDetail`1.IsStartingPoint(`0,PX.Objects.AM.ReadDirection,System.DateTime)">
            <summary>
            Determines if the schdDetail is on or after the starting time
            </summary>
        </member>
        <member name="M:PX.Objects.AM.SchdDateDetail`1.GetAvailableBlocks(System.Int32,PX.Objects.AM.ReadDirection)">
            <summary>
            Returns the available blocks based on the requested total block size and the direction. 
            If less block times found it will return them all and the results will indicate as such
            </summary>
            <param name="requestedBlockSize">Total requested blocks</param>
            <param name="direction">Read direction (getting blocks from the start when forward or end of the day when backwards)</param>
            <returns>List of available blocks. The blocks will include all available time which could be more or less than the requested size based on block records.</returns>
        </member>
        <member name="M:PX.Objects.AM.SchdDateDetail`1.GetAvailableBlocks(System.Int32,PX.Objects.AM.ReadDirection,System.DateTime)">
            <summary>
            Returns the available blocks based on the requested total block size and the direction. 
            If less block times found it will return them all and the results will indicate as such
            </summary>
            <param name="requestedBlockSize">Total requested blocks</param>
            <param name="direction">Read direction (getting blocks from the start when forward or end of the day when backwards)</param>
            <param name="startingTime">The first time the available blocks should be returned from.</param>
            <returns>List of available blocks. The blocks will include all available time which could be more or less than the requested size based on block records.</returns>
        </member>
        <member name="M:PX.Objects.AM.SchdDateDetail`1.LargestAvailBlocks">
            <summary>
            Returns the Schd Detail containing the largest available blocks
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.SchdDateDetail`1.GetTimeRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Get the min and max times from the given detail
            </summary>
            <param name="schdDetail"></param>
            <returns>Item1 = Min Time; Item2 = Max Time</returns>
        </member>
        <member name="F:PX.Objects.AM.SchdDateDetail`1.SchdDetailResults`1.IsDateFirstAvailable">
            <summary>
            Indicates if the results contains the first available schd detail row for the given date and direction requested.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.SchdDateDetail`1.SchdDetailResults`1.IsTimeRequestedAvailable">
            <summary>
            Indicates if the results contains the requested time in the results.
            This is helpful when the schedule process needs to know if there is a skip in a sequence and the first available is not the requested starting time slot
            (most likely due to another order being scheduled in the first available time slot).
            </summary>
        </member>
        <member name="F:PX.Objects.AM.SchdDateDetail`1.SchdDetailResults`1.SchdDetailSummary">
            <summary>
            Summary values of the results
            </summary>
        </member>
        <member name="F:PX.Objects.AM.SchdDateDetail`1.SchdDetailResults`1.Results">
            <summary>
            Schd Detail results related to the requested information
            </summary>
        </member>
        <member name="T:PX.Objects.AM.SchedulePlanBomCopy">
            <summary>
            Calculate the bom operations and the required schedule for a plan item (not an actual order compared to ProductionBomCopy)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SchedulePlanBomCopy.BlockSize">
            <summary>
            Scheduling block size (in minutes) for APS
            </summary>
        </member>
        <member name="M:PX.Objects.AM.SchedulePlanBomCopy.CreateScheduleDetail(PX.Objects.AM.AMSchdOper,PX.Objects.AM.AMBomOper,System.Decimal)">
            <summary>
            Creates the Daily schedule detail per operation
            </summary>
            <param name="amSchdOper">New plan operation to schedule</param>
            <param name="sourceAmBomOper">Source bom operation record</param>
            <returns>The sourced schedule operation with updated details</returns>
        </member>
        <member name="M:PX.Objects.AM.SchedulePlanBomCopy.GetOrderMaterial">
            <summary>
            Gets the material used in calculating the routing
            (Not for use when using Fixed Manufacturing Lead Times)
            </summary>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.SchedulePlanBomCopy.AMPlanMaterial">
            <summary>
            <see cref="T:PX.Objects.AM.AMProdMatl"/> with additional reference fields
            </summary>
        </member>
        <member name="P:PX.Objects.AM.SchedulePlanBomCopy.AMPlanMaterial.PlanDate">
            <summary>
            The date the material is needed
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ShiftMaint">
            <summary>
            Manufacturing Shift Maintenance
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Standalone.AMEstimateItem.ExtCostDisplay">
            <summary>
            For use in totals display without a currency view impact
            (hiding from currency toggle)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Standalone.AMEstimateItem.Body">
            <summary>
            Rich text description of the item/estimate
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Standalone.AMEstimatePrimary">
            <summary>
            Primary Estimate record
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Standalone.AMEstimatePrimary.isLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Standalone.AMEstimatePrimary.IsLockedByQuote">
            <summary>
            When the estimate is linked to specific quote orders, the quote order will drive some fields such as mark as primary which should prevent the user from making changes on the estimate directly
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Standalone.AMRPItemSite">
            <summary>
            Standalone copy of AMRPItemSite to remove all field validation during processing (Ex: inventory item marked for delete)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.Standalone.AMRPItemSite._AMGroupWindow">
            <summary>
            Days of Supply for the Inventory Planning
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ToolMaint">
            <summary>
            Manufacturing Tool Maintenance
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ToolSchdDateDetail.ToolScheduleQty">
            <summary>
            Total Tool Schedule Qty
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ToolSchdDateDetail.FlattenSchdDetail(System.Collections.Generic.List{PX.Objects.AM.AMToolSchdDetail})">
            <summary>
            Remove any overlaps times for easier processing later. Make the list a consecutive set of time periods
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ToolScheduleEngine.TrySchedule``1(PX.Objects.AM.AMSchdOper,PX.Objects.AM.ReadDirection,PX.Objects.AM.AMDateInfo,System.Collections.Generic.List{``0},System.DateTime,PX.Objects.AM.AMToolMst,PX.Objects.AM.AMProdTool,System.Collections.Generic.List{PX.Objects.AM.AMToolSchdDetail},System.Nullable{System.DateTime}@,System.Collections.Generic.List{PX.Objects.AM.AMToolSchdDetail}@)">
            <summary>
            Try to schedule a given tool for a given date and schd detail
            </summary>
            <typeparam name="T"></typeparam>
            <param name="schdOper"></param>
            <param name="scheduleDirection"></param>
            <param name="dateInfo"></param>
            <param name="schdDetail">These are the schedule records we are going to plan against. Such as <see cref="T:PX.Objects.AM.AMWCSchdDetail"/> so we can use the calculated time from its calendar.</param>
            <param name="schedulingDateTime">The date time currently being scheduled. This date time is the time we need to start scheduling</param>
            <param name="tool"></param>
            <param name="prodTool"></param>
            <param name="existingToolSchdDetail">Any existing tool schedule detail</param>
            <param name="nextBestToolDateTime">date to use for next attempt in scheduling process</param>
            <param name="newToolSchdDetail">The new calculated tool schd detail to insert into cache (not yet inserted)</param>
            <returns>True of the tool can be scheduled with the given parameters</returns>
        </member>
        <member name="T:PX.Objects.AM.UnreleasedMaterialAllocations">
            <summary>
            Unreleased Allocated Production Material Process
            </summary>
        </member>
        <member name="F:PX.Objects.AM.UnreleasedMaterialAllocations.AMUnrelMaterialAllocationsFilterRecs">
            <summary>
            filter/search data view
            </summary>
        </member>
        <member name="F:PX.Objects.AM.UnreleasedMaterialAllocations.UnrelMaterialAllocationsDetailRecs">
            <summary>
            Grid Details data view
            </summary>
        </member>
        <member name="T:PX.Objects.AM.AMUnrelMaterialAllocationsFilter">
            <summary>
            The filter for the Unreleased Material Allocations (AM305500) form,
            which corresponds to the <see cref="T:PX.Objects.AM.UnreleasedMaterialAllocations"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.VendorShipmentEntry">
            <summary>
            Manufacturing Vendor Shipments (AM310000)
            </summary>
        </member>
        <member name="F:PX.Objects.AM.VendorShipmentEntry.ShipmentProdOrders">
            <summary>
            Prod. Orders For Vendor Shipments
            </summary>
        </member>
        <member name="T:PX.Objects.AM.VisualBOMMaint">
            <summary>
            Bill of Material Maintenance graph
            Main graph for managing a Bill of Material (BOM)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.Redirect(System.String)">
            <summary>
            Redirect to this graph for the given BOM
            </summary>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.Redirect(System.String,System.String)">
            <summary>
            Redirect to this graph for the given BOM / effective date
            </summary>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem)">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.CheckDuplicateEntry(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.Nullable{System.Int32})">
            <summary>
            Checks for duplicate item in a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="matlRow">source material row to check against</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="subItemID">SUbItemID</param>
            <returns>True if the row can be added, false otherwise</returns>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.DuplicateEntryMessage(PX.Data.PXFieldVerifyingEventArgs,PX.Objects.AM.AMBomMatl,PX.Objects.IN.InventoryItem,System.String)">
            <summary>
            Builds and creates the warning/error message related to duplicates items on a BOM
            </summary>
            <param name="e">Calling Field Verifying event args</param>
            <param name="duplicateAMBomMatl">The found duplicate AMBomMatl row</param>
            <param name="inventoryItem">Inventory item row of newly entered inventory ID (from field verifying)</param>
            <param name="setupCheck">BOM Setup duplicate setup option indicating warning or error</param>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.DefaultItemSiteByBOM(PX.Objects.AM.AMBomItem)">
            <summary>
            Create an INItemSite record if one doesn't exist for the bom item/site
            </summary>
            <param name="amBomItem">BOM containing item/site ids</param>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.DefaultItemSite(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Create an INItemSite record if one doesn't exist for the bom item/site
            </summary>
        </member>
        <member name="M:PX.Objects.AM.VisualBOMMaint.InsertMissingINItemSite">
            <summary>
            Insert INItemSite records based on inserted bom item or matl records
            </summary>
        </member>
        <member name="T:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter">
            <summary>
            The filter for the Visual BOM (AM216000) form, which corresponds to the <see cref="T:PX.Objects.AM.VisualBOMMaint"/> graph.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.BOMID">
            <summary>
            The identifier for a specific bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.RevisionID">
            <summary>
            The revision number that specifies which version of the BOM is being used.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.Descr">
            <summary>
            An optional description for this bill of material.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.EffStartDate">
            <summary>
            The date the revision becomes effective.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.EffEndDate">
            <summary>
            The optional date the revision is no longer effective.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.InventoryID">
            <summary>
            The inventory ID for the stock item.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.SubItemID">
            <summary>
            The subitem ID.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.SiteID">
            <summary>
            The default warehouse for receipts from production orders.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.VisualBOMMaint.VisualBOMFilter.Status">
            <summary>
            The status of the selected revision.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WCMaint">
            <summary>
            Manufacturing Work Center Maintenance
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterUpdateFilter">
            <summary>
            The settings of the Operation Mass Update dialog box on the Where Used tab of the Work Centers (AM207000) form,
            which corresponds to the <see cref="T:PX.Objects.AM.WCMaint"/> graph. 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WIPAdjustmentEntry">
            <summary>
            Manufacturing WIP Adjustment Entry
            </summary>
        </member>
        <member name="F:PX.Objects.AM.WIPAdjustmentEntry.UnreleasedWipByOperation">
            <summary>
            Unrleased WIP Amount by production order operation
            (key = AMProdOper.JoinKey())
            </summary>
        </member>
        <member name="M:PX.Objects.AM.WIPAdjustmentEntry.CreateScrapTransactions(PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdItem,PX.Objects.AM.MoveOperationQtyTotals,PX.Data.PXCache)">
            <summary>
            Create transactions related to a move transaction and scrap. Scrap cost is distributed across the current and previous operations (reason for a list of AMMTran as return)
            </summary>
            <param name="moveTransaction">Move transaction driving scrap transactions</param>
            <param name="prodItem">Production Item record related to the currently processing move transaction</param>
            <param name="prodOperCache">AMProdOper cache for locating cached updates</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.WIPAdjustmentEntry.GetScrapAmount(PX.Objects.AM.AMMTran,PX.Objects.IN.InventoryItem,PX.Objects.AM.AMProdItem,PX.Objects.AM.AMProdOper,System.String,System.Decimal,PX.Objects.AM.AMMTran)">
            <summary>
            Get the correct scrap amount based on the given transaction and order information
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.WIPAdjustmentEntry.LoadUnreleasedWipByOperation(PX.Data.PXGraph,PX.Objects.AM.AMMTran)">
            <summary>
            Cache related unreleased transaction totals by production operation linked to the given BATCH for use later
            </summary>
            <param name="graph"></param>
            <param name="ammTran"></param>
        </member>
        <member name="M:PX.Objects.AM.WIPAdjustmentEntry.GetUnreleasedWipByOperation(PX.Objects.AM.AMProdOper)">
            <summary>
            Safe lookup to UnreleasedWipByOperation for an unrelased production WIP amount by operation
            </summary>
            <param name="prodOper"></param>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.ProdScanHeader.parentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="P:PX.Objects.AM.ProdScanHeader.ParentLotSerialRequired">
            <summary>
            Parent lot number is/isn't required for material transactions
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCalendarHelper">
            <summary>
            Helps to set workcenter shift value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.WorkCenterCalendarHelper.GetWorkingHours(System.DateTime)">
            <summary>
            Calculate the current work center's working hours based on shift calendars
            </summary>
            <param name="date">Date of work center calendar</param>
            <returns>Combined/calculated date info from all shift calendars</returns>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCapacityInq">
            <summary>
            Work Center Capacity Inquiry
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCapacityInq.WorkCenterCapacityFilter">
            <summary>
            The filter for the Work Center Capacity (AM405000) form,
            which corresponds to the <see cref="T:PX.Objects.AM.WorkCenterCapacityInq"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCapacityInq.WorkCenterCapacityDetail">
            <summary>
            Details of work center capacities. These records are generated by the <see cref="T:PX.Objects.AM.WorkCenterCapacityInq"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCapacityInq.WorkCenterCapacityDetail.fromDate">
            <summary>
            Starting date range
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkCenterCapacityInq.WorkCenterCapacityDetail.FromDate">
            <summary>
            Starting date range
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCapacityInq.WorkCenterCapacityDetail.toDate">
            <summary>
            Ending date range
            </summary>
        </member>
        <member name="P:PX.Objects.AM.WorkCenterCapacityInq.WorkCenterCapacityDetail.ToDate">
            <summary>
            Ending date range
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCrewScheduleInq">
            <summary>
            Manufacturing - Work Center Crew Schedule - Inquiry
            Screen ID = AM405100, Enabled with APS Only. 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCrewScheduleInq.WorkCenterCrewScheduleFilter">
            <summary>
            The filter for the Work Center Crew Schedule (AM405100) form,
            which corresponds to the <see cref="T:PX.Objects.AM.WorkCenterCrewScheduleInq"/> graph.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.WorkCenterCrewScheduleInq.WorkCenterCrewScheduleDetail">
            <summary>
            Detail DAC for Work Center Crew Schedule screen (Not a DB Table)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.AMBomItemExt">
            <summary>
            A DAC extension that is used to specify warehouse properties when multiple base currencies are activated.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.AMBomItemExt.SiteID">
            <summary>
            The warehouse ID.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.BatchExt">
            <summary>
            Manufacturing Cache Extension for <see cref="T:PX.Objects.GL.Batch"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.BatchExt.aMDocType">
            <summary>
            Manufacturing Document Type
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.BatchExt.AMDocType">
            <summary>
            Manufacturing Document Type
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.BatchExt.aMBatNbr">
            <summary>
            Manufacturing Batch Number
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.BatchExt.AMBatNbr">
            <summary>
            Manufacturing Batch Number
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CRCreateSalesOrderFilterExt">
            <summary>
            Manufacturing cache extension on Opportunity Maint. - "Create Sales Order" process/panel for <see cref="T:PX.Objects.CR.Extensions.CRCreateSalesOrder.CreateSalesOrderFilter"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRCreateSalesOrderFilterExt.AMIncludeEstimate">
            <summary>
            Indicates if the estimates should be included in the create sales order process.
            When checked the current opp estimates will covert to sales order detail lines if valid.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRCreateSalesOrderFilterExt.AMCopyConfigurations">
            <summary>
            Indicates if the configurations should be included in the create sales order process.
            When checked the current opp configurations will copy to sales order.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CROpportunityExt">
            <summary>
            MFG extension to CROpportunity PXProjection to use CROpportunityRevisionExt
            (non table extension)
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CROpportunityExt.aMEstimateQty">
            <summary>
            Pointer to CROpportunityRevisionExt.aMEstimateQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CROpportunityExt.AMEstimateQty">
            <summary>
            Pointer to CROpportunityRevisionExt.AMEstimateQty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CROpportunityExt.aMCuryEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.aMCuryEstimateTotal
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CROpportunityExt.AMCuryEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.AMCuryEstimateTotal
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CROpportunityExt.aMEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.aMEstimateTotal
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CROpportunityExt.AMEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.AMEstimateTotal
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CROpportunityProductsExt.aMConfigKeyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CROpportunityProductsExt.AMConfigKeyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CRQuoteExt">
            <summary>
            MFG extension to CRQuote PXProjection to use CROpportunityRevisionExt
            (non table extension)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.CacheExtensions.CRQuoteExt.IsActive">
            <summary>
            Determines if extension is active
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CRQuoteExt.aMEstimateQty">
            <summary>
            Pointer to CROpportunityRevisionExt.aMEstimateQty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRQuoteExt.AMEstimateQty">
            <summary>
            Pointer to CROpportunityRevisionExt.AMEstimateQty
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CRQuoteExt.aMCuryEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.aMCuryEstimateTotal
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRQuoteExt.AMCuryEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.AMCuryEstimateTotal
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.CRQuoteExt.aMEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.aMEstimateTotal
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRQuoteExt.AMEstimateTotal">
            <summary>
            Pointer to CROpportunityRevisionExt.AMEstimateTotal
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRSetupExt.AMConfigurationEntry">
            <summary>
            Indicates if Opportunities allow the user to launch the configuration entry page.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.CRSetupExt.AMEstimateEntry">
            <summary>
            Indicates if opportunities will allow estimates
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.EPEmployeeExt">
            <summary>
            Manufacturing Employee Extension
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.EPEmployeeExt.amProductionEmployee">
            <summary>
            Indicates an employee is a production employee for use in Manufacturing processes such as 
            labor transactions and scheduling as a resource
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.EPEmployeeExt.AMProductionEmployee">
            <summary>
            Indicates an employee is a production employee for use in Manufacturing processes such as 
            labor transactions and scheduling as a resource
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemClassAMBaseExt">
            <summary>
            Manufacturing base extension of Item Class 
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemClassAMBaseExt.isProcessMFG">
            <inheritdoc cref="P:PX.Objects.AM.CacheExtensions.INItemClassAMBaseExt.IsProcessMFG"/>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassAMBaseExt.IsProcessMFG">
            <summary>
            Is the document linked to the Process Manufacturing feature.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemClassExt">
            <summary>
            Manufacturing extension of the Item Warehouse Detail
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMDaysSupply">
            <summary>
            Days of Supply
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMSourceSiteID">
            <summary>
            Source Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMSafetyStock">
            <summary>
            Safety Stock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMMinQty">
            <summary>
            Reorder Point
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMMinOrdQty">
            <summary>
            Min Order Qty.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMMaxOrdQty">
            <summary>
            Max Order Qty.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMLotSize">
            <summary>
            Lot Size
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemClassExt.AMMFGLeadTime">
            <summary>
            Manufacturing Lead Time
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemPlanAMExtension">
            <summary>
            An item plan that is used for manufacturing.
            </summary>    
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemPlanAMExtension.aMSoftSupplyPlanID">
            <summary>
            Soft link the given demand plan to a supply plan
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemPlanAMExtension.AMSoftSupplyPlanID">
            <summary>
            Soft link the given demand plan to a supply plan
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemSiteExt">
            <summary>
            I n item site ext
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemSiteExt.aMBOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMBOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INItemSiteExt.aMPlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMPlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMLotSizeOverride">
            <summary>
            Override of Lot Size
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMLotSize">
            <summary>
            Lot Size
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMaxOrdQtyOverride">
            <summary>
            Override of Max Order Qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMaxOrdQty">
            <summary>
            Max Order Qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMinOrdQtyOverride">
            <summary>
            Override Min Order Qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMinOrdQty">
            <summary>
            Min Order Qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMFGLeadTimeOverride">
            <summary>
            Override of Manufacturing Lead Time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMFGLeadTime">
            <summary>
            Manufacturing Lead Time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMGroupWindowOverride">
            <summary>
            Override Days of Supply
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMGroupWindow">
            <summary>
            Days of Supply
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMConfigurationID">
            <summary>
            Item configuration ID. If null, this item will fallback to StockItem configuration ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMSafetyStockOverride">
            <summary>
            Override of Safety Stock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMSafetyStock">
            <summary>
            Safety Stock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMinQtyOverride">
            <summary>
            Override of Reorder Point
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMMinQty">
            <summary>
            Reorder Point
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMScrapOverride">
            <summary>
            Scrap Override
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMScrapSiteID">
            <summary>
            Scrap Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMScrapLocationID">
            <summary>
            Scrap Location
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMTransferLeadTimeOverride">
            <summary>
            Override of Transfer Lead Time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMTransferLeadTime">
            <summary>
            Transfer Lead Time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMSourceSiteID">
            <summary>
            Source Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMSourceSiteIDOverride">
            <summary>
            Override of Source Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMReplenishmentSourceOverride">
            <summary>
            Override of Source
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INItemSiteExt.AMReplenishmentSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPFcst">
            <summary>
            MRP Include Forecasts
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPFcst">
            <summary>
            MRP Include Forecasts
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPFlag">
            <summary>
            MRP Include Inventory On Hand
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPFlag">
            <summary>
            MRP Include Inventory On Hand
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPMPS">
            <summary>
            MRP Include MPS
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPMPS">
            <summary>
            MRP Include MPS
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPPO">
            <summary>
            MRP Include Purchase Orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPPO">
            <summary>
            MRP Include Purchase Orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPProd">
            <summary>
            MRP Include Production Orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPProd">
            <summary>
            MRP Include Production Orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPShip">
            <summary>
            MRP Include Shipments
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPShip">
            <summary>
            MRP Include Shipments
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.INSiteExt.aMMRPSO">
            <summary>
            MRP Include Sales Orders
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.INSiteExt.AMMRPSO">
            <summary>
            MRP Include Sales Orders
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemAMBaseExt">
            <summary>
            Base Manufacturing Cache extension for <see cref="T:PX.Objects.IN.InventoryItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemAMBaseExt.isProcessMFG">
            <inheritdoc cref="P:PX.Objects.AM.CacheExtensions.InventoryItemAMBaseExt.IsProcessMFG"/>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemAMBaseExt.IsProcessMFG">
            <summary>
            Is the document linked to the Process Manufacturing feature.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemCurySettingsExt">
             <summary>
            Manufacturing Cache Extension for <see cref="T:PX.Objects.IN.InventoryItemCurySettings"/>
             </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemCurySettingsExt.AMSourceSiteID">
            <summary>
            Source Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemCurySettingsExt.AMScrapSiteID">
            <summary>
            Scrap Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemCurySettingsExt.AMScrapLocationID">
            <summary>
            Scrap Location
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemExt">
            <summary>
            Cache extension for <see cref="T:PX.Objects.IN.InventoryItem"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemExt.aMBOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMBOMID">
            <summary>
            Default BOM ID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemExt.aMPlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMPlanningBOMID">
            <summary>
            Planning BOM ID
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMLotSize">
            <summary>
            Lot size
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMMaxOrdQty">
            <summary>
            Max order qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMMinOrdQty">
            <summary>
            Min order qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMLowLevel">
            <summary>
            Non UI field - keeps items lowest bom level value used in calculations
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMMFGLeadTime">
            <summary>
            Manufacturing lead time
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMGroupWindowOverride">
            <summary>
            Override of Days of Supply
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMGroupWindow">
            <summary>
            Days of Supply
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMWIPAcctID">
            <summary>
            Work In Process Account
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMWIPSubID">
            <summary>
            Work In Process Sub.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMWIPVarianceAcctID">
            <summary>
            WIP Variance Account
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMWIPVarianceSubID">
            <summary>
            WIP Variance Sub.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMConfigurationID">
            <summary>
            Item configuration ID. If null, this item isn't configurable.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMSafetyStock">
            <summary>
            Safety stock
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMMinQty">
            <summary>
            Min qty
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMQtyRoundUp">
            <summary>
            Qty round up
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMScrapSiteID">
            <summary>
            Scrap Warehouse
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMScrapLocationID">
            <summary>
            Scrap Location
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMMakeToOrderItem">
            <summary>
            Make to Order Item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMDefaultMarkFor">
            <summary>
            Default mark for
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemExt.aMCheckSchdMatlAvailability">
            <summary>
            APS Schedule option - Check for Material Availability.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMCheckSchdMatlAvailability">
            <summary>
            APS Schedule option - Check for Material Availability.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.InventoryItemExt.aMCTPItem">
            <summary>
            Indicates item is a CTP calculated item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMCTPItem">
            <summary>
            Indicates item is a CTP calculated item
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.InventoryItemExt.AMSourceSiteID">
            <summary>
            Source Warehouse
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.OpportunityDocument">
            <summary>
            The default mapping of the <see cref="T:PX.Objects.AM.CacheExtensions.OpportunityDocument" /> mapped cache extension to the specified table.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.OpportunityDocument.quoteID">
            <inheritdoc cref="P:PX.Objects.AM.CacheExtensions.OpportunityDocument.QuoteID"/>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.OpportunityDocument.QuoteID">
            <summary>
            The opportunity quote ID, which is a GUID.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.PMTimeActivityExt.aMIsProd">
            <summary>
            Indicates a production related time activity
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.PMTimeActivityExt.AMIsProd">
            <summary>
            Indicates a production related time activity
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.POCreateFilterExt">
            <summary>
            Manufacturing cache extension for <see cref="T:PX.Objects.PO.POCreate.POCreateFilter"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.ReasonCodeExt">
            <summary>
            Manufacturing cache extension to <see cref="T:PX.Objects.CS.ReasonCode"/>
            </summary>
        </member>
        <member name="F:PX.Objects.AM.CacheExtensions.ReasonCodeExt.Production">
            <summary>
            Constant for Production Reason Code Usage
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.ReasonCodeExt.production">
            <summary>
            BQL Constant for Production Reason Code Usage
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.ReasonCodeExt.ReasonCodeUsagesExt">
            <summary>
            Manufacturing extension to <see cref="T:PX.Objects.CS.ReasonCodeUsages.ListAttribute"/> adding Production to the list of usages
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOCopyParamFilterExt">
            <summary>
            Manufacturing extension on Sales Order - Copy To smart panel
            Filter = <see cref="T:PX.Objects.SO.CopyParamFilter"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOCopyParamFilterExt.AMIncludeEstimate">
            <summary>
            Indicates if the estimates should be included in the copy.
            This option also checks the settings for the SOOrderType.AMAllowEstimates and performs a copy or convert depending on the setup and from/to order types.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOCopyParamFilterExt.EstimateAction">
            <summary>
            Estimate copy order actions
            </summary>
        </member>
        <member name="F:PX.Objects.AM.CacheExtensions.SOCopyParamFilterExt.EstimateAction.NoAction">
            <summary>
            Indicates there is no action taken on the estimates of the order being copied. 
            The new order will not have any reference to any estimate.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.CacheExtensions.SOCopyParamFilterExt.EstimateAction.CopyAction">
            <summary>
            Copy the current estimate to a new estimate on the new order.
            </summary>
        </member>
        <member name="F:PX.Objects.AM.CacheExtensions.SOCopyParamFilterExt.EstimateAction.ConvertAction">
            <summary>
            Convert the current estimates to document details on the new order.
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOLineExt.aMConfigKeyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOLineExt.AMConfigKeyID">
            <summary>
            Configuration key ID which represents the key used/generated from the results of a finished configuration
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOLineExt.aMQtyReadOnly">
            <summary>
            Read only sales order line quantity
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOLineExt.AMQtyReadOnly">
            <summary>
            Read only sales order line quantity
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOLineExt.aMUOMReadOnly">
            <summary>
            Read only sales order line UOM
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOLineExt.AMUOMReadOnly">
            <summary>
            Read only sales order line UOM
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOLineSplitExt">
            <summary>
            Manufacturing cache extension of <see cref="T:PX.Objects.SO.SOLineSplit"/>
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOLineSplitExt.aMProdCreate">
            <summary>
            Mark for Production
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOLineSplitExt.AMProdCreate">
            <summary>
            Mark for Production
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOOrderExt.aMUseConfigPrice">
            <summary>
            If the order is being updated that triggers the update of all sales line prices, we need to know so we can override and get the config line prices
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderExt.AMUseConfigPrice">
            <summary>
            If the order is being updated that triggers the update of all sales line prices, we need to know so we can override and get the config line prices
            </summary>
        </member>
        <member name="T:PX.Objects.AM.CacheExtensions.SOOrderTypeExt">
            <summary>
            Manufacturing Cache Extension for <see cref="T:PX.Objects.SO.SOOrderType"/>
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMProductionOrderEntry">
            <summary>
            Indicates if the Order Type when selected on a sales order
            allows the user to click the ACtions > Production Orders button to create 
            production orders for the given sales order number
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMProductionOrderEntryOnHold">
            <summary>
            Indicates for those order types that allow production if the status of the order
            must be only approved (true) or any status (false)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMConfigurationEntry">
            <summary>
            Indicates if the Order Type allows the user to launch the configuration entry page.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMEstimateEntry">
            <summary>
            Indicates if the Order Type allows the user to enter estimates on a sales order.
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMEnableWarehouseLinkedProduction">
            <summary>
            Indicates if Warehouse should be enabled with Linked Production 
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMMTOOrder">
            <summary>
            Indicates if the Order Type when selected on a sales order
            allows the user to click the ACtions > Production Orders button to create 
            production orders for the given sales order number
            </summary>
        </member>
        <member name="P:PX.Objects.AM.CacheExtensions.SOOrderTypeExt.AMIncludeSupplyPlan">
            <summary>
            Will RMA supply lines be included in MRP
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Common.AMwildcard_">
            <summary>
            AM%
            </summary>
        </member>
        <member name="T:PX.Objects.AM.Common.moduleAM">
            <summary>
            Represents the Manufacturing module string "AM" for use in BQL Statements
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Common.AMVersionNumber">
            <summary>
            Get the current Manufacturing library version number
            </summary>
            <returns></returns>
        </member>
        <member name="P:PX.Objects.AM.Common.AMMajorVersionNumber">
            <summary>
            Get the current Manufacturing library version number
            </summary>
            <returns></returns>
        </member>
        <member name="P:PX.Objects.AM.Common.AMVersionDate">
            <summary>
            Get the current Manufacturing library version number
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.Common.RetrieveLinkerTimestamp(System.String)">
            <summary>
            Retrieves the linker timestamp.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
            <remarks>http://www.codinghorror.com/blog/2005/04/determining-build-date-the-hard-way.html</remarks>
        </member>
        <member name="M:PX.Objects.AM.Common.SiteMap.GetScreenTitle(System.String)">
            <summary>
            Returns the screen title based on the screen ID as it exists in the site map
            </summary>
            <param name="screenID">ScreenID</param>
            <returns>Screen Title</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.SiteMap.GetScreenTitle(System.Type)">
            <summary>
            Returns the screen title based on the screens graph type as it exists in the site map
            </summary>
            <param name="graphType">Screen graph type</param>
            <returns>Screen Title</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.SiteMap.GetScreenID(System.Type)">
            <summary>
            Returns the screen ID based on the screens graph type as it exists in the site map
            </summary>
            <param name="graphType">Screen graph type</param>
            <returns>Screen ID</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.GetEnabled``1(PX.Data.PXCache,System.Object)">
            <summary>
            Returns the current enabled status of a given field
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.GetEnabled(PX.Data.PXCache,System.Object,System.String)">
            <summary>
            Returns the current enabled status of a given field
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.AddCacheView``1(PX.Data.PXGraph)">
            <summary>
            Add a given DAC view to a graphs cache 
            </summary>
            <typeparam name="TCache"></typeparam>
            <param name="graph">graph to add cache to</param>
            <returns>True if view added</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.AddCacheView(PX.Data.PXGraph,System.Type)">
            <summary>
            Add a given DAC view to a graphs cache 
            </summary>
            <param name="graph">graph to add cache to</param>
            <param name="cacheType">Type of cache</param>
            <returns>True if view added</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.AddCache``1(PX.Data.PXGraph)">
            <summary>
            Add a given DAC to a graphs cache 
            </summary>
            <typeparam name="TCache"></typeparam>
            <param name="graph">graph to add cache to</param>
            <returns>True if cache added</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.FindRow``1(PX.Data.PXGraph,``0)">
            <summary>
            Find the given row in cache, if not return the row given
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Cache.AddRowToCache``1(PX.Data.PXGraph,``0)">
            <summary>
            Add a given row to change cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Current.BusinessDate(PX.Data.PXGraph)">
            <summary>
            Return the current business date of the graph
            </summary>
            <param name="graph">calling graph used to get the business date</param>
            <returns>Non-nullable DateTime</returns>
        </member>
        <member name="P:PX.Objects.AM.Common.Dates.EndOfTimeDate">
            <summary>
            6/6/2079
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Common.Dates.BeginOfTimeDate">
            <summary>
            1/1/1900
            </summary>
        </member>
        <member name="P:PX.Objects.AM.Common.Dates.NowTimeOfDay">
            <summary>
            <see cref="P:PX.Objects.AM.Common.Dates.Now"/> without seconds
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.ToCultureString(PX.Data.PXGraph,System.Nullable{System.DateTime})">
            <summary>
            Formats the DateTime to the correct culture string value - date and time portion.
            This is useful for passing date parameters as string when the culture might have DD/MM/YYYY vs the US standard of MM/DD/YYYY
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.ToCultureShortDateString(PX.Data.PXGraph,System.Nullable{System.DateTime})">
            <summary>
            Formats the DateTime to the correct culture string value - date portion only.
            This is useful for display date values in strings
            </summary>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.IsDateNull(System.Nullable{System.DateTime})">
            <summary>
            Checks if a date is null or 1/1/1900
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.IsDefaultDate(System.DateTime)">
            <summary>
            Check if the date is begin/end of time date
            </summary>
            <param name="dateTime"></param>
            <returns>True if the date matches the begin or end of time dates</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.NextWeekday(System.DateTime,System.Boolean)">
            <summary>
            Get the next weekday date from a date that may or may not be on a weekend
            </summary>
            <param name="date">Date to convert to the next weekday</param>
            <param name="calculateBackward">Should the weekday be before the weekend (if true) or after the weekend date (false)</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.IsWeekendDate(System.DateTime)">
            <summary>
            Is provided date a weekend date
            </summary>
            <param name="date">Date to check</param>
            <returns>true when day is saturday or sunday</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.StartBeforeEnd(System.DateTime,System.DateTime)">
            <summary>
            Determine if start date/time is before end date/time
            </summary>
            <returns>True if start date/time is before end date/time</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Dates.StartBeforeEnd(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Determine if start date/time is before end date/time with nulls allowed
            </summary>
            <returns>True if start date/time is before end date/time</returns>
        </member>
        <member name="M:PX.Objects.AM.Common.Strings.TimespanMessage(System.TimeSpan)">
            <summary>
            Write a timespan as a runtime message
            </summary>
            <param name="timeSpan">timespan representing runtime</param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.JoinKeys(PX.Objects.AM.AMProdOper)">
            <summary>
            Combine the key fields into a single string.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.IsSameMatl(PX.Objects.AM.AMMTran,PX.Objects.AM.AMProdMatl)">
            <summary>
            Does the given <see cref="T:PX.Objects.AM.AMMTran"/> contain a reference to the given <see cref="T:PX.Objects.AM.AMProdMatl"/>
            </summary>
            <param name="tran"></param>
            <param name="prodMatl"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.IsTransactionOriginal(PX.Objects.AM.AMMTran,PX.Objects.AM.AMMTran)">
            <summary>
            Is this transaction the original to the given transaction
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.JoinDacKeys(PX.Objects.AM.AMMTran)">
            <summary>
            Combine the key fields into a single string.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.GetTotalReqQtyCompanyRounded(PX.Objects.AM.AMProdMatl,System.Decimal)">
            <summary>
            Gets the total required qty for a given order qty with a rounded value by the decimal places configured for the branch/company
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.GetTotalReqQty(PX.Objects.AM.AMProdMatl,System.Decimal)">
            <summary>
            Gets the total required qty for a given order qty
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.GetTotalReqQty(PX.Objects.AM.AMProdMatl,System.Decimal,System.Boolean)">
            <summary>
            Gets the total required qty for a given order qty
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.GetTotalBaseReqQty(PX.Objects.AM.AMProdMatl,System.Decimal)">
            <summary>
            Gets the total base required qty for a given order qty
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.GetTotalBaseReqQty(PX.Objects.AM.AMProdMatl,System.Decimal,System.Boolean)">
            <summary>
            Gets the total base required qty for a given order qty
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.MapAMExtensionFields(PX.Objects.AM.CacheExtensions.INItemSiteExt,PX.Objects.AM.CacheExtensions.InventoryItemExt)">
            <summary>
            Map extension fields from InventoryItemExt to INItemSiteExt
            </summary>
        </member>
        <member name="M:PX.Objects.AM.DACExtensionMethods.IsSameOrder(PX.Objects.AM.IProdOrder,PX.Objects.AM.IProdOrder)">
            <summary>
            Matching OrderType and ProdOrdID
            </summary>
        </member>
        <member name="T:PX.Objects.AM.ExtensionMethods">
            <summary>
            Manufacturing Extension Methods
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.TrimIfNotNull(System.String)">
            <summary>
            Trim a string value without the need to first check for null
            </summary>
            <param name="value"></param>
            <returns>null when null, otherwise the string trimmed</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.TrimIfNotNullEmpty(System.String)">
            <summary>
            Trim a string value without the need to first check for null
            (Null returns empty string)
            </summary>
            <param name="value"></param>
            <returns>empty string when null, otherwise the string trimmed</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.PadRightSpace(System.String)">
            <summary>
            Pads right 1 more space if the string contains a value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.PadRightSpace(System.String,System.Int32)">
            <summary>
            Pads right a given set of spaces if the string contains a value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.EqualsWithTrim(System.String,System.String)">
            <summary>
            Compare a pair of strings trimming both values and excluding case
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.Reverse(System.String)">
            <summary>
            Reverse the string characters
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.BetweenInclusive(System.IComparable,System.IComparable,System.IComparable)">
            <summary>
             Determines if a given value is between two values (including a matching value)
            </summary>
            <returns>True if between the from/to values</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.BetweenExclusive(System.IComparable,System.IComparable,System.IComparable)">
            <summary>
            Determines if a given value is between two values (excluding a matching value)
            </summary>
            <returns>True if between the from/to values</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.PreviousDateOf(System.Nullable{System.DateTime},System.DayOfWeek)">
            <summary>
            Returns the date of the previous day of week for the given date time
            </summary>
            <param name="dt">Date to get the previous date from</param>
            <param name="dayOfWeek">previous day of week to return</param>
            <returns>Date of the previous day of week. 
            When date matches the day of week the same date is returned.
            When date is null the return is null</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.PreviousDateOf(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns the date of the previous day of week for the given date time
            </summary>
            <param name="dt">Date to get the previous date from</param>
            <param name="dayOfWeek">previous day of week to return</param>
            <returns>Date of the previous day of week. When date matches the day of week the same date is returned.</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.NextDateOf(System.Nullable{System.DateTime},System.DayOfWeek)">
            <summary>
            Returns the date of the next day of week for the given date time
            </summary>
            <param name="dt">Date to get the next date from</param>
            <param name="dayOfWeek">next day of week to return</param>
            <returns>Date of the next day of week. 
            When date matches the day of week the same date is returned.
            When date is null the return is null</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.NextDateOf(System.DateTime,System.DayOfWeek)">
            <summary>
            Returns the date of the next day of week for the given date time
            </summary>
            <param name="dt">Date to get the next date from</param>
            <param name="dayOfWeek">next day of week to return</param>
            <returns>Date of the next day of week. When date matches the day of week the same date is returned.</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.DacFieldsEqual``1(``0,``0)">
            <summary>
            Compare public DAC fields to see if values are each equal.
            (Excludes audit and tstamp fields)
            </summary>
            <typeparam name="T">DAC table</typeparam>
            <param name="obj1"></param>
            <param name="obj2"></param>
            <returns>True when all public properties are equal</returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.DacFieldsEqual``1(``0,``0,System.String[])">
            <summary>
            Compare public DAC fields to see if values are each equal.
            </summary>
            <typeparam name="T">DAC table</typeparam>
            <param name="obj1"></param>
            <param name="obj2"></param>
            <param name="ignore">property names to ignore in comparison</param>
            <returns>True when all public properties are equal</returns>
            <remarks>Sourced: http://stackoverflow.com/questions/506096/comparing-object-properties-in-c-sharp </remarks>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.GetLongRunningTimeSpan``1(``0)">
            <summary>
            Returns a graphs long running process Timespan
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graph"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.IsSameSign(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Are the given values of the same sign (+, +) or (-, -)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.IsSameSign(System.Decimal,System.Decimal)">
            <summary>
            Are the given values of the same sign (+, +) or (-, -)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.AddOrIncrease(System.Collections.Generic.Dictionary{System.String,System.Decimal},System.String,System.Decimal)">
            <summary>
            Add the key to the dictionary or if found update the existing value
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Split a collection into X number of sub lists
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="parts"></param>
            <remarks>https://stackoverflow.com/questions/438188/split-a-collection-into-n-parts-with-linq</remarks>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.TruncateDecimalPlaces(System.Decimal,System.Int32)">
            <summary>
            truncate a decimal value by only including the number of places
            </summary>
            <remarks>https://codereview.stackexchange.com/questions/51951/truncate-decimal-places</remarks>
        </member>
        <member name="M:PX.Objects.AM.ExtensionMethods.ToShortString(System.DayOfWeek)">
            <summary>
            Returns the string of <see cref="T:System.DayOfWeek"/> using first 3 characters.
            </summary>
            <example>Monday is "Mon", Thursday is "Thu"</example>
            <param name="dow">Day of week</param>
        </member>
        <member name="T:PX.Objects.AM.INPlanTypeHelper">
            <summary>
            Manufacturing <see cref="T:PX.Objects.IN.INPlanConstants"/> helper class
            </summary>
        </member>
        <member name="M:PX.Objects.AM.INPlanTypeHelper.IsProduction(System.String)">
            <summary>
            Is the plan type related to production supply or demand
            </summary>
            <param name="planType"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.INPlanTypeHelper.IsMfgPlanType(System.String)">
            <summary>
            Is the plan type of the INPlanType constants used by the Manufacturing modules
            </summary>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.GetDocumentFiles``1(PX.Data.PXCache,``0)">
            <summary>
            Get the attached files related to the given row
            </summary>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.GetFileFromFileName``1(PX.Data.PXCache,``0,System.String)">
            <summary>
            Get the file object which contains a matching file name
            </summary>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.CreateFileRedirect(System.String,System.String)">
            <summary>
            Write the content to a file in memory and download to the user
            </summary>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.CreateFileRedirect(System.String,System.String,System.Boolean)">
            <summary>
            Write the content to a file in memory and download to the user
            </summary>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.CleanFileName(System.String)">
            <summary>
            Make sure the file name doesn't contain any invalid characters
            </summary>
            <remarks>
            https://stackoverflow.com/questions/146134/how-to-remove-illegal-characters-from-path-and-filenames
            </remarks>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.FileSizeKB(PX.SM.FileInfo)">
            <summary>
            Find the rough size of the file in KB
            </summary>
        </member>
        <member name="M:PX.Objects.AM.NoteFileHelper.BinDataToString(PX.SM.FileInfo)">
            <summary>
            Convert file info content (BinData) to UTF8 string encoded value
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.ObjCompareHelper.ChangesExist(PX.Data.PXCache,PX.Objects.AM.AMBomMatl,PX.Objects.AM.AMBomMatl,System.String[])">
            <summary>
            BOM MATERIAL
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ObjCompareHelper.ChangesExist(PX.Data.PXCache,PX.Objects.AM.AMBomStep,PX.Objects.AM.AMBomStep,System.String[])">
            <summary>
            BOM STEPS
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ObjCompareHelper.ChangesExist(PX.Data.PXCache,PX.Objects.AM.AMBomTool,PX.Objects.AM.AMBomTool,System.String[])">
            <summary>
            BOM TOOLS
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ObjCompareHelper.ChangesExist(PX.Data.PXCache,PX.Objects.AM.AMBomOvhd,PX.Objects.AM.AMBomOvhd,System.String[])">
            <summary>
            BOM OVERHEAD
            </summary>
        </member>
        <member name="M:PX.Objects.AM.ObjCompareHelper.NonSystemFieldNames(PX.Data.PXCache)">
            <summary>
            When comparing rows these fields are always excluded from the compare for all bom tables
            </summary>
            <returns></returns>
        </member>
        <member name="T:PX.Objects.AM.OEMHelper">
            <summary>
            Acumatica OEM helper class for Manufacturing
            </summary>
        </member>
        <member name="F:PX.Objects.AM.OEMHelper.MYOBFeatures.BasicInvReplenish">
            <summary>
            MYOB - "Basic Inventory Replenishments" feature.
            This is a limited display of the full Acumatica set of features found in "Replenishments" (PX.Objects.CS.FeaturesSet+replenishment)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.CheckForProcessIsRunning(PX.Data.PXGraph)">
            <summary>
            Check to see if the current graph already has a process that is running and if so throw an exception
            </summary>
            <param name="graphOfProcess">Graph of process to check</param>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.CheckForProcessIsRunningByCompany(PX.Data.PXGraph)">
            <summary>
            Check to see if the current graph already has a process that is running with matching key/value and if so throw an exception
            </summary>
            <param name="graphOfProcess">Graph of process to check</param>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.CheckForProcessIsRunningByCompany(System.Type)">
            <summary>
            Check to see if the current graph already has a process that is running with matching key/value and if so throw an exception
            </summary>
            <param name="graphType">type of graph related to running process</param>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.CheckForProcessIsRunning(PX.Data.PXGraph,System.String,System.Object)">
            <summary>
            Check to see if the current graph already has a process that is running with matching key/value and if so throw an exception
            </summary>
            <param name="graphOfProcess">Graph of process to check</param>
            <param name="key">key custom data to find and match value</param>
            <param name="value">value to find in custom data of long running process</param>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.CheckForProcessIsRunning(System.Type,System.String,System.Object)">
            <summary>
            Check to see if the current graph already has a process that is running with matching key/value and if so throw an exception
            </summary>
            <param name="graphType">type of graph related to running process</param>
            <param name="key">key custom data to find and match value</param>
            <param name="value">value to find in custom data of long running process</param>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.CheckForProcessIsRunning(System.String,System.Object,System.String,System.Object)">
            <summary>
            Check to see if the current graph already has a process that is running with matching key/value and if so throw an exception
            </summary>
            <param name="screenID">screen ID of process</param>
            <param name="UID">process ID related to graph</param>
            <param name="key">key custom data to find and match value</param>
            <param name="value">value to find in custom data of long running process</param>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.GraphIdsEqual(System.Object,System.Object)">
            <summary>
            Compare the graph UIDs as GUIDs.
            Cannot compare as objects as not always equal.
            </summary>
            <param name="id1"></param>
            <param name="id2"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.PXLongOperationHelper.MatchingScreenIDs(System.String,System.String)">
            <summary>
            Condition and match the screen ID values to determine if they are equal
            </summary>
            <param name="screen1"></param>
            <param name="screen2"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.WriteTimespan(System.TimeSpan,System.String)">
            <summary>
            Used to display execution times for certain processes
            </summary>
            <param name="timeSpan">Timespan object containing execution time</param>
            <param name="description">Description of run time</param>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.CreateTimespanMessage(System.TimeSpan,System.String)">
            <summary>
            Create a string message displaying the timespan time
            </summary>
            <param name="timeSpan">TimeSpan containing the runtime</param>
            <param name="description">Additional optional description to add to the time</param>
            <returns>message of use display of timespan timeframe and description if used</returns>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.TraceOuterExceptionOnly(System.Exception,PX.Objects.AM.PXTraceHelper.ErrorLevel)">
            <summary>
            Only traces an OuterException details if the exception is an OuterException
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.PxTraceOuterException(System.Exception,PX.Objects.AM.PXTraceHelper.ErrorLevel)">
            <summary>
            Record all inner/field messages to the Acumatica trace window in a single trace if the exception is of type PXOuterException
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.PxTraceOuterException(PX.Data.PXOuterException,PX.Objects.AM.PXTraceHelper.ErrorLevel)">
            <summary>
            Record all inner/field messages to the trace window in a single trace. 
            Typical outer exceptions telling the user to review the details without providing the details.
            This call will trace print the details for the user.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.DirtyCacheRecordCounts(PX.Data.PXGraph)">
            <summary>
            Report the cached record changes
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.PXTraceHelper.DirtyCacheRecordCounts(PX.Data.PXGraph,System.Text.StringBuilder)">
            <summary>
            Report the cached record changes
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.PXTreeHelper.GetBomOperFromTreeNodeID(PX.Data.PXGraph,System.String)">
            <summary>
            Translates the tree node ID in reverse to it's <see cref="T:PX.Objects.AM.AMBomOper"/> record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXTreeHelper.IsOperationTreeNode(System.String)">
            <summary>
            Is the given tree node ID an operation node
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXTreeHelper.GetBomMatlFromTreeNodeID(PX.Data.PXGraph,System.String)">
            <summary>
            Translates the tree node ID in reverse to it's <see cref="T:PX.Objects.AM.AMBomMatl"/> record
            </summary>
        </member>
        <member name="M:PX.Objects.AM.TimePeriodHelper.MakeSafeTimePeriod(System.DateTime,System.DateTime)">
            <summary>
            Make a time period where the end date is always greater than the start date.
            This is helpful when working with only times and the end time is an overnight time which makes the time less than the start.
            </summary>
        </member>
        <member name="M:PX.Objects.AM.TimePeriodHelper.PeriodsAreConsecutiveSequence(PX.Objects.AM.TimePeriod,PX.Objects.AM.TimePeriod)">
            <summary>
            Does one period start when the other ends?
            </summary>
            <returns>True if the start of the period is the same as the end of the other</returns>
        </member>
        <member name="M:PX.Objects.AM.TimePeriodHelper.ToConsecutiveSequence(PX.Objects.AM.TimePeriod,PX.Objects.AM.TimePeriod)">
            <summary>
            Given 2 periods we want to transform the periods so they do not overlap
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="P:PX.Objects.AM.UomHelper.QtyDecimalPrecision">
            <summary>
            Quantity Decimal Precision value
            </summary>
            <returns></returns>
        </member>
        <member name="P:PX.Objects.AM.UomHelper.CostDecimalPrecision">
            <summary>
            Cost Decimal Precision value
            </summary>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.UomHelper.HasValidUOM``1(PX.Data.PXCache,System.Object,System.String)">
            <summary>
            Does the provided cache, row, and UOM field have a valid UOM value
            </summary>
        </member>
        <member name="T:PX.Objects.AM.PXExtensionMethods">
            <summary>
            Manufacturing extension methods on PX objects
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToFirstTableList``1(PX.Data.PXResultset{``0})">
            <summary>
            Convert a PXResultset to a list using the primary DAC as the list object
            </summary>
            <returns>List of T</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.LocateElse``1(PX.Data.PXGraph,``0)">
            <summary>
            Locate the row in cache, else return the passed row
            (null safe)
            </summary>
            <typeparam name="T">DAC type</typeparam>
            <param name="graph">cache related to row</param>
            <param name="row">DAC row</param>
            <returns>found in cache row, else passed row</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.LocateElse``1(PX.Data.PXCache,``0)">
            <summary>
            Locate the row in cache, else return the passed row, but put in into cache as NotChanged first
            (null safe)
            </summary>
            <typeparam name="T">DAC type</typeparam>
            <param name="cache">cache related to row</param>
            <param name="row">DAC row</param>
            <returns>found in cache row, else passed row</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.LocateElse``1(System.Collections.Generic.List{``0},PX.Data.PXGraph)">
            <summary>
            LocateElse by multiple rows
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.LocateElseCopy``1(PX.Data.PXCache,``0)">
            <summary>
            Locate the row in cache, else return the passed row and copy the object.
            (null safe)
            </summary>
            <typeparam name="T">DAC type</typeparam>
            <param name="value">cache related to row</param>
            <param name="row">DAC row</param>
            <returns>found in cache row, else passed row</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.LocateElseCopy``1(System.Collections.Generic.List{``0},PX.Data.PXGraph)">
            <summary>
            LocateElseCopy by multiple rows
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToLocatedFirstTableList``1(PX.Data.PXResultset{``0},PX.Data.PXGraph)">
            <summary>
            Convert ResultSet to a list while locating and copying the object(s) in cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToLocatedList``1(PX.Data.PXResultset{``0},PX.Data.PXGraph)">
            <summary>
            Convert ResultSet to a list of PXResults and locate each result in cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToLocatedList``2(PX.Data.PXResultset{``0},PX.Data.PXGraph)">
            <summary>
            Convert ResultSet to a list of PXResults and locate each result in cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToLocatedCopiedFirstTableList``1(PX.Data.PXResultset{``0},PX.Data.PXGraph)">
            <summary>
            Convert ResultSet to a list while locating and copying the object(s) in cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToLocatedCopiedList``1(PX.Data.PXResultset{``0},PX.Data.PXGraph)">
            <summary>
            Convert ResultSet to a list of PXResults while locating and copying the object(s) in cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToLocatedCopiedList``2(PX.Data.PXResultset{``0},PX.Data.PXGraph)">
            <summary>
            Convert ResultSet to a list of PXResults while locating and copying the object(s) in cache
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToList``1(PX.Data.PXResultset{``0})">
            <summary>
            Convert ResultSet to a list of PXResults
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToList``2(PX.Data.PXResultset{``0})">
            <summary>
            Convert ResultSet to a list of PXResults
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToList``3(PX.Data.PXResultset{``0})">
            <summary>
            Convert ResultSet to a list of PXResults
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToList``4(PX.Data.PXResultset{``0})">
            <summary>
            Convert ResultSet to a list of PXResults
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ToList``5(PX.Data.PXResultset{``0})">
            <summary>
            Convert ResultSet to a list of PXResults
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ContainsInsertedCache``1(PX.Data.PXGraph)">
            <summary>
            Does the given graph contain inserted rows of the given type
            </summary>
            <typeparam name="T">BQL Table to check for inserts</typeparam>
            <param name="graph">Graph containing Cache to check</param>
            <returns>True if inserted found</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.ContainsUpdatedCache``1(PX.Data.PXGraph)">
            <summary>
            Does the given graph contain updated rows of the given type
            </summary>
            <typeparam name="T">BQL Table to check for updates</typeparam>
            <param name="graph">Graph containing Cache to check</param>
            <returns>True if updated found</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.GetRowKeyValues``1(``0,PX.Data.PXGraph)">
            <summary>
            Get a given row's IsKey field values as a single string.
            (No key field names included in return)
            </summary>
            <typeparam name="T">IBqlTable</typeparam>
            <param name="row">row data for key values</param>
            <param name="graph">graph with containing cache</param>
            <returns>key values separated by ":" (Ex: "value1:value2:value3")</returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.GetRowKeyValues(PX.Data.PXGraph,System.Object,System.Type)">
            <summary>
            Get a given row's IsKey field values as a single string.
            (No key field names included in return)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsCurrentRowDeleted(PX.Data.PXView)">
            <summary>
            Is the current cache row marked as deleted
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsCurrentRowDeleted(PX.Data.PXCache)">
            <summary>
            Is the current cache row marked as deleted
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsRowDeleted(PX.Data.PXCache,System.Object)">
            <summary>
            Is the given row marked as deleted
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsCurrentRowInserted(PX.Data.PXView)">
            <summary>
            Is the current cache row a new inserted row
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsCurrentRowInserted(PX.Data.PXCache)">
            <summary>
            Is the current cache row a new inserted row
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsRowInserted(PX.Data.PXCache,System.Object)">
            <summary>
            Is the given row a new inserted row
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.GetValueAsDecimal``1(PX.Data.PXCache,System.Object)">
            <summary>
            Get a cache value as decimal. 
            (make sure you know its a decimal field - no checks for exceptions)
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.GetOriginalTstampValue(PX.Data.PXSelectBase,System.Object)">
            <summary>returns the value from instance copy stored in database for Tstamp field</summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.GetOriginalTstampValue(PX.Data.PXCache,System.Object)">
            <summary>returns the value from instance copy stored in database for Tstamp field</summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationEqualTo(PX.Objects.AM.IOperation,PX.Objects.AM.IOperation)">
            <summary>
            Check the operations are equal
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationLessThanOrEqualTo(PX.Objects.AM.IOperation,PX.Objects.AM.IOperation,System.Collections.Generic.IEnumerable{PX.Objects.AM.IOperationMaster})">
            <summary>
            Check the operations are less than or equal to one another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationLessThan(PX.Objects.AM.IOperation,PX.Objects.AM.IOperation,System.Collections.Generic.IEnumerable{PX.Objects.AM.IOperationMaster})">
            <summary>
            Check the operations are less than one another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationGreaterThan(PX.Objects.AM.IOperation,PX.Objects.AM.IOperation,System.Collections.Generic.IEnumerable{PX.Objects.AM.IOperationMaster})">
            <summary>
            Check the operations are less than one another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationLessThan(PX.Objects.AM.IOperationMaster,PX.Objects.AM.IOperationMaster)">
            <summary>
            Check the operations are less than one another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationGreaterThan(PX.Objects.AM.IOperationMaster,PX.Objects.AM.IOperationMaster)">
            <summary>
            Check the operations are greater than one another
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.OperationCompare(PX.Objects.AM.IOperationMaster,PX.Objects.AM.IOperationMaster)">
            <summary>
            Compare operation CD strings
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.CreateCopy``1(``0)">
            <summary>
            Create a cache copy of <typeparamref name="T"/> <br/>
            Equivalent to: "(<typeparamref name="T"/>) PXCache&lt;<typeparamref name="T"/>&gt;.CreateCopy(<paramref name="row"/>)"
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.IsDeleted(PX.Data.PXEntryStatus)">
            <summary>
            Is cache status Deleted or InsertedDeleted
            </summary>
        </member>
        <member name="M:PX.Objects.AM.PXExtensionMethods.SetLocatedCacheCurrent``1(PX.Data.PXGraph,``0)">
            <summary>
            Given the row type set that cache's current row from the located row in cache
            </summary>
            <typeparam name="T">Cache type</typeparam>
            <param name="graph">PXGraph containing cache</param>
            <param name="row">DAC of cache type with keys set. Locate in cache and use as current row</param>
        </member>
        <member name="T:PX.Objects.AM.UniqueStringCollection">
            <summary>
            Collection class to maintain a small unique list of strings (avoiding empties). (Anything over 30 items in a collection can use a HashSet)
            </summary>
        </member>
        <member name="P:PX.Objects.AM.UniqueStringCollection.HasValues">
            <summary>
            Does the collection contain values
            </summary>
        </member>
        <member name="M:PX.Objects.AM.UniqueStringCollection.Add(System.String)">
            <summary>
            Add the string item if not currently in the list and not empty
            </summary>
            <param name="stringValue">String value to be added to the collection</param>
            <returns>True if the item was added</returns>
        </member>
        <member name="P:PX.Objects.AM.UniqueStringCollection.List">
            <summary>
            Get the current list
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
